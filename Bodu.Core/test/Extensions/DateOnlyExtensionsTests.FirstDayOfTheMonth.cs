// ---------------------------------------------------------------------------------------------------------------
// <auto-generated />
// ---------------------------------------------------------------------------------------------------------------

using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Bodu.Extensions;

namespace Bodu.Extensions
{
	public partial class DateOnlyExtensionsTests
	{

		[DataTestMethod]
		[DataRow("2024-04-18", "2024-04-01")]
		[DataRow("2024-01-01", "2024-01-01")] // already first day
		[DataRow("2024-02-29", "2024-02-01")] // leap day
		[DataRow("2023-12-31", "2023-12-01")] // 31-day month
		[DataRow("2023-06-15", "2023-06-01")] // mid-month
		public void FirstDayOfMonth_WhenCalled_ShouldReturnExpectedDate(string inputDate, string expectedDate)
		{
			DateOnly input = DateOnly.Parse(inputDate);
			var expectedt = DateOnly.Parse(expectedDate);
			DateOnly result = input.FirstDayOfMonth();

			Assert.AreEqual(expectedt, result);
		}

		[TestMethod]
		public void FirstDayOfMonth_WhenMinValue_ShouldReturnExpected()
		{
			DateOnly result = DateOnly.MinValue.FirstDayOfMonth();

			Assert.AreEqual(new DateOnly(1, 1, 1), result);
		}

		[TestMethod]
		public void FirstDayOfMonth_WhenMaxValue_ShouldReturnStartOfMaxMonth()
		{
			var maxDate = DateOnly.MaxValue; // 9999-12-31
			DateOnly result = maxDate.FirstDayOfMonth();

			Assert.AreEqual(new DateOnly(9999, 12, 1), result);
		}
	}
}
