using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Bodu.Security.Cryptography
{
	public sealed partial class Pearson
	{
		private static readonly Lazy<byte[]> PearsonTable = new(() =>
		[
			0x01, 0x87, 0x99, 0x17, 0x1C, 0x42, 0x5D, 0x73, 0x67, 0x4A, 0x23, 0x21, 0x24, 0x0C, 0x8A, 0xB9,
			0xE3, 0x4B, 0xC0, 0x2E, 0xA6, 0x5F, 0x4C, 0xF9, 0x0B, 0xDE, 0x1D, 0xB0, 0x6C, 0xA1, 0x1B, 0x88,
			0xC8, 0x09, 0xFA, 0x2F, 0x89, 0x38, 0xA5, 0x7D, 0x61, 0x3C, 0x90, 0x41, 0xD9, 0xA0, 0x0E, 0x5C,
			0xBC, 0x27, 0xF8, 0x92, 0x45, 0x40, 0x62, 0xA9, 0xB8, 0x0D, 0x44, 0x54, 0x26, 0xB2, 0x7B, 0x7F,
			0xEE, 0x8C, 0xC1, 0x86, 0xA2, 0xB3, 0x3A, 0x0F, 0x74, 0x50, 0xC2, 0xFF, 0x6F, 0xEA, 0x69, 0x20,
			0x36, 0xE1, 0xE8, 0x99, 0x2D, 0x6A, 0xBF, 0x60, 0x2A, 0xD4, 0x25, 0xCA, 0x91, 0xC4, 0x55, 0x30,
			0xA4, 0xB1, 0xE5, 0x28, 0x33, 0x8E, 0xD3, 0x31, 0x6D, 0xFD, 0x78, 0xC9, 0x12, 0xF6, 0xF5, 0x37,
			0xDC, 0x0A, 0x4F, 0xC6, 0x3B, 0xD2, 0xEF, 0xA3, 0x46, 0x22, 0x4E, 0x3D, 0x57, 0xAA, 0x72, 0x63,
			0xA7, 0x5E, 0x43, 0xE0, 0x93, 0x39, 0x07, 0x6B, 0xF2, 0xE6, 0xCE, 0xB7, 0x95, 0x94, 0xD5, 0xF7,
			0xD7, 0x76, 0xB6, 0xBE, 0xC5, 0x34, 0x64, 0xF4, 0x10, 0x83, 0xCD, 0xF3, 0xAD, 0x66, 0xA8, 0x3F,
			0xE9, 0x9B, 0x19, 0x58, 0x6E, 0xA1, 0x18, 0x8B, 0xA0, 0x03, 0x70, 0x97, 0x9F, 0xBA, 0xC7, 0x15,
			0x7E, 0x53, 0x32, 0x56, 0xDB, 0xD0, 0xF1, 0xB4, 0x71, 0x68, 0xE4, 0x84, 0x77, 0xFE, 0xBB, 0x11,
			0xC3, 0x13, 0xE2, 0x59, 0xD8, 0xD6, 0x9A, 0xB5, 0xC1, 0xEB, 0x5B, 0x02, 0x00, 0x7A, 0x98, 0x75,
			0xDF, 0x96, 0x29, 0xD1, 0x48, 0xE7, 0xAF, 0x47, 0x06, 0x9D, 0x1E, 0x1A, 0x5A, 0x14, 0xAC, 0x49,
			0x16, 0x79, 0xBA, 0x8D, 0xB0, 0x2C, 0x35, 0x85, 0xDD, 0x7C, 0x52, 0x9C, 0x80, 0x1F, 0x08, 0xD1,
			0x8F, 0x2B, 0x9E, 0xED, 0x17, 0xC8, 0xD9, 0xC0, 0xF0, 0x81, 0x1C, 0x26, 0x0E, 0xEC, 0x04, 0x35
		]);

		private static readonly Lazy<byte[]> AESSBoxTable = new(() =>
		[
			0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76,
			0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0,
			0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,
			0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75,
			0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84,
			0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,
			0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8,
			0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2,
			0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,
			0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb,
			0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79,
			0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,
			0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a,
			0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e,
			0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,
			0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16,
		]);

		private static readonly Lazy<byte[]> CRC32HighByteTable = new(() =>
		[
			0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
			0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
			0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
			0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
			0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
			0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
			0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
			0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
			0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
			0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
			0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
			0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
			0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
			0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
			0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
			0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40
		]);

		private static readonly Lazy<byte[]> SHA256ConstantsTable = new(() =>
		[
			0x6A, 0xBB, 0x3C, 0x5A, 0x51, 0xA0, 0x98, 0x7E, 0xCF, 0x90, 0x59, 0xAB, 0x3E, 0xB2, 0x44, 0x56,
			0xC6, 0x3B, 0xE9, 0x3E, 0xE5, 0x56, 0xC1, 0xCE, 0xBF, 0xCA, 0xC6, 0xA4, 0x84, 0x4F, 0xBD, 0x78,
			0xE0, 0x1F, 0x4A, 0xFC, 0x5B, 0xDC, 0xF1, 0x18, 0x27, 0xA1, 0x9C, 0x26, 0xB6, 0xD3, 0x43, 0x5D,
			0x72, 0x50, 0x1E, 0x0B, 0x7F, 0xD6, 0x57, 0x3D, 0x24, 0x73, 0x9F, 0x62, 0x58, 0x41, 0xC8, 0xE0,
			0xCC, 0xF4, 0xD1, 0x58, 0x9E, 0x8D, 0x2C, 0x1B, 0x19, 0x5A, 0x01, 0x73, 0x2B, 0xB5, 0x08, 0xA3,
			0xF4, 0x52, 0x16, 0x2A, 0x5C, 0xB7, 0x55, 0x80, 0xA2, 0xB4, 0xC3, 0xA5, 0xB1, 0x01, 0x20, 0x02,
			0xD2, 0xC4, 0x54, 0xFE, 0x12, 0xB2, 0x6F, 0x8A, 0x2E, 0xA7, 0x79, 0x3E, 0x37, 0xB0, 0xDA, 0xC7,
			0x5A, 0xE9, 0xBD, 0xDB, 0x91, 0xB6, 0x0D, 0x54, 0x65, 0x3C, 0xFF, 0x5B, 0xAD, 0xB2, 0x64, 0xF5,
			0x5A, 0x3C, 0xC6, 0xD0, 0x6F, 0xA9, 0xF5, 0x62, 0xA3, 0x7F, 0xBF, 0x3A, 0x06, 0x12, 0x7F, 0x45,
			0xB8, 0x65, 0xF8, 0x1B, 0x8C, 0x38, 0x71, 0xAA, 0xB3, 0x3D, 0xDF, 0xE0, 0xAB, 0xC2, 0x11, 0x07,
			0xB9, 0x5F, 0x26, 0x91, 0xDC, 0x38, 0xFC, 0x64, 0x90, 0xC9, 0xA2, 0x3C, 0x8E, 0x4E, 0xA3, 0x97,
			0x1F, 0xC2, 0x97, 0xF3, 0x31, 0x5F, 0x6F, 0xF0, 0xB1, 0x85, 0xE8, 0x73, 0x7A, 0xE4, 0xD0, 0x10,
			0x16, 0xA7, 0x89, 0x07, 0x1A, 0xE2, 0xBE, 0x24, 0x4B, 0x98, 0x67, 0x92, 0xB1, 0xF4, 0x10, 0x18,
			0x96, 0xF5, 0xF2, 0xA5, 0x07, 0xF2, 0xC2, 0x10, 0x97, 0x13, 0x9B, 0x2C, 0xB3, 0xB2, 0x49, 0xC5,
			0x6A, 0x3B, 0xC9, 0x51, 0x0B, 0xD3, 0xBA, 0x20, 0xFA, 0xEF, 0x2D, 0x44, 0x4C, 0x99, 0x1A, 0x3D,
			0xAB, 0xC7, 0x76, 0xE4, 0x23, 0xA0, 0xB0, 0x01, 0x69, 0x75, 0x1A, 0x89, 0x91, 0x57, 0x14, 0xC7
		]);
	}
}