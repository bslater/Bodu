### YamlMime:ManagedReference
items:
- uid: Bodu.Security.Cryptography.CrcStandard
  commentId: T:Bodu.Security.Cryptography.CrcStandard
  id: CrcStandard
  parent: Bodu.Security.Cryptography
  children:
  - Bodu.Security.Cryptography.CrcStandard.#ctor(System.String,System.Int32,System.UInt64,System.UInt64,System.Boolean,System.Boolean,System.UInt64)
  - Bodu.Security.Cryptography.CrcStandard.ARC
  - Bodu.Security.Cryptography.CrcStandard.BCRC32
  - Bodu.Security.Cryptography.CrcStandard.CKSUM
  - Bodu.Security.Cryptography.CrcStandard.CRC10
  - Bodu.Security.Cryptography.CrcStandard.CRC10_ATM
  - Bodu.Security.Cryptography.CrcStandard.CRC10_CDMA2000
  - Bodu.Security.Cryptography.CrcStandard.CRC10_GSM
  - Bodu.Security.Cryptography.CrcStandard.CRC10_I610
  - Bodu.Security.Cryptography.CrcStandard.CRC11
  - Bodu.Security.Cryptography.CrcStandard.CRC11_FLEXRAY
  - Bodu.Security.Cryptography.CrcStandard.CRC11_UMTS
  - Bodu.Security.Cryptography.CrcStandard.CRC12_3GPP
  - Bodu.Security.Cryptography.CrcStandard.CRC12_CDMA2000
  - Bodu.Security.Cryptography.CrcStandard.CRC12_DECT
  - Bodu.Security.Cryptography.CrcStandard.CRC12_GSM
  - Bodu.Security.Cryptography.CrcStandard.CRC12_UMTS
  - Bodu.Security.Cryptography.CrcStandard.CRC13_BBC
  - Bodu.Security.Cryptography.CrcStandard.CRC14_DARC
  - Bodu.Security.Cryptography.CrcStandard.CRC14_GSM
  - Bodu.Security.Cryptography.CrcStandard.CRC15
  - Bodu.Security.Cryptography.CrcStandard.CRC15_CAN
  - Bodu.Security.Cryptography.CrcStandard.CRC15_MPT1327
  - Bodu.Security.Cryptography.CrcStandard.CRC16
  - Bodu.Security.Cryptography.CrcStandard.CRC16_ACORN
  - Bodu.Security.Cryptography.CrcStandard.CRC16_ARC
  - Bodu.Security.Cryptography.CrcStandard.CRC16_AUGCCITT
  - Bodu.Security.Cryptography.CrcStandard.CRC16_AUTOSAR
  - Bodu.Security.Cryptography.CrcStandard.CRC16_BUYPASS
  - Bodu.Security.Cryptography.CrcStandard.CRC16_CCITT
  - Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTFALSE
  - Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTTRUE
  - Bodu.Security.Cryptography.CrcStandard.CRC16_CDMA2000
  - Bodu.Security.Cryptography.CrcStandard.CRC16_CMS
  - Bodu.Security.Cryptography.CrcStandard.CRC16_DARC
  - Bodu.Security.Cryptography.CrcStandard.CRC16_DDS110
  - Bodu.Security.Cryptography.CrcStandard.CRC16_DECTR
  - Bodu.Security.Cryptography.CrcStandard.CRC16_DECTX
  - Bodu.Security.Cryptography.CrcStandard.CRC16_DNP
  - Bodu.Security.Cryptography.CrcStandard.CRC16_EN13757
  - Bodu.Security.Cryptography.CrcStandard.CRC16_EPC
  - Bodu.Security.Cryptography.CrcStandard.CRC16_EPCC1G2
  - Bodu.Security.Cryptography.CrcStandard.CRC16_GENIBUS
  - Bodu.Security.Cryptography.CrcStandard.CRC16_GSM
  - Bodu.Security.Cryptography.CrcStandard.CRC16_IBM3740
  - Bodu.Security.Cryptography.CrcStandard.CRC16_IBMSDLC
  - Bodu.Security.Cryptography.CrcStandard.CRC16_ICODE
  - Bodu.Security.Cryptography.CrcStandard.CRC16_IEC611582
  - Bodu.Security.Cryptography.CrcStandard.CRC16_ISOHDLC
  - Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433A
  - Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433B
  - Bodu.Security.Cryptography.CrcStandard.CRC16_KERMIT
  - Bodu.Security.Cryptography.CrcStandard.CRC16_LHA
  - Bodu.Security.Cryptography.CrcStandard.CRC16_LJ1200
  - Bodu.Security.Cryptography.CrcStandard.CRC16_LTE
  - Bodu.Security.Cryptography.CrcStandard.CRC16_M17
  - Bodu.Security.Cryptography.CrcStandard.CRC16_MAXIM
  - Bodu.Security.Cryptography.CrcStandard.CRC16_MAXIMDOW
  - Bodu.Security.Cryptography.CrcStandard.CRC16_MCRF4XX
  - Bodu.Security.Cryptography.CrcStandard.CRC16_MODBUS
  - Bodu.Security.Cryptography.CrcStandard.CRC16_NRSC5
  - Bodu.Security.Cryptography.CrcStandard.CRC16_OPENSAFETYA
  - Bodu.Security.Cryptography.CrcStandard.CRC16_OPENSAFETYB
  - Bodu.Security.Cryptography.CrcStandard.CRC16_PROFIBUS
  - Bodu.Security.Cryptography.CrcStandard.CRC16_RIELLO
  - Bodu.Security.Cryptography.CrcStandard.CRC16_SPIFUJITSU
  - Bodu.Security.Cryptography.CrcStandard.CRC16_T10DIF
  - Bodu.Security.Cryptography.CrcStandard.CRC16_TELEDISK
  - Bodu.Security.Cryptography.CrcStandard.CRC16_TMS37157
  - Bodu.Security.Cryptography.CrcStandard.CRC16_UMTS
  - Bodu.Security.Cryptography.CrcStandard.CRC16_USB
  - Bodu.Security.Cryptography.CrcStandard.CRC16_V41LSB
  - Bodu.Security.Cryptography.CrcStandard.CRC16_V41MSB
  - Bodu.Security.Cryptography.CrcStandard.CRC16_VERIFONE
  - Bodu.Security.Cryptography.CrcStandard.CRC16_X25
  - Bodu.Security.Cryptography.CrcStandard.CRC16_XMODEM
  - Bodu.Security.Cryptography.CrcStandard.CRC17_CANFD
  - Bodu.Security.Cryptography.CrcStandard.CRC21_CANFD
  - Bodu.Security.Cryptography.CrcStandard.CRC24
  - Bodu.Security.Cryptography.CrcStandard.CRC24_BLE
  - Bodu.Security.Cryptography.CrcStandard.CRC24_FLEXRAYA
  - Bodu.Security.Cryptography.CrcStandard.CRC24_FLEXRAYB
  - Bodu.Security.Cryptography.CrcStandard.CRC24_INTERLAKEN
  - Bodu.Security.Cryptography.CrcStandard.CRC24_LTEA
  - Bodu.Security.Cryptography.CrcStandard.CRC24_LTEB
  - Bodu.Security.Cryptography.CrcStandard.CRC24_OPENPGP
  - Bodu.Security.Cryptography.CrcStandard.CRC24_OS9
  - Bodu.Security.Cryptography.CrcStandard.CRC30_CDMA
  - Bodu.Security.Cryptography.CrcStandard.CRC31_PHILIPS
  - Bodu.Security.Cryptography.CrcStandard.CRC32
  - Bodu.Security.Cryptography.CrcStandard.CRC32C
  - Bodu.Security.Cryptography.CrcStandard.CRC32D
  - Bodu.Security.Cryptography.CrcStandard.CRC32Q
  - Bodu.Security.Cryptography.CrcStandard.CRC32_AAL5
  - Bodu.Security.Cryptography.CrcStandard.CRC32_ADCCP
  - Bodu.Security.Cryptography.CrcStandard.CRC32_AIXM
  - Bodu.Security.Cryptography.CrcStandard.CRC32_AUTOSAR
  - Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91C
  - Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91D
  - Bodu.Security.Cryptography.CrcStandard.CRC32_BZIP2
  - Bodu.Security.Cryptography.CrcStandard.CRC32_CASTAGNOLI
  - Bodu.Security.Cryptography.CrcStandard.CRC32_CDROMEDC
  - Bodu.Security.Cryptography.CrcStandard.CRC32_CKSUM
  - Bodu.Security.Cryptography.CrcStandard.CRC32_DECTB
  - Bodu.Security.Cryptography.CrcStandard.CRC32_INTERLAKEN
  - Bodu.Security.Cryptography.CrcStandard.CRC32_ISCSI
  - Bodu.Security.Cryptography.CrcStandard.CRC32_ISOHDLC
  - Bodu.Security.Cryptography.CrcStandard.CRC32_JAMCRC
  - Bodu.Security.Cryptography.CrcStandard.CRC32_MEF
  - Bodu.Security.Cryptography.CrcStandard.CRC32_MPEG2
  - Bodu.Security.Cryptography.CrcStandard.CRC32_POSIX
  - Bodu.Security.Cryptography.CrcStandard.CRC32_V42
  - Bodu.Security.Cryptography.CrcStandard.CRC32_XFER
  - Bodu.Security.Cryptography.CrcStandard.CRC32_XZ
  - Bodu.Security.Cryptography.CrcStandard.CRC3_GSM
  - Bodu.Security.Cryptography.CrcStandard.CRC3_ROHC
  - Bodu.Security.Cryptography.CrcStandard.CRC40_GSM
  - Bodu.Security.Cryptography.CrcStandard.CRC4_G704
  - Bodu.Security.Cryptography.CrcStandard.CRC4_INTERLAKEN
  - Bodu.Security.Cryptography.CrcStandard.CRC4_ITU
  - Bodu.Security.Cryptography.CrcStandard.CRC5_EPC
  - Bodu.Security.Cryptography.CrcStandard.CRC5_EPCC1G2
  - Bodu.Security.Cryptography.CrcStandard.CRC5_G704
  - Bodu.Security.Cryptography.CrcStandard.CRC5_ITU
  - Bodu.Security.Cryptography.CrcStandard.CRC5_USB
  - Bodu.Security.Cryptography.CrcStandard.CRC64
  - Bodu.Security.Cryptography.CrcStandard.CRC64_ECMA182
  - Bodu.Security.Cryptography.CrcStandard.CRC64_GOECMA
  - Bodu.Security.Cryptography.CrcStandard.CRC64_GOISO
  - Bodu.Security.Cryptography.CrcStandard.CRC64_JONES
  - Bodu.Security.Cryptography.CrcStandard.CRC64_MS
  - Bodu.Security.Cryptography.CrcStandard.CRC64_WE
  - Bodu.Security.Cryptography.CrcStandard.CRC64_XZ
  - Bodu.Security.Cryptography.CrcStandard.CRC6_CDMA2000A
  - Bodu.Security.Cryptography.CrcStandard.CRC6_CDMA2000B
  - Bodu.Security.Cryptography.CrcStandard.CRC6_DARC
  - Bodu.Security.Cryptography.CrcStandard.CRC6_G704
  - Bodu.Security.Cryptography.CrcStandard.CRC6_GSM
  - Bodu.Security.Cryptography.CrcStandard.CRC6_ITU
  - Bodu.Security.Cryptography.CrcStandard.CRC7
  - Bodu.Security.Cryptography.CrcStandard.CRC7_MMC
  - Bodu.Security.Cryptography.CrcStandard.CRC7_ROHC
  - Bodu.Security.Cryptography.CrcStandard.CRC7_UMTS
  - Bodu.Security.Cryptography.CrcStandard.CRC8
  - Bodu.Security.Cryptography.CrcStandard.CRC8_AES
  - Bodu.Security.Cryptography.CrcStandard.CRC8_AUTOSAR
  - Bodu.Security.Cryptography.CrcStandard.CRC8_BLUETOOTH
  - Bodu.Security.Cryptography.CrcStandard.CRC8_CDMA2000
  - Bodu.Security.Cryptography.CrcStandard.CRC8_DARC
  - Bodu.Security.Cryptography.CrcStandard.CRC8_DVBS2
  - Bodu.Security.Cryptography.CrcStandard.CRC8_EBU
  - Bodu.Security.Cryptography.CrcStandard.CRC8_GSMA
  - Bodu.Security.Cryptography.CrcStandard.CRC8_GSMB
  - Bodu.Security.Cryptography.CrcStandard.CRC8_HITAG
  - Bodu.Security.Cryptography.CrcStandard.CRC8_I4321
  - Bodu.Security.Cryptography.CrcStandard.CRC8_ICODE
  - Bodu.Security.Cryptography.CrcStandard.CRC8_ITU
  - Bodu.Security.Cryptography.CrcStandard.CRC8_LTE
  - Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIM
  - Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIMDOW
  - Bodu.Security.Cryptography.CrcStandard.CRC8_MIFAREMAD
  - Bodu.Security.Cryptography.CrcStandard.CRC8_NRSC5
  - Bodu.Security.Cryptography.CrcStandard.CRC8_OPENSAFETY
  - Bodu.Security.Cryptography.CrcStandard.CRC8_ROHC
  - Bodu.Security.Cryptography.CrcStandard.CRC8_SAEJ1850
  - Bodu.Security.Cryptography.CrcStandard.CRC8_SMBUS
  - Bodu.Security.Cryptography.CrcStandard.CRC8_TECH3250
  - Bodu.Security.Cryptography.CrcStandard.CRC8_WCDMA
  - Bodu.Security.Cryptography.CrcStandard.CRCA
  - Bodu.Security.Cryptography.CrcStandard.CRCB
  - Bodu.Security.Cryptography.CrcStandard.CRCCCITT
  - Bodu.Security.Cryptography.CrcStandard.CRCIBM
  - Bodu.Security.Cryptography.CrcStandard.DOWCRC
  - Bodu.Security.Cryptography.CrcStandard.Equals(Bodu.Security.Cryptography.CrcStandard)
  - Bodu.Security.Cryptography.CrcStandard.Equals(System.Object)
  - Bodu.Security.Cryptography.CrcStandard.GetCrcParameters(System.String)
  - Bodu.Security.Cryptography.CrcStandard.GetHashCode
  - Bodu.Security.Cryptography.CrcStandard.InitialValue
  - Bodu.Security.Cryptography.CrcStandard.JAMCRC
  - Bodu.Security.Cryptography.CrcStandard.KERMIT
  - Bodu.Security.Cryptography.CrcStandard.MODBUS
  - Bodu.Security.Cryptography.CrcStandard.MaxSize
  - Bodu.Security.Cryptography.CrcStandard.MinSize
  - Bodu.Security.Cryptography.CrcStandard.Name
  - Bodu.Security.Cryptography.CrcStandard.PKZIP
  - Bodu.Security.Cryptography.CrcStandard.Polynomial
  - Bodu.Security.Cryptography.CrcStandard.RCRC16
  - Bodu.Security.Cryptography.CrcStandard.ReflectIn
  - Bodu.Security.Cryptography.CrcStandard.ReflectOut
  - Bodu.Security.Cryptography.CrcStandard.Size
  - Bodu.Security.Cryptography.CrcStandard.X25
  - Bodu.Security.Cryptography.CrcStandard.XCRC12
  - Bodu.Security.Cryptography.CrcStandard.XCRC16
  - Bodu.Security.Cryptography.CrcStandard.XFER
  - Bodu.Security.Cryptography.CrcStandard.XMODEM
  - Bodu.Security.Cryptography.CrcStandard.XOrOut
  - Bodu.Security.Cryptography.CrcStandard.ZMODEM
  langs:
  - csharp
  - vb
  name: CrcStandard
  nameWithType: CrcStandard
  fullName: Bodu.Security.Cryptography.CrcStandard
  type: Class
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CrcStandard
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 15
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: >-
    Represents the configuration settings for a CRC algorithm, including parameters like polynomial, initial value, reflection settings,

    and more.
  example: []
  syntax:
    content: >-
      [Serializable]

      public sealed class CrcStandard : ISerializable, IEquatable<CrcStandard>
    content.vb: >-
      <Serializable>

      Public NotInheritable Class CrcStandard Implements ISerializable, IEquatable(Of CrcStandard)
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.ISerializable
  - System.IEquatable{Bodu.Security.Cryptography.CrcStandard}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Bodu.Security.Cryptography.CrcStandard.Bodu.Extensions.NumericExtensions.GetBytes``1(System.Boolean)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Bodu.Security.Cryptography.CrcStandard.MaxSize
  commentId: F:Bodu.Security.Cryptography.CrcStandard.MaxSize
  id: MaxSize
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: MaxSize
  nameWithType: CrcStandard.MaxSize
  fullName: Bodu.Security.Cryptography.CrcStandard.MaxSize
  type: Field
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: MaxSize
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.cs
    startLine: 24
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: The maximum size allowed for a CRC standard (in bits).
  example: []
  syntax:
    content: public const int MaxSize = 64
    return:
      type: System.Int32
    content.vb: Public Const MaxSize As Integer = 64
- uid: Bodu.Security.Cryptography.CrcStandard.MinSize
  commentId: F:Bodu.Security.Cryptography.CrcStandard.MinSize
  id: MinSize
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: MinSize
  nameWithType: CrcStandard.MinSize
  fullName: Bodu.Security.Cryptography.CrcStandard.MinSize
  type: Field
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: MinSize
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.cs
    startLine: 29
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: The minimum size allowed for a CRC standard (in bits).
  example: []
  syntax:
    content: public const int MinSize = 1
    return:
      type: System.Int32
    content.vb: Public Const MinSize As Integer = 1
- uid: Bodu.Security.Cryptography.CrcStandard.#ctor(System.String,System.Int32,System.UInt64,System.UInt64,System.Boolean,System.Boolean,System.UInt64)
  commentId: M:Bodu.Security.Cryptography.CrcStandard.#ctor(System.String,System.Int32,System.UInt64,System.UInt64,System.Boolean,System.Boolean,System.UInt64)
  id: '#ctor(System.String,System.Int32,System.UInt64,System.UInt64,System.Boolean,System.Boolean,System.UInt64)'
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CrcStandard(string, int, ulong, ulong, bool, bool, ulong)
  nameWithType: CrcStandard.CrcStandard(string, int, ulong, ulong, bool, bool, ulong)
  fullName: Bodu.Security.Cryptography.CrcStandard.CrcStandard(string, int, ulong, ulong, bool, bool, ulong)
  type: Constructor
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: .ctor
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.cs
    startLine: 43
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Initializes a new instance of the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> class with the specified parameters.
  example: []
  syntax:
    content: public CrcStandard(string name, int size, ulong polynomial, ulong initialValue, bool reflectIn, bool reflectOut, ulong xOrOut)
    parameters:
    - id: name
      type: System.String
      description: The name of the CRC standard.
    - id: size
      type: System.Int32
      description: The size, in bits, of the CRC checksum.
    - id: polynomial
      type: System.UInt64
      description: The CRC polynomial value.
    - id: initialValue
      type: System.UInt64
      description: The initial value used for the CRC calculation.
    - id: reflectIn
      type: System.Boolean
      description: Indicates whether to reflect the input during the CRC calculation.
    - id: reflectOut
      type: System.Boolean
      description: Indicates whether to reflect the output during the CRC calculation.
    - id: xOrOut
      type: System.UInt64
      description: The value to XOR the final output with.
    content.vb: Public Sub New(name As String, size As Integer, polynomial As ULong, initialValue As ULong, reflectIn As Boolean, reflectOut As Boolean, xOrOut As ULong)
  overload: Bodu.Security.Cryptography.CrcStandard.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if <code class="paramref">name</code> is null or empty.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Thrown if <code class="paramref">size</code> is outside the valid range.
  nameWithType.vb: CrcStandard.New(String, Integer, ULong, ULong, Boolean, Boolean, ULong)
  fullName.vb: Bodu.Security.Cryptography.CrcStandard.New(String, Integer, ULong, ULong, Boolean, Boolean, ULong)
  name.vb: New(String, Integer, ULong, ULong, Boolean, Boolean, ULong)
- uid: Bodu.Security.Cryptography.CrcStandard.Name
  commentId: P:Bodu.Security.Cryptography.CrcStandard.Name
  id: Name
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: CrcStandard.Name
  fullName: Bodu.Security.Cryptography.CrcStandard.Name
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: Name
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.cs
    startLine: 74
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the name of the CRC standard.
  example: []
  syntax:
    content: public string Name { get; init; }
    parameters: []
    return:
      type: System.String
      description: The name of the CRC algorithm.
    content.vb: Public Property Name As String
  overload: Bodu.Security.Cryptography.CrcStandard.Name*
- uid: Bodu.Security.Cryptography.CrcStandard.Size
  commentId: P:Bodu.Security.Cryptography.CrcStandard.Size
  id: Size
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: CrcStandard.Size
  fullName: Bodu.Security.Cryptography.CrcStandard.Size
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: Size
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.cs
    startLine: 80
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the size, in bits, of the CRC checksum.
  example: []
  syntax:
    content: public int Size { get; init; }
    parameters: []
    return:
      type: System.Int32
      description: The size of the CRC in bits.
    content.vb: Public Property Size As Integer
  overload: Bodu.Security.Cryptography.CrcStandard.Size*
- uid: Bodu.Security.Cryptography.CrcStandard.Polynomial
  commentId: P:Bodu.Security.Cryptography.CrcStandard.Polynomial
  id: Polynomial
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: Polynomial
  nameWithType: CrcStandard.Polynomial
  fullName: Bodu.Security.Cryptography.CrcStandard.Polynomial
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: Polynomial
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.cs
    startLine: 86
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the polynomial used in the CRC calculation.
  example: []
  syntax:
    content: public ulong Polynomial { get; init; }
    parameters: []
    return:
      type: System.UInt64
      description: The polynomial value used in the CRC calculation.
    content.vb: Public Property Polynomial As ULong
  overload: Bodu.Security.Cryptography.CrcStandard.Polynomial*
- uid: Bodu.Security.Cryptography.CrcStandard.InitialValue
  commentId: P:Bodu.Security.Cryptography.CrcStandard.InitialValue
  id: InitialValue
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: InitialValue
  nameWithType: CrcStandard.InitialValue
  fullName: Bodu.Security.Cryptography.CrcStandard.InitialValue
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: InitialValue
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.cs
    startLine: 92
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the initial value used in the CRC calculation.
  example: []
  syntax:
    content: public ulong InitialValue { get; init; }
    parameters: []
    return:
      type: System.UInt64
      description: The initial value for the CRC calculation.
    content.vb: Public Property InitialValue As ULong
  overload: Bodu.Security.Cryptography.CrcStandard.InitialValue*
- uid: Bodu.Security.Cryptography.CrcStandard.ReflectIn
  commentId: P:Bodu.Security.Cryptography.CrcStandard.ReflectIn
  id: ReflectIn
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: ReflectIn
  nameWithType: CrcStandard.ReflectIn
  fullName: Bodu.Security.Cryptography.CrcStandard.ReflectIn
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: ReflectIn
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.cs
    startLine: 98
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets a value indicating whether the input data is reflected during the CRC calculation.
  example: []
  syntax:
    content: public bool ReflectIn { get; init; }
    parameters: []
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if input data is reflected; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Property ReflectIn As Boolean
  overload: Bodu.Security.Cryptography.CrcStandard.ReflectIn*
- uid: Bodu.Security.Cryptography.CrcStandard.ReflectOut
  commentId: P:Bodu.Security.Cryptography.CrcStandard.ReflectOut
  id: ReflectOut
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: ReflectOut
  nameWithType: CrcStandard.ReflectOut
  fullName: Bodu.Security.Cryptography.CrcStandard.ReflectOut
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: ReflectOut
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.cs
    startLine: 104
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets a value indicating whether the CRC result is reflected before XORing with <xref href="Bodu.Security.Cryptography.CrcStandard.XOrOut" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool ReflectOut { get; init; }
    parameters: []
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the result is reflected; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Property ReflectOut As Boolean
  overload: Bodu.Security.Cryptography.CrcStandard.ReflectOut*
- uid: Bodu.Security.Cryptography.CrcStandard.XOrOut
  commentId: P:Bodu.Security.Cryptography.CrcStandard.XOrOut
  id: XOrOut
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: XOrOut
  nameWithType: CrcStandard.XOrOut
  fullName: Bodu.Security.Cryptography.CrcStandard.XOrOut
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: XOrOut
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.cs
    startLine: 110
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the value to XOR the final CRC result with.
  example: []
  syntax:
    content: public ulong XOrOut { get; init; }
    parameters: []
    return:
      type: System.UInt64
      description: The XOR value for the final CRC result.
    content.vb: Public Property XOrOut As ULong
  overload: Bodu.Security.Cryptography.CrcStandard.XOrOut*
- uid: Bodu.Security.Cryptography.CrcStandard.Equals(Bodu.Security.Cryptography.CrcStandard)
  commentId: M:Bodu.Security.Cryptography.CrcStandard.Equals(Bodu.Security.Cryptography.CrcStandard)
  id: Equals(Bodu.Security.Cryptography.CrcStandard)
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: Equals(CrcStandard)
  nameWithType: CrcStandard.Equals(CrcStandard)
  fullName: Bodu.Security.Cryptography.CrcStandard.Equals(Bodu.Security.Cryptography.CrcStandard)
  type: Method
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: Equals
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.cs
    startLine: 117
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Determines whether the current <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object is equal to another <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object.
  example: []
  syntax:
    content: public bool Equals(CrcStandard other)
    parameters:
    - id: other
      type: Bodu.Security.Cryptography.CrcStandard
      description: The other <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object to compare.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the two objects are equal; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As CrcStandard) As Boolean
  overload: Bodu.Security.Cryptography.CrcStandard.Equals*
  implements:
  - System.IEquatable{Bodu.Security.Cryptography.CrcStandard}.Equals(Bodu.Security.Cryptography.CrcStandard)
- uid: Bodu.Security.Cryptography.CrcStandard.Equals(System.Object)
  commentId: M:Bodu.Security.Cryptography.CrcStandard.Equals(System.Object)
  id: Equals(System.Object)
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: CrcStandard.Equals(object)
  fullName: Bodu.Security.Cryptography.CrcStandard.Equals(object)
  type: Method
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: Equals
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.cs
    startLine: 127
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Determines whether the specified object is equal to the current object.
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified object  is equal to the current object; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Bodu.Security.Cryptography.CrcStandard.Equals*
  nameWithType.vb: CrcStandard.Equals(Object)
  fullName.vb: Bodu.Security.Cryptography.CrcStandard.Equals(Object)
  name.vb: Equals(Object)
- uid: Bodu.Security.Cryptography.CrcStandard.GetHashCode
  commentId: M:Bodu.Security.Cryptography.CrcStandard.GetHashCode
  id: GetHashCode
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: CrcStandard.GetHashCode()
  fullName: Bodu.Security.Cryptography.CrcStandard.GetHashCode()
  type: Method
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: GetHashCode
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.cs
    startLine: 131
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Serves as the default hash function.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current object.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: Bodu.Security.Cryptography.CrcStandard.GetHashCode*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC3_GSM
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC3_GSM
  id: CRC3_GSM
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC3_GSM
  nameWithType: CrcStandard.CRC3_GSM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC3_GSM
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC3_GSM
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1235
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-3/GSM</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-3/GSM</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-3/GSM</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-3-gsm">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 17 February 2017), with the following definition.</p>

    <p>

    <ul><li>Width: <code>3</code></li><li>Polynomial: <code>0x03</code></li><li>Initial Value: <code>0x00</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x07</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC3_GSM { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-3/GSM</code> definition.
    content.vb: Public Shared ReadOnly Property CRC3_GSM As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC3_GSM*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC3_ROHC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC3_ROHC
  id: CRC3_ROHC
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC3_ROHC
  nameWithType: CrcStandard.CRC3_ROHC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC3_ROHC
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC3_ROHC
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1253
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-3/ROHC</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-3/ROHC</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-3/ROHC</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-3-rohc">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 14 December 2009, Updated: 6 February 2017), with the following definition.</p>

    <p>

    <ul><li>Width: <code>3</code></li><li>Polynomial: <code>0x03</code></li><li>Initial Value: <code>0x07</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x00</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC3_ROHC { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-3/ROHC</code> definition.
    content.vb: Public Shared ReadOnly Property CRC3_ROHC As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC3_ROHC*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC4_G704
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC4_G704
  id: CRC4_G704
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC4_G704
  nameWithType: CrcStandard.CRC4_G704
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC4_G704
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC4_G704
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1276
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-4/G-704</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-4/G-704</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-4/G-704</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-4-g-704">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 7 October 2008, Updated: 21 November 2018), with the following definition.</p>

    <p>

    <ul><li>Width: <code>4</code></li><li>Polynomial: <code>0x03</code></li><li>Initial Value: <code>0x00</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x00</code></li></ul>

    </p>

    <p>The <code>CRC-4/G-704</code> standard is also known by the alias <code>CRC-4/ITU</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC4_G704 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-4/G-704</code> definition.
    content.vb: Public Shared ReadOnly Property CRC4_G704 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC4_G704*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC4_ITU
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC4_ITU
- uid: Bodu.Security.Cryptography.CrcStandard.CRC4_ITU
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC4_ITU
  id: CRC4_ITU
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC4_ITU
  nameWithType: CrcStandard.CRC4_ITU
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC4_ITU
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC4_ITU
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1284
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-4/G-704</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC4_ITU</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC4_G704" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC4_ITU { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-4/ITU</code> definition.
    content.vb: Public Shared ReadOnly Property CRC4_ITU As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC4_ITU*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC4_G704
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC4_G704
- uid: Bodu.Security.Cryptography.CrcStandard.CRC4_INTERLAKEN
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC4_INTERLAKEN
  id: CRC4_INTERLAKEN
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC4_INTERLAKEN
  nameWithType: CrcStandard.CRC4_INTERLAKEN
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC4_INTERLAKEN
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC4_INTERLAKEN
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1303
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-4/INTERLAKEN</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-4/INTERLAKEN</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-4/INTERLAKEN</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-4-interlaken">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 10 February 2016, Updated: 28 December 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>4</code></li><li>Polynomial: <code>0x03</code></li><li>Initial Value: <code>0x0F</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x0F</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC4_INTERLAKEN { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-4/INTERLAKEN</code> definition.
    content.vb: Public Shared ReadOnly Property CRC4_INTERLAKEN As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC4_INTERLAKEN*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC5_EPCC1G2
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC5_EPCC1G2
  id: CRC5_EPCC1G2
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC5_EPCC1G2
  nameWithType: CrcStandard.CRC5_EPCC1G2
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC5_EPCC1G2
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC5_EPCC1G2
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1325
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-5/EPC-C1G2</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-5/EPC-C1G2</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-5-epc-c1g2">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 20 May 2009, Updated: 28 December 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>5</code></li><li>Polynomial: <code>0x09</code></li><li>Initial Value: <code>0x09</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x00</code></li></ul>

    </p>

    <p>The <code>CRC-5/EPC-C1G2</code> standard is also known by the alias <code>CRC-5/EPC</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC5_EPCC1G2 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-5/EPC-C1G2</code> definition.
    content.vb: Public Shared ReadOnly Property CRC5_EPCC1G2 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC5_EPCC1G2*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC5_EPC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC5_EPC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC5_EPC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC5_EPC
  id: CRC5_EPC
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC5_EPC
  nameWithType: CrcStandard.CRC5_EPC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC5_EPC
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC5_EPC
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1333
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-5/EPC-C1G2</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC5_EPC</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC5_EPCC1G2" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC5_EPC { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-5/EPC</code> definition.
    content.vb: Public Shared ReadOnly Property CRC5_EPC As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC5_EPC*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC5_EPCC1G2
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC5_EPCC1G2
- uid: Bodu.Security.Cryptography.CrcStandard.CRC5_G704
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC5_G704
  id: CRC5_G704
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC5_G704
  nameWithType: CrcStandard.CRC5_G704
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC5_G704
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC5_G704
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1354
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-5/G-704</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-5/G-704</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-5/G-704</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-5-g-704">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 7 October 2008, Updated: 21 November 2018), with the following definition.</p>

    <p>

    <ul><li>Width: <code>5</code></li><li>Polynomial: <code>0x15</code></li><li>Initial Value: <code>0x00</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x00</code></li></ul>

    </p>

    <p>The <code>CRC-5/G-704</code> standard is also known by the alias <code>CRC-5/ITU</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC5_G704 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-5/G-704</code> definition.
    content.vb: Public Shared ReadOnly Property CRC5_G704 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC5_G704*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC5_ITU
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC5_ITU
- uid: Bodu.Security.Cryptography.CrcStandard.CRC5_ITU
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC5_ITU
  id: CRC5_ITU
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC5_ITU
  nameWithType: CrcStandard.CRC5_ITU
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC5_ITU
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC5_ITU
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1362
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-5/G-704</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC5_ITU</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC5_G704" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC5_ITU { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-5/ITU</code> definition.
    content.vb: Public Shared ReadOnly Property CRC5_ITU As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC5_ITU*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC5_G704
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC5_G704
- uid: Bodu.Security.Cryptography.CrcStandard.CRC5_USB
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC5_USB
  id: CRC5_USB
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC5_USB
  nameWithType: CrcStandard.CRC5_USB
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC5_USB
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC5_USB
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1381
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-5/USB</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-5/USB</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-5/USB</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-5-usb">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 1 December 2007, Updated: 6 February 2017), with the following definition.</p>

    <p>

    <ul><li>Width: <code>5</code></li><li>Polynomial: <code>0x05</code></li><li>Initial Value: <code>0x1F</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x1F</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC5_USB { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-5/USB</code> definition.
    content.vb: Public Shared ReadOnly Property CRC5_USB As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC5_USB*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC6_CDMA2000A
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC6_CDMA2000A
  id: CRC6_CDMA2000A
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC6_CDMA2000A
  nameWithType: CrcStandard.CRC6_CDMA2000A
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC6_CDMA2000A
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC6_CDMA2000A
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1401
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-6/CDMA2000-A</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-6/CDMA2000-A</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-6-cdma2000-a">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 14 October 2013, Updated: 28 December 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>6</code></li><li>Polynomial: <code>0x27</code></li><li>Initial Value: <code>0x3F</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x00</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC6_CDMA2000A { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-6/CDMA2000-A</code> definition.
    content.vb: Public Shared ReadOnly Property CRC6_CDMA2000A As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC6_CDMA2000A*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC6_CDMA2000B
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC6_CDMA2000B
  id: CRC6_CDMA2000B
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC6_CDMA2000B
  nameWithType: CrcStandard.CRC6_CDMA2000B
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC6_CDMA2000B
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC6_CDMA2000B
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1419
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-6/CDMA2000-B</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-6/CDMA2000-B</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-6/CDMA2000-B</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-6-cdma2000-b">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 14 October 2013, Updated: 28 December 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>6</code></li><li>Polynomial: <code>0x07</code></li><li>Initial Value: <code>0x3F</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x00</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC6_CDMA2000B { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-6/CDMA2000-B</code> definition.
    content.vb: Public Shared ReadOnly Property CRC6_CDMA2000B As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC6_CDMA2000B*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC6_DARC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC6_DARC
  id: CRC6_DARC
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC6_DARC
  nameWithType: CrcStandard.CRC6_DARC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC6_DARC
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC6_DARC
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1436
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-6/DARC</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-6/DARC</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-6-darc">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 14 December 2009, Updated: 20 November 2018), with the following definition.</p>

    <p>

    <ul><li>Width: <code>6</code></li><li>Polynomial: <code>0x19</code></li><li>Initial Value: <code>0x00</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x00</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC6_DARC { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-6/DARC</code> definition.
    content.vb: Public Shared ReadOnly Property CRC6_DARC As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC6_DARC*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC6_G704
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC6_G704
  id: CRC6_G704
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC6_G704
  nameWithType: CrcStandard.CRC6_G704
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC6_G704
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC6_G704
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1456
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-6/G-704</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-6/G-704</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-6/G-704</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-6-g-704">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 7 October 2008, Updated: 21 November 2018), with the following definition.</p>

    <p>

    <ul><li>Width: <code>6</code></li><li>Polynomial: <code>0x03</code></li><li>Initial Value: <code>0x00</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x00</code></li></ul>

    </p>

    <p>The <code>CRC-6/G-704</code> standard is also known by the alias <code>CRC-6/ITU</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC6_G704 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-6/G-704</code> definition.
    content.vb: Public Shared ReadOnly Property CRC6_G704 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC6_G704*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC6_ITU
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC6_ITU
- uid: Bodu.Security.Cryptography.CrcStandard.CRC6_ITU
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC6_ITU
  id: CRC6_ITU
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC6_ITU
  nameWithType: CrcStandard.CRC6_ITU
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC6_ITU
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC6_ITU
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1464
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-6/G-704</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC6_ITU</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC6_G704" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC6_ITU { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-6/ITU</code> definition.
    content.vb: Public Shared ReadOnly Property CRC6_ITU As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC6_ITU*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC6_G704
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC6_G704
- uid: Bodu.Security.Cryptography.CrcStandard.CRC6_GSM
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC6_GSM
  id: CRC6_GSM
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC6_GSM
  nameWithType: CrcStandard.CRC6_GSM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC6_GSM
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC6_GSM
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1483
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-6/GSM</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-6/GSM</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-6/GSM</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-6-gsm">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 17 February 2017), with the following definition.</p>

    <p>

    <ul><li>Width: <code>6</code></li><li>Polynomial: <code>0x2F</code></li><li>Initial Value: <code>0x00</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x3F</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC6_GSM { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-6/GSM</code> definition.
    content.vb: Public Shared ReadOnly Property CRC6_GSM As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC6_GSM*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC7_MMC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC7_MMC
  id: CRC7_MMC
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC7_MMC
  nameWithType: CrcStandard.CRC7_MMC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC7_MMC
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC7_MMC
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1506
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-7/MMC</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-7/MMC</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-7/MMC</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-7-mmc">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 7 October 2008, Updated: 11 January 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>7</code></li><li>Polynomial: <code>0x09</code></li><li>Initial Value: <code>0x00</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x00</code></li></ul>

    </p>

    <p>The <code>CRC-7/MMC</code> standard is also known by the alias <code>CRC-7</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC7_MMC { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-7/MMC</code> definition.
    content.vb: Public Shared ReadOnly Property CRC7_MMC As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC7_MMC*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC7
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC7
- uid: Bodu.Security.Cryptography.CrcStandard.CRC7
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC7
  id: CRC7
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC7
  nameWithType: CrcStandard.CRC7
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC7
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC7
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1514
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-7/MMC</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC7</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC7_MMC" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC7 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-7</code> definition.
    content.vb: Public Shared ReadOnly Property CRC7 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC7*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC7_MMC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC7_MMC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC7_ROHC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC7_ROHC
  id: CRC7_ROHC
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC7_ROHC
  nameWithType: CrcStandard.CRC7_ROHC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC7_ROHC
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC7_ROHC
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1533
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-7/ROHC</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-7/ROHC</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-7/ROHC</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-7-rohc">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 14 December 2009, Updated: 6 February 2017), with the following definition.</p>

    <p>

    <ul><li>Width: <code>7</code></li><li>Polynomial: <code>0x4F</code></li><li>Initial Value: <code>0x7F</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x00</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC7_ROHC { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-7/ROHC</code> definition.
    content.vb: Public Shared ReadOnly Property CRC7_ROHC As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC7_ROHC*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC7_UMTS
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC7_UMTS
  id: CRC7_UMTS
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC7_UMTS
  nameWithType: CrcStandard.CRC7_UMTS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC7_UMTS
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC7_UMTS
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1551
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-7/UMTS</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-7/UMTS</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-7/UMTS</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-7-umts">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 8 February 2016, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>7</code></li><li>Polynomial: <code>0x45</code></li><li>Initial Value: <code>0x00</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x00</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC7_UMTS { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-7/UMTS</code> definition.
    content.vb: Public Shared ReadOnly Property CRC7_UMTS As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC7_UMTS*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_AUTOSAR
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_AUTOSAR
  id: CRC8_AUTOSAR
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC8_AUTOSAR
  nameWithType: CrcStandard.CRC8_AUTOSAR
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_AUTOSAR
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC8_AUTOSAR
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1571
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-8/AUTOSAR</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-8/AUTOSAR</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-8-autosar">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 24 July 2016, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>8</code></li><li>Polynomial: <code>0x2F</code></li><li>Initial Value: <code>0xFF</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0xFF</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC8_AUTOSAR { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-8/AUTOSAR</code> definition.
    content.vb: Public Shared ReadOnly Property CRC8_AUTOSAR As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC8_AUTOSAR*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_BLUETOOTH
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_BLUETOOTH
  id: CRC8_BLUETOOTH
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC8_BLUETOOTH
  nameWithType: CrcStandard.CRC8_BLUETOOTH
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_BLUETOOTH
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC8_BLUETOOTH
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1588
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-8/BLUETOOTH</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-8/BLUETOOTH</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-8-bluetooth">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 20 June 2017, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>8</code></li><li>Polynomial: <code>0xA7</code></li><li>Initial Value: <code>0x00</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x00</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC8_BLUETOOTH { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-8/BLUETOOTH</code> definition.
    content.vb: Public Shared ReadOnly Property CRC8_BLUETOOTH As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC8_BLUETOOTH*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_CDMA2000
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_CDMA2000
  id: CRC8_CDMA2000
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC8_CDMA2000
  nameWithType: CrcStandard.CRC8_CDMA2000
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_CDMA2000
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC8_CDMA2000
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1606
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-8/CDMA2000</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-8/CDMA2000</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-8/CDMA2000</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-8-cdma2000">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 14 October 2013, Updated: 28 December 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>8</code></li><li>Polynomial: <code>0x9B</code></li><li>Initial Value: <code>0xFF</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x00</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC8_CDMA2000 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-8/CDMA2000</code> definition.
    content.vb: Public Shared ReadOnly Property CRC8_CDMA2000 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC8_CDMA2000*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_DARC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_DARC
  id: CRC8_DARC
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC8_DARC
  nameWithType: CrcStandard.CRC8_DARC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_DARC
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC8_DARC
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1623
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-8/DARC</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-8/DARC</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-8-darc">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 14 December 2009, Updated: 29 November 2018), with the following definition.</p>

    <p>

    <ul><li>Width: <code>8</code></li><li>Polynomial: <code>0x39</code></li><li>Initial Value: <code>0x00</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x00</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC8_DARC { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-8/DARC</code> definition.
    content.vb: Public Shared ReadOnly Property CRC8_DARC As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC8_DARC*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_DVBS2
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_DVBS2
  id: CRC8_DVBS2
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC8_DVBS2
  nameWithType: CrcStandard.CRC8_DVBS2
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_DVBS2
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC8_DVBS2
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1641
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-8/DVB-S2</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-8/DVB-S2</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-8/DVB-S2</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-8-dvb-s2">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 10 January 2014, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>8</code></li><li>Polynomial: <code>0xD5</code></li><li>Initial Value: <code>0x00</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x00</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC8_DVBS2 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-8/DVB-S2</code> definition.
    content.vb: Public Shared ReadOnly Property CRC8_DVBS2 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC8_DVBS2*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_GSMA
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_GSMA
  id: CRC8_GSMA
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC8_GSMA
  nameWithType: CrcStandard.CRC8_GSMA
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_GSMA
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC8_GSMA
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1659
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-8/GSM-A</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-8/GSM-A</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-8/GSM-A</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-8-gsm-a">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 17 February 2017, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>8</code></li><li>Polynomial: <code>0x1D</code></li><li>Initial Value: <code>0x00</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x00</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC8_GSMA { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-8/GSM-A</code> definition.
    content.vb: Public Shared ReadOnly Property CRC8_GSMA As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC8_GSMA*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_GSMB
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_GSMB
  id: CRC8_GSMB
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC8_GSMB
  nameWithType: CrcStandard.CRC8_GSMB
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_GSMB
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC8_GSMB
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1677
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-8/GSM-B</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-8/GSM-B</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-8/GSM-B</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-8-gsm-b">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 17 February 2017), with the following definition.</p>

    <p>

    <ul><li>Width: <code>8</code></li><li>Polynomial: <code>0x49</code></li><li>Initial Value: <code>0x00</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0xFF</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC8_GSMB { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-8/GSM-B</code> definition.
    content.vb: Public Shared ReadOnly Property CRC8_GSMB As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC8_GSMB*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_HITAG
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_HITAG
  id: CRC8_HITAG
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC8_HITAG
  nameWithType: CrcStandard.CRC8_HITAG
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_HITAG
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC8_HITAG
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1694
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-8/HITAG</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-8/HITAG</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-8-hitag">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 23 December 2021), with the following definition.</p>

    <p>

    <ul><li>Width: <code>8</code></li><li>Polynomial: <code>0x1D</code></li><li>Initial Value: <code>0xFF</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x00</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC8_HITAG { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-8/HITAG</code> definition.
    content.vb: Public Shared ReadOnly Property CRC8_HITAG As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC8_HITAG*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_I4321
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_I4321
  id: CRC8_I4321
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC8_I4321
  nameWithType: CrcStandard.CRC8_I4321
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_I4321
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC8_I4321
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1714
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-8/I-432-1</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-8/I-432-1</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-8/I-432-1</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-8-i-432-1">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 19 April 2009, Updated: 21 November 2018), with the following definition.</p>

    <p>

    <ul><li>Width: <code>8</code></li><li>Polynomial: <code>0x07</code></li><li>Initial Value: <code>0x00</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x55</code></li></ul>

    </p>

    <p>The <code>CRC-8/I-432-1</code> standard is also known by the alias <code>CRC-8/ITU</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC8_I4321 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-8/I-432-1</code> definition.
    content.vb: Public Shared ReadOnly Property CRC8_I4321 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC8_I4321*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC8_ITU
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_ITU
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_ITU
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_ITU
  id: CRC8_ITU
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC8_ITU
  nameWithType: CrcStandard.CRC8_ITU
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_ITU
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC8_ITU
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1722
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-8/I-432-1</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC8_ITU</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC8_I4321" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC8_ITU { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-8/ITU</code> definition.
    content.vb: Public Shared ReadOnly Property CRC8_ITU As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC8_ITU*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC8_I4321
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_I4321
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_ICODE
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_ICODE
  id: CRC8_ICODE
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC8_ICODE
  nameWithType: CrcStandard.CRC8_ICODE
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_ICODE
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC8_ICODE
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1740
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-8/I-CODE</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-8/I-CODE</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-8-i-code">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 3 November 2007, Updated: 6 February 2017), with the following definition.</p>

    <p>

    <ul><li>Width: <code>8</code></li><li>Polynomial: <code>0x1D</code></li><li>Initial Value: <code>0xFD</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x00</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC8_ICODE { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-8/I-CODE</code> definition.
    content.vb: Public Shared ReadOnly Property CRC8_ICODE As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC8_ICODE*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_LTE
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_LTE
  id: CRC8_LTE
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC8_LTE
  nameWithType: CrcStandard.CRC8_LTE
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_LTE
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC8_LTE
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1758
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-8/LTE</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-8/LTE</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-8/LTE</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-8-lte">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 13 February 2016, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>8</code></li><li>Polynomial: <code>0x9B</code></li><li>Initial Value: <code>0x00</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x00</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC8_LTE { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-8/LTE</code> definition.
    content.vb: Public Shared ReadOnly Property CRC8_LTE As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC8_LTE*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIMDOW
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIMDOW
  id: CRC8_MAXIMDOW
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC8_MAXIMDOW
  nameWithType: CrcStandard.CRC8_MAXIMDOW
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIMDOW
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC8_MAXIMDOW
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1778
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-8/MAXIM-DOW</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-8/MAXIM-DOW</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-8-maxim-dow">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 26 April 2009, Updated: 2 January 2021), with the following definition.</p>

    <p>

    <ul><li>Width: <code>8</code></li><li>Polynomial: <code>0x31</code></li><li>Initial Value: <code>0x00</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x00</code></li></ul>

    </p>

    <p>The <code>CRC-8/MAXIM-DOW</code> standard is also known by the aliases <code>CRC-8/MAXIM</code>, and <code>DOW-CRC</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC8_MAXIMDOW { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-8/MAXIM-DOW</code> definition.
    content.vb: Public Shared ReadOnly Property CRC8_MAXIMDOW As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIMDOW*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIM
  - linkId: Bodu.Security.Cryptography.CrcStandard.DOWCRC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.DOWCRC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIM
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIM
  id: CRC8_MAXIM
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC8_MAXIM
  nameWithType: CrcStandard.CRC8_MAXIM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIM
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC8_MAXIM
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1787
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-8/MAXIM-DOW</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC8_MAXIM</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIMDOW" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC8_MAXIM { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-8/MAXIM</code> definition.
    content.vb: Public Shared ReadOnly Property CRC8_MAXIM As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIM*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIMDOW
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIMDOW
  - linkId: Bodu.Security.Cryptography.CrcStandard.DOWCRC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.DOWCRC
- uid: Bodu.Security.Cryptography.CrcStandard.DOWCRC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.DOWCRC
  id: DOWCRC
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: DOWCRC
  nameWithType: CrcStandard.DOWCRC
  fullName: Bodu.Security.Cryptography.CrcStandard.DOWCRC
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: DOWCRC
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1797
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-8/MAXIM-DOW</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>DOWCRC</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIMDOW" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard DOWCRC { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>DOW-CRC</code> definition.
    content.vb: Public Shared ReadOnly Property DOWCRC As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.DOWCRC*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIMDOW
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIMDOW
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_MIFAREMAD
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_MIFAREMAD
  id: CRC8_MIFAREMAD
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC8_MIFAREMAD
  nameWithType: CrcStandard.CRC8_MIFAREMAD
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_MIFAREMAD
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC8_MIFAREMAD
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1815
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-8/MIFARE-MAD</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-8/MIFARE-MAD</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-8-mifare-mad">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 21 February 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>8</code></li><li>Polynomial: <code>0x1D</code></li><li>Initial Value: <code>0xC7</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x00</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC8_MIFAREMAD { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-8/MIFARE-MAD</code> definition.
    content.vb: Public Shared ReadOnly Property CRC8_MIFAREMAD As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC8_MIFAREMAD*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_NRSC5
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_NRSC5
  id: CRC8_NRSC5
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC8_NRSC5
  nameWithType: CrcStandard.CRC8_NRSC5
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_NRSC5
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC8_NRSC5
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1832
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-8/NRSC-5</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-8/NRSC-5</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-8-nrsc-5">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 16 November 2018, Updated: 20 March 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>8</code></li><li>Polynomial: <code>0x31</code></li><li>Initial Value: <code>0xFF</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x00</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC8_NRSC5 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-8/NRSC-5</code> definition.
    content.vb: Public Shared ReadOnly Property CRC8_NRSC5 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC8_NRSC5*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_OPENSAFETY
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_OPENSAFETY
  id: CRC8_OPENSAFETY
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC8_OPENSAFETY
  nameWithType: CrcStandard.CRC8_OPENSAFETY
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_OPENSAFETY
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC8_OPENSAFETY
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1849
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-8/OPENSAFETY</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-8/OPENSAFETY</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-8-opensafety">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 22 July 2016, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>8</code></li><li>Polynomial: <code>0x2F</code></li><li>Initial Value: <code>0x00</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x00</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC8_OPENSAFETY { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-8/OPENSAFETY</code> definition.
    content.vb: Public Shared ReadOnly Property CRC8_OPENSAFETY As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC8_OPENSAFETY*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_ROHC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_ROHC
  id: CRC8_ROHC
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC8_ROHC
  nameWithType: CrcStandard.CRC8_ROHC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_ROHC
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC8_ROHC
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1867
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-8/ROHC</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-8/ROHC</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-8/ROHC</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-8-rohc">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 14 December 2009, Updated: 6 February 2017), with the following definition.</p>

    <p>

    <ul><li>Width: <code>8</code></li><li>Polynomial: <code>0x07</code></li><li>Initial Value: <code>0xFF</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x00</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC8_ROHC { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-8/ROHC</code> definition.
    content.vb: Public Shared ReadOnly Property CRC8_ROHC As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC8_ROHC*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_SAEJ1850
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_SAEJ1850
  id: CRC8_SAEJ1850
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC8_SAEJ1850
  nameWithType: CrcStandard.CRC8_SAEJ1850
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_SAEJ1850
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC8_SAEJ1850
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1884
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-8/SAE-J1850</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-8/SAE-J1850</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-8-sae-j1850">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 17 February 2016, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>8</code></li><li>Polynomial: <code>0x1D</code></li><li>Initial Value: <code>0xFF</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0xFF</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC8_SAEJ1850 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-8/SAE-J1850</code> definition.
    content.vb: Public Shared ReadOnly Property CRC8_SAEJ1850 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC8_SAEJ1850*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_SMBUS
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_SMBUS
  id: CRC8_SMBUS
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC8_SMBUS
  nameWithType: CrcStandard.CRC8_SMBUS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_SMBUS
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC8_SMBUS
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1903
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-8/SMBUS</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-8/SMBUS</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-8-smbus">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 30 March 2005, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>8</code></li><li>Polynomial: <code>0x07</code></li><li>Initial Value: <code>0x00</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x00</code></li></ul>

    </p>

    <p>The <code>CRC-8/SMBUS</code> standard is also known by the alias <code>CRC-8</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC8_SMBUS { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-8/SMBUS</code> definition.
    content.vb: Public Shared ReadOnly Property CRC8_SMBUS As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC8_SMBUS*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC8
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8
  id: CRC8
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC8
  nameWithType: CrcStandard.CRC8
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC8
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1911
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-8/SMBUS</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC8</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC8_SMBUS" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC8 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-8</code> definition.
    content.vb: Public Shared ReadOnly Property CRC8 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC8*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC8_SMBUS
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_SMBUS
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_TECH3250
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_TECH3250
  id: CRC8_TECH3250
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC8_TECH3250
  nameWithType: CrcStandard.CRC8_TECH3250
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_TECH3250
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC8_TECH3250
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1932
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-8/TECH-3250</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-8/TECH-3250</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-8-tech-3250">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 19 July 2012, Updated: 21 November 2018), with the following definition.</p>

    <p>

    <ul><li>Width: <code>8</code></li><li>Polynomial: <code>0x1D</code></li><li>Initial Value: <code>0xFF</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x00</code></li></ul>

    </p>

    <p>The <code>CRC-8/TECH-3250</code> standard is also known by the aliases <code>CRC-8/AES</code>, and <code>CRC-8/EBU</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC8_TECH3250 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-8/TECH-3250</code> definition.
    content.vb: Public Shared ReadOnly Property CRC8_TECH3250 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC8_TECH3250*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC8_AES
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_AES
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC8_EBU
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_EBU
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_AES
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_AES
  id: CRC8_AES
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC8_AES
  nameWithType: CrcStandard.CRC8_AES
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_AES
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC8_AES
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1941
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-8/TECH-3250</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC8_AES</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC8_TECH3250" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC8_AES { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-8/AES</code> definition.
    content.vb: Public Shared ReadOnly Property CRC8_AES As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC8_AES*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC8_TECH3250
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_TECH3250
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC8_EBU
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_EBU
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_EBU
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_EBU
  id: CRC8_EBU
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC8_EBU
  nameWithType: CrcStandard.CRC8_EBU
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_EBU
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC8_EBU
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1951
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-8/TECH-3250</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC8_EBU</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC8_TECH3250" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC8_EBU { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-8/EBU</code> definition.
    content.vb: Public Shared ReadOnly Property CRC8_EBU As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC8_EBU*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC8_TECH3250
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_TECH3250
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC8_AES
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_AES
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_WCDMA
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_WCDMA
  id: CRC8_WCDMA
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC8_WCDMA
  nameWithType: CrcStandard.CRC8_WCDMA
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_WCDMA
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC8_WCDMA
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1970
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-8/WCDMA</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-8/WCDMA</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-8/WCDMA</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-8-wcdma">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 8 November 2009, Updated: 28 December 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>8</code></li><li>Polynomial: <code>0x9B</code></li><li>Initial Value: <code>0x00</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x00</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC8_WCDMA { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-8/WCDMA</code> definition.
    content.vb: Public Shared ReadOnly Property CRC8_WCDMA As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC8_WCDMA*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC10_ATM
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC10_ATM
  id: CRC10_ATM
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC10_ATM
  nameWithType: CrcStandard.CRC10_ATM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC10_ATM
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC10_ATM
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 1993
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-10/ATM</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-10/ATM</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-10-atm">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 19 April 2009, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>10</code></li><li>Polynomial: <code>0x0233</code></li><li>Initial Value: <code>0x0000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>

    <p>The <code>CRC-10/ATM</code> standard is also known by the aliases <code>CRC-10</code>, and <code>CRC-10/I-610</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC10_ATM { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-10/ATM</code> definition.
    content.vb: Public Shared ReadOnly Property CRC10_ATM As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC10_ATM*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC10
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC10
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC10_I610
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC10_I610
- uid: Bodu.Security.Cryptography.CrcStandard.CRC10
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC10
  id: CRC10
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC10
  nameWithType: CrcStandard.CRC10
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC10
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC10
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2002
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-10/ATM</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC10</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC10_ATM" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC10 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-10</code> definition.
    content.vb: Public Shared ReadOnly Property CRC10 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC10*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC10_ATM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC10_ATM
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC10_I610
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC10_I610
- uid: Bodu.Security.Cryptography.CrcStandard.CRC10_I610
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC10_I610
  id: CRC10_I610
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC10_I610
  nameWithType: CrcStandard.CRC10_I610
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC10_I610
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC10_I610
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2012
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-10/ATM</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC10_I610</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC10_ATM" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC10_I610 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-10/I-610</code> definition.
    content.vb: Public Shared ReadOnly Property CRC10_I610 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC10_I610*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC10_ATM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC10_ATM
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC10
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC10
- uid: Bodu.Security.Cryptography.CrcStandard.CRC10_CDMA2000
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC10_CDMA2000
  id: CRC10_CDMA2000
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC10_CDMA2000
  nameWithType: CrcStandard.CRC10_CDMA2000
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC10_CDMA2000
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC10_CDMA2000
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2031
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-10/CDMA2000</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-10/CDMA2000</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-10/CDMA2000</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-10-cdma2000">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 14 October 2013, Updated: 28 December 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>10</code></li><li>Polynomial: <code>0x03D9</code></li><li>Initial Value: <code>0x03FF</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC10_CDMA2000 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-10/CDMA2000</code> definition.
    content.vb: Public Shared ReadOnly Property CRC10_CDMA2000 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC10_CDMA2000*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC10_GSM
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC10_GSM
  id: CRC10_GSM
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC10_GSM
  nameWithType: CrcStandard.CRC10_GSM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC10_GSM
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC10_GSM
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2049
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-10/GSM</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-10/GSM</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-10/GSM</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-10-gsm">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 17 February 2017), with the following definition.</p>

    <p>

    <ul><li>Width: <code>10</code></li><li>Polynomial: <code>0x0175</code></li><li>Initial Value: <code>0x0000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x03FF</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC10_GSM { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-10/GSM</code> definition.
    content.vb: Public Shared ReadOnly Property CRC10_GSM As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC10_GSM*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC11_FLEXRAY
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC11_FLEXRAY
  id: CRC11_FLEXRAY
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC11_FLEXRAY
  nameWithType: CrcStandard.CRC11_FLEXRAY
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC11_FLEXRAY
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC11_FLEXRAY
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2071
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-11/FLEXRAY</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-11/FLEXRAY</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-11-flexray">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 3 November 2007, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>11</code></li><li>Polynomial: <code>0x0385</code></li><li>Initial Value: <code>0x001A</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>

    <p>The <code>CRC-11/FLEXRAY</code> standard is also known by the alias <code>CRC-11</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC11_FLEXRAY { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-11/FLEXRAY</code> definition.
    content.vb: Public Shared ReadOnly Property CRC11_FLEXRAY As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC11_FLEXRAY*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC11
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC11
- uid: Bodu.Security.Cryptography.CrcStandard.CRC11
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC11
  id: CRC11
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC11
  nameWithType: CrcStandard.CRC11
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC11
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC11
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2079
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-11/FLEXRAY</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC11</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC11_FLEXRAY" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC11 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-11</code> definition.
    content.vb: Public Shared ReadOnly Property CRC11 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC11*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC11_FLEXRAY
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC11_FLEXRAY
- uid: Bodu.Security.Cryptography.CrcStandard.CRC11_UMTS
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC11_UMTS
  id: CRC11_UMTS
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC11_UMTS
  nameWithType: CrcStandard.CRC11_UMTS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC11_UMTS
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC11_UMTS
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2098
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-11/UMTS</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-11/UMTS</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-11/UMTS</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-11-umts">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 8 February 2016, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>11</code></li><li>Polynomial: <code>0x0307</code></li><li>Initial Value: <code>0x0000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC11_UMTS { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-11/UMTS</code> definition.
    content.vb: Public Shared ReadOnly Property CRC11_UMTS As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC11_UMTS*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC12_CDMA2000
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC12_CDMA2000
  id: CRC12_CDMA2000
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC12_CDMA2000
  nameWithType: CrcStandard.CRC12_CDMA2000
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC12_CDMA2000
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC12_CDMA2000
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2119
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-12/CDMA2000</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-12/CDMA2000</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-12/CDMA2000</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-12-cdma2000">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 14 October 2013, Updated: 28 December 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>12</code></li><li>Polynomial: <code>0x0F13</code></li><li>Initial Value: <code>0x0FFF</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC12_CDMA2000 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-12/CDMA2000</code> definition.
    content.vb: Public Shared ReadOnly Property CRC12_CDMA2000 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC12_CDMA2000*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC12_DECT
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC12_DECT
  id: CRC12_DECT
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC12_DECT
  nameWithType: CrcStandard.CRC12_DECT
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC12_DECT
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC12_DECT
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2139
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-12/DECT</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-12/DECT</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-12/DECT</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-12-dect">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 29 July 2010, Updated: 15 February 2017), with the following definition.</p>

    <p>

    <ul><li>Width: <code>12</code></li><li>Polynomial: <code>0x080F</code></li><li>Initial Value: <code>0x0000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>

    <p>The <code>CRC-12/DECT</code> standard is also known by the alias <code>X-CRC-12</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC12_DECT { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-12/DECT</code> definition.
    content.vb: Public Shared ReadOnly Property CRC12_DECT As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC12_DECT*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.XCRC12
    commentId: P:Bodu.Security.Cryptography.CrcStandard.XCRC12
- uid: Bodu.Security.Cryptography.CrcStandard.XCRC12
  commentId: P:Bodu.Security.Cryptography.CrcStandard.XCRC12
  id: XCRC12
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: XCRC12
  nameWithType: CrcStandard.XCRC12
  fullName: Bodu.Security.Cryptography.CrcStandard.XCRC12
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: XCRC12
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2147
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-12/DECT</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>XCRC12</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC12_DECT" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard XCRC12 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>X-CRC-12</code> definition.
    content.vb: Public Shared ReadOnly Property XCRC12 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.XCRC12*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC12_DECT
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC12_DECT
- uid: Bodu.Security.Cryptography.CrcStandard.CRC12_GSM
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC12_GSM
  id: CRC12_GSM
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC12_GSM
  nameWithType: CrcStandard.CRC12_GSM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC12_GSM
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC12_GSM
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2166
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-12/GSM</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-12/GSM</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-12/GSM</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-12-gsm">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 17 February 2017), with the following definition.</p>

    <p>

    <ul><li>Width: <code>12</code></li><li>Polynomial: <code>0x0D31</code></li><li>Initial Value: <code>0x0000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x0FFF</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC12_GSM { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-12/GSM</code> definition.
    content.vb: Public Shared ReadOnly Property CRC12_GSM As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC12_GSM*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC12_UMTS
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC12_UMTS
  id: CRC12_UMTS
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC12_UMTS
  nameWithType: CrcStandard.CRC12_UMTS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC12_UMTS
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC12_UMTS
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2186
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-12/UMTS</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-12/UMTS</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-12/UMTS</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-12-umts">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 10 December 2009, Updated: 25 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>12</code></li><li>Polynomial: <code>0x080F</code></li><li>Initial Value: <code>0x0000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>

    <p>The <code>CRC-12/UMTS</code> standard is also known by the alias <code>CRC-12/3GPP</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC12_UMTS { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-12/UMTS</code> definition.
    content.vb: Public Shared ReadOnly Property CRC12_UMTS As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC12_UMTS*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC12_3GPP
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC12_3GPP
- uid: Bodu.Security.Cryptography.CrcStandard.CRC12_3GPP
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC12_3GPP
  id: CRC12_3GPP
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC12_3GPP
  nameWithType: CrcStandard.CRC12_3GPP
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC12_3GPP
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC12_3GPP
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2194
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-12/UMTS</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC12_3GPP</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC12_UMTS" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC12_3GPP { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-12/3GPP</code> definition.
    content.vb: Public Shared ReadOnly Property CRC12_3GPP As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC12_3GPP*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC12_UMTS
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC12_UMTS
- uid: Bodu.Security.Cryptography.CrcStandard.CRC13_BBC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC13_BBC
  id: CRC13_BBC
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC13_BBC
  nameWithType: CrcStandard.CRC13_BBC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC13_BBC
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC13_BBC
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2215
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-13/BBC</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-13/BBC</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-13-bbc">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 14 October 2013, Updated: 6 February 2017), with the following definition.</p>

    <p>

    <ul><li>Width: <code>13</code></li><li>Polynomial: <code>0x1CF5</code></li><li>Initial Value: <code>0x0000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC13_BBC { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-13/BBC</code> definition.
    content.vb: Public Shared ReadOnly Property CRC13_BBC As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC13_BBC*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC14_DARC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC14_DARC
  id: CRC14_DARC
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC14_DARC
  nameWithType: CrcStandard.CRC14_DARC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC14_DARC
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC14_DARC
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2235
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-14/DARC</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-14/DARC</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-14-darc">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 14 December 2009, Updated: 20 November 2018), with the following definition.</p>

    <p>

    <ul><li>Width: <code>14</code></li><li>Polynomial: <code>0x0805</code></li><li>Initial Value: <code>0x0000</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC14_DARC { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-14/DARC</code> definition.
    content.vb: Public Shared ReadOnly Property CRC14_DARC As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC14_DARC*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC14_GSM
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC14_GSM
  id: CRC14_GSM
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC14_GSM
  nameWithType: CrcStandard.CRC14_GSM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC14_GSM
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC14_GSM
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2253
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-14/GSM</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-14/GSM</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-14/GSM</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-14-gsm">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 17 February 2017), with the following definition.</p>

    <p>

    <ul><li>Width: <code>14</code></li><li>Polynomial: <code>0x202D</code></li><li>Initial Value: <code>0x0000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x3FFF</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC14_GSM { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-14/GSM</code> definition.
    content.vb: Public Shared ReadOnly Property CRC14_GSM As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC14_GSM*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC15_CAN
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC15_CAN
  id: CRC15_CAN
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC15_CAN
  nameWithType: CrcStandard.CRC15_CAN
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC15_CAN
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC15_CAN
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2276
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-15/CAN</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-15/CAN</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-15/CAN</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-15-can">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 2 November 2007, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>15</code></li><li>Polynomial: <code>0x4599</code></li><li>Initial Value: <code>0x0000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>

    <p>The <code>CRC-15/CAN</code> standard is also known by the alias <code>CRC-15</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC15_CAN { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-15/CAN</code> definition.
    content.vb: Public Shared ReadOnly Property CRC15_CAN As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC15_CAN*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC15
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC15
- uid: Bodu.Security.Cryptography.CrcStandard.CRC15
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC15
  id: CRC15
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC15
  nameWithType: CrcStandard.CRC15
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC15
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC15
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2284
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-15/CAN</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC15</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC15_CAN" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC15 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-15</code> definition.
    content.vb: Public Shared ReadOnly Property CRC15 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC15*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC15_CAN
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC15_CAN
- uid: Bodu.Security.Cryptography.CrcStandard.CRC15_MPT1327
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC15_MPT1327
  id: CRC15_MPT1327
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC15_MPT1327
  nameWithType: CrcStandard.CRC15_MPT1327
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC15_MPT1327
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC15_MPT1327
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2302
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-15/MPT1327</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-15/MPT1327</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-15-mpt1327">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 16 July 2012, Updated: 29 December 2021), with the following definition.</p>

    <p>

    <ul><li>Width: <code>15</code></li><li>Polynomial: <code>0x6815</code></li><li>Initial Value: <code>0x0000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x0001</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC15_MPT1327 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-15/MPT1327</code> definition.
    content.vb: Public Shared ReadOnly Property CRC15_MPT1327 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC15_MPT1327*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_ARC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ARC
  id: CRC16_ARC
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_ARC
  nameWithType: CrcStandard.CRC16_ARC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_ARC
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_ARC
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2327
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/ARC</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-16/ARC</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-arc">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 30 March 2005, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x8005</code></li><li>Initial Value: <code>0x0000</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>

    <p>The <code>CRC-16/ARC</code> standard is also known by the aliases <code>ARC</code>, <code>CRC-16</code>, <code>CRC-16/LHA</code>, and <code>CRC-IBM</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_ARC { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/ARC</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_ARC As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_ARC*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.ARC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.ARC
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_LHA
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_LHA
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRCIBM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRCIBM
- uid: Bodu.Security.Cryptography.CrcStandard.ARC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.ARC
  id: ARC
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: ARC
  nameWithType: CrcStandard.ARC
  fullName: Bodu.Security.Cryptography.CrcStandard.ARC
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: ARC
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2338
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/ARC</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>ARC</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_ARC" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard ARC { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>ARC</code> definition.
    content.vb: Public Shared ReadOnly Property ARC As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.ARC*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_ARC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ARC
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_LHA
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_LHA
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRCIBM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRCIBM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16
  id: CRC16
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16
  nameWithType: CrcStandard.CRC16
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2350
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/ARC</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC16</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_ARC" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_ARC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ARC
  - linkId: Bodu.Security.Cryptography.CrcStandard.ARC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.ARC
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_LHA
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_LHA
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRCIBM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRCIBM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_LHA
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_LHA
  id: CRC16_LHA
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_LHA
  nameWithType: CrcStandard.CRC16_LHA
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_LHA
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_LHA
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2362
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/ARC</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC16_LHA</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_ARC" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_LHA { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/LHA</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_LHA As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_LHA*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_ARC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ARC
  - linkId: Bodu.Security.Cryptography.CrcStandard.ARC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.ARC
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRCIBM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRCIBM
- uid: Bodu.Security.Cryptography.CrcStandard.CRCIBM
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRCIBM
  id: CRCIBM
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRCIBM
  nameWithType: CrcStandard.CRCIBM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRCIBM
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRCIBM
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2374
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/ARC</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRCIBM</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_ARC" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRCIBM { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-IBM</code> definition.
    content.vb: Public Shared ReadOnly Property CRCIBM As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRCIBM*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_ARC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ARC
  - linkId: Bodu.Security.Cryptography.CrcStandard.ARC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.ARC
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_LHA
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_LHA
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_CDMA2000
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_CDMA2000
  id: CRC16_CDMA2000
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_CDMA2000
  nameWithType: CrcStandard.CRC16_CDMA2000
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_CDMA2000
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_CDMA2000
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2393
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/CDMA2000</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-16/CDMA2000</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-16/CDMA2000</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-cdma2000">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 14 October 2013, Updated: 28 December 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0xC867</code></li><li>Initial Value: <code>0xFFFF</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_CDMA2000 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/CDMA2000</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_CDMA2000 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_CDMA2000*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_CMS
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_CMS
  id: CRC16_CMS
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_CMS
  nameWithType: CrcStandard.CRC16_CMS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_CMS
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_CMS
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2411
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/CMS</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-16/CMS</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-16/CMS</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-cms">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 13 July 2016, Updated: 28 December 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x8005</code></li><li>Initial Value: <code>0xFFFF</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_CMS { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/CMS</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_CMS As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_CMS*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_DDS110
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_DDS110
  id: CRC16_DDS110
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_DDS110
  nameWithType: CrcStandard.CRC16_DDS110
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_DDS110
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_DDS110
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2428
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/DDS-110</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-16/DDS-110</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-dds-110">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 30 November 2009, Updated: 28 December 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x8005</code></li><li>Initial Value: <code>0x800D</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_DDS110 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/DDS-110</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_DDS110 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_DDS110*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_DECTR
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_DECTR
  id: CRC16_DECTR
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_DECTR
  nameWithType: CrcStandard.CRC16_DECTR
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_DECTR
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_DECTR
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2447
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/DECT-R</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-16/DECT-R</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-dect-r">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 7 December 2009, Updated: 28 December 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x0589</code></li><li>Initial Value: <code>0x0000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x0001</code></li></ul>

    </p>

    <p>The <code>CRC-16/DECT-R</code> standard is also known by the alias <code>R-CRC-16</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_DECTR { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/DECT-R</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_DECTR As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_DECTR*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.RCRC16
    commentId: P:Bodu.Security.Cryptography.CrcStandard.RCRC16
- uid: Bodu.Security.Cryptography.CrcStandard.RCRC16
  commentId: P:Bodu.Security.Cryptography.CrcStandard.RCRC16
  id: RCRC16
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: RCRC16
  nameWithType: CrcStandard.RCRC16
  fullName: Bodu.Security.Cryptography.CrcStandard.RCRC16
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: RCRC16
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2455
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/DECT-R</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>RCRC16</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_DECTR" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard RCRC16 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>R-CRC-16</code> definition.
    content.vb: Public Shared ReadOnly Property RCRC16 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.RCRC16*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_DECTR
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_DECTR
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_DECTX
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_DECTX
  id: CRC16_DECTX
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_DECTX
  nameWithType: CrcStandard.CRC16_DECTX
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_DECTX
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_DECTX
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2475
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/DECT-X</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-16/DECT-X</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-dect-x">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 30 July 2010, Updated: 2 January 2021), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x0589</code></li><li>Initial Value: <code>0x0000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>

    <p>The <code>CRC-16/DECT-X</code> standard is also known by the alias <code>X-CRC-16</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_DECTX { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/DECT-X</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_DECTX As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_DECTX*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.XCRC16
    commentId: P:Bodu.Security.Cryptography.CrcStandard.XCRC16
- uid: Bodu.Security.Cryptography.CrcStandard.XCRC16
  commentId: P:Bodu.Security.Cryptography.CrcStandard.XCRC16
  id: XCRC16
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: XCRC16
  nameWithType: CrcStandard.XCRC16
  fullName: Bodu.Security.Cryptography.CrcStandard.XCRC16
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: XCRC16
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2483
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/DECT-X</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>XCRC16</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_DECTX" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard XCRC16 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>X-CRC-16</code> definition.
    content.vb: Public Shared ReadOnly Property XCRC16 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.XCRC16*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_DECTX
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_DECTX
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_DNP
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_DNP
  id: CRC16_DNP
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_DNP
  nameWithType: CrcStandard.CRC16_DNP
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_DNP
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_DNP
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2501
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/DNP</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-16/DNP</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-dnp">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 2 November 2007, Updated: 28 December 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x3D65</code></li><li>Initial Value: <code>0x0000</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0xFFFF</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_DNP { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/DNP</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_DNP As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_DNP*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_EN13757
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_EN13757
  id: CRC16_EN13757
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_EN13757
  nameWithType: CrcStandard.CRC16_EN13757
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_EN13757
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_EN13757
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2518
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/EN-13757</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-16/EN-13757</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-en-13757">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 1 October 2008, Updated: 28 December 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x3D65</code></li><li>Initial Value: <code>0x0000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0xFFFF</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_EN13757 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/EN-13757</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_EN13757 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_EN13757*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_GENIBUS
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_GENIBUS
  id: CRC16_GENIBUS
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_GENIBUS
  nameWithType: CrcStandard.CRC16_GENIBUS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_GENIBUS
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_GENIBUS
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2540
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/GENIBUS</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-16/GENIBUS</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-genibus">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 2 November 2007, Updated: 3 January 2021), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x1021</code></li><li>Initial Value: <code>0xFFFF</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0xFFFF</code></li></ul>

    </p>

    <p>The <code>CRC-16/GENIBUS</code> standard is also known by the aliases <code>CRC-16/DARC</code>, <code>CRC-16/EPC</code>, <code>CRC-16/EPC-C1G2</code>, and <code>CRC-16/I-CODE</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_GENIBUS { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/GENIBUS</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_GENIBUS As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_GENIBUS*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_DARC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_DARC
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_EPC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_EPC
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_EPCC1G2
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_EPCC1G2
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_ICODE
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ICODE
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_DARC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_DARC
  id: CRC16_DARC
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_DARC
  nameWithType: CrcStandard.CRC16_DARC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_DARC
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_DARC
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2551
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/GENIBUS</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC16_DARC</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_GENIBUS" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_DARC { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/DARC</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_DARC As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_DARC*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_GENIBUS
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_GENIBUS
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_EPC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_EPC
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_EPCC1G2
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_EPCC1G2
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_ICODE
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ICODE
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_EPC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_EPC
  id: CRC16_EPC
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_EPC
  nameWithType: CrcStandard.CRC16_EPC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_EPC
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_EPC
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2563
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/GENIBUS</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC16_EPC</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_GENIBUS" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_EPC { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/EPC</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_EPC As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_EPC*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_GENIBUS
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_GENIBUS
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_DARC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_DARC
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_EPCC1G2
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_EPCC1G2
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_ICODE
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ICODE
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_EPCC1G2
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_EPCC1G2
  id: CRC16_EPCC1G2
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_EPCC1G2
  nameWithType: CrcStandard.CRC16_EPCC1G2
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_EPCC1G2
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_EPCC1G2
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2575
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/GENIBUS</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC16_EPCC1G2</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_GENIBUS" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_EPCC1G2 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/EPC-C1G2</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_EPCC1G2 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_EPCC1G2*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_GENIBUS
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_GENIBUS
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_DARC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_DARC
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_EPC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_EPC
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_ICODE
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ICODE
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_ICODE
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ICODE
  id: CRC16_ICODE
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_ICODE
  nameWithType: CrcStandard.CRC16_ICODE
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_ICODE
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_ICODE
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2587
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/GENIBUS</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC16_ICODE</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_GENIBUS" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_ICODE { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/I-CODE</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_ICODE As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_ICODE*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_GENIBUS
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_GENIBUS
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_DARC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_DARC
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_EPC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_EPC
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_EPCC1G2
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_EPCC1G2
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_GSM
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_GSM
  id: CRC16_GSM
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_GSM
  nameWithType: CrcStandard.CRC16_GSM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_GSM
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_GSM
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2605
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/GSM</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-16/GSM</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-gsm">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 17 February 2017, Updated: 19 April 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x1021</code></li><li>Initial Value: <code>0x0000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0xFFFF</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_GSM { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/GSM</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_GSM As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_GSM*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_IBM3740
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_IBM3740
  id: CRC16_IBM3740
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_IBM3740
  nameWithType: CrcStandard.CRC16_IBM3740
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_IBM3740
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_IBM3740
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2625
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/IBM-3740</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-16/IBM-3740</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-ibm-3740">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 30 March 2005, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x1021</code></li><li>Initial Value: <code>0xFFFF</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>

    <p>The <code>CRC-16/IBM-3740</code> standard is also known by the aliases <code>CRC-16/AUTOSAR</code>, and <code>CRC-16/CCITT-FALSE</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_IBM3740 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/IBM-3740</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_IBM3740 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_IBM3740*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_AUTOSAR
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_AUTOSAR
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTFALSE
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTFALSE
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_AUTOSAR
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_AUTOSAR
  id: CRC16_AUTOSAR
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_AUTOSAR
  nameWithType: CrcStandard.CRC16_AUTOSAR
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_AUTOSAR
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_AUTOSAR
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2634
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/IBM-3740</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC16_AUTOSAR</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_IBM3740" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_AUTOSAR { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/AUTOSAR</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_AUTOSAR As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_AUTOSAR*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_IBM3740
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_IBM3740
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTFALSE
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTFALSE
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTFALSE
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTFALSE
  id: CRC16_CCITTFALSE
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_CCITTFALSE
  nameWithType: CrcStandard.CRC16_CCITTFALSE
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTFALSE
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_CCITTFALSE
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2644
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/IBM-3740</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC16_CCITTFALSE</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_IBM3740" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_CCITTFALSE { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/CCITT-FALSE</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_CCITTFALSE As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTFALSE*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_IBM3740
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_IBM3740
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_AUTOSAR
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_AUTOSAR
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_IBMSDLC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_IBMSDLC
  id: CRC16_IBMSDLC
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_IBMSDLC
  nameWithType: CrcStandard.CRC16_IBMSDLC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_IBMSDLC
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_IBMSDLC
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2668
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/IBM-SDLC</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-16/IBM-SDLC</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-ibm-sdlc">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 10 September 2005, Updated: 2 January 2021), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x1021</code></li><li>Initial Value: <code>0xFFFF</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0xFFFF</code></li></ul>

    </p>

    <p>The <code>CRC-16/IBM-SDLC</code> standard is also known by the aliases <code>CRC-16/ISO-HDLC</code>, <code>CRC-16/ISO-IEC-14443-3-B</code>, <code>CRC-16/X-25</code>, <code>CRC-B</code>, and <code>X-25</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_IBMSDLC { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/IBM-SDLC</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_IBMSDLC As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_IBMSDLC*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOHDLC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ISOHDLC
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433B
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433B
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_X25
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_X25
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRCB
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRCB
  - linkId: Bodu.Security.Cryptography.CrcStandard.X25
    commentId: P:Bodu.Security.Cryptography.CrcStandard.X25
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOHDLC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ISOHDLC
  id: CRC16_ISOHDLC
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_ISOHDLC
  nameWithType: CrcStandard.CRC16_ISOHDLC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOHDLC
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_ISOHDLC
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2680
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/IBM-SDLC</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC16_ISOHDLC</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_IBMSDLC" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_ISOHDLC { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/ISO-HDLC</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_ISOHDLC As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOHDLC*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_IBMSDLC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_IBMSDLC
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433B
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433B
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_X25
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_X25
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRCB
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRCB
  - linkId: Bodu.Security.Cryptography.CrcStandard.X25
    commentId: P:Bodu.Security.Cryptography.CrcStandard.X25
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433B
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433B
  id: CRC16_ISOIEC144433B
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_ISOIEC144433B
  nameWithType: CrcStandard.CRC16_ISOIEC144433B
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433B
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_ISOIEC144433B
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2693
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/IBM-SDLC</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC16_ISOIEC144433B</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_IBMSDLC" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_ISOIEC144433B { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/ISO-IEC-14443-3-B</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_ISOIEC144433B As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433B*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_IBMSDLC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_IBMSDLC
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOHDLC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ISOHDLC
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_X25
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_X25
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRCB
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRCB
  - linkId: Bodu.Security.Cryptography.CrcStandard.X25
    commentId: P:Bodu.Security.Cryptography.CrcStandard.X25
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_X25
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_X25
  id: CRC16_X25
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_X25
  nameWithType: CrcStandard.CRC16_X25
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_X25
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_X25
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2706
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/IBM-SDLC</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC16_X25</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_IBMSDLC" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_X25 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/X-25</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_X25 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_X25*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_IBMSDLC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_IBMSDLC
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOHDLC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ISOHDLC
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433B
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433B
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRCB
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRCB
  - linkId: Bodu.Security.Cryptography.CrcStandard.X25
    commentId: P:Bodu.Security.Cryptography.CrcStandard.X25
- uid: Bodu.Security.Cryptography.CrcStandard.CRCB
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRCB
  id: CRCB
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRCB
  nameWithType: CrcStandard.CRCB
  fullName: Bodu.Security.Cryptography.CrcStandard.CRCB
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRCB
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2719
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/IBM-SDLC</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRCB</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_IBMSDLC" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRCB { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-B</code> definition.
    content.vb: Public Shared ReadOnly Property CRCB As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRCB*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_IBMSDLC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_IBMSDLC
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOHDLC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ISOHDLC
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433B
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433B
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_X25
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_X25
  - linkId: Bodu.Security.Cryptography.CrcStandard.X25
    commentId: P:Bodu.Security.Cryptography.CrcStandard.X25
- uid: Bodu.Security.Cryptography.CrcStandard.X25
  commentId: P:Bodu.Security.Cryptography.CrcStandard.X25
  id: X25
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: X25
  nameWithType: CrcStandard.X25
  fullName: Bodu.Security.Cryptography.CrcStandard.X25
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: X25
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2732
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/IBM-SDLC</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>X25</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_IBMSDLC" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard X25 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>X-25</code> definition.
    content.vb: Public Shared ReadOnly Property X25 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.X25*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_IBMSDLC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_IBMSDLC
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOHDLC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ISOHDLC
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433B
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433B
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_X25
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_X25
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRCB
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRCB
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433A
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433A
  id: CRC16_ISOIEC144433A
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_ISOIEC144433A
  nameWithType: CrcStandard.CRC16_ISOIEC144433A
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433A
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_ISOIEC144433A
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2752
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/ISO-IEC-14443-3-A</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-16/ISO-IEC-14443-3-A</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-iso-iec-14443-3-a">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 30 April 2011, Updated: 29 December 2021), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x1021</code></li><li>Initial Value: <code>0xC6C6</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>

    <p>The <code>CRC-16/ISO-IEC-14443-3-A</code> standard is also known by the alias <code>CRC-A</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_ISOIEC144433A { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/ISO-IEC-14443-3-A</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_ISOIEC144433A As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433A*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRCA
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRCA
- uid: Bodu.Security.Cryptography.CrcStandard.CRCA
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRCA
  id: CRCA
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRCA
  nameWithType: CrcStandard.CRCA
  fullName: Bodu.Security.Cryptography.CrcStandard.CRCA
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRCA
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2760
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/ISO-IEC-14443-3-A</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRCA</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433A" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRCA { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-A</code> definition.
    content.vb: Public Shared ReadOnly Property CRCA As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRCA*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433A
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433A
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_KERMIT
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_KERMIT
  id: CRC16_KERMIT
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_KERMIT
  nameWithType: CrcStandard.CRC16_KERMIT
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_KERMIT
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_KERMIT
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2784
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/KERMIT</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-16/KERMIT</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-kermit">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 10 September 2005, Updated: 23 December 2021), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x1021</code></li><li>Initial Value: <code>0x0000</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>

    <p>The <code>CRC-16/KERMIT</code> standard is also known by the aliases <code>CRC-16/CCITT</code>, <code>CRC-16/CCITT-TRUE</code>, <code>CRC-16/V-41-LSB</code>, <code>CRC-CCITT</code>, and <code>KERMIT</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_KERMIT { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/KERMIT</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_KERMIT As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_KERMIT*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITT
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_CCITT
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTTRUE
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTTRUE
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_V41LSB
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_V41LSB
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRCCCITT
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRCCCITT
  - linkId: Bodu.Security.Cryptography.CrcStandard.KERMIT
    commentId: P:Bodu.Security.Cryptography.CrcStandard.KERMIT
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITT
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_CCITT
  id: CRC16_CCITT
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_CCITT
  nameWithType: CrcStandard.CRC16_CCITT
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITT
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_CCITT
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2796
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/KERMIT</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC16_CCITT</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_KERMIT" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_CCITT { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/CCITT</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_CCITT As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITT*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_KERMIT
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_KERMIT
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTTRUE
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTTRUE
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_V41LSB
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_V41LSB
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRCCCITT
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRCCCITT
  - linkId: Bodu.Security.Cryptography.CrcStandard.KERMIT
    commentId: P:Bodu.Security.Cryptography.CrcStandard.KERMIT
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTTRUE
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTTRUE
  id: CRC16_CCITTTRUE
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_CCITTTRUE
  nameWithType: CrcStandard.CRC16_CCITTTRUE
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTTRUE
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_CCITTTRUE
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2809
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/KERMIT</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC16_CCITTTRUE</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_KERMIT" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_CCITTTRUE { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/CCITT-TRUE</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_CCITTTRUE As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTTRUE*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_KERMIT
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_KERMIT
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITT
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_CCITT
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_V41LSB
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_V41LSB
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRCCCITT
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRCCCITT
  - linkId: Bodu.Security.Cryptography.CrcStandard.KERMIT
    commentId: P:Bodu.Security.Cryptography.CrcStandard.KERMIT
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_V41LSB
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_V41LSB
  id: CRC16_V41LSB
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_V41LSB
  nameWithType: CrcStandard.CRC16_V41LSB
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_V41LSB
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_V41LSB
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2822
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/KERMIT</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC16_V41LSB</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_KERMIT" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_V41LSB { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/V-41-LSB</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_V41LSB As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_V41LSB*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_KERMIT
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_KERMIT
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITT
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_CCITT
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTTRUE
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTTRUE
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRCCCITT
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRCCCITT
  - linkId: Bodu.Security.Cryptography.CrcStandard.KERMIT
    commentId: P:Bodu.Security.Cryptography.CrcStandard.KERMIT
- uid: Bodu.Security.Cryptography.CrcStandard.CRCCCITT
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRCCCITT
  id: CRCCCITT
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRCCCITT
  nameWithType: CrcStandard.CRCCCITT
  fullName: Bodu.Security.Cryptography.CrcStandard.CRCCCITT
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRCCCITT
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2835
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/KERMIT</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRCCCITT</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_KERMIT" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRCCCITT { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-CCITT</code> definition.
    content.vb: Public Shared ReadOnly Property CRCCCITT As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRCCCITT*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_KERMIT
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_KERMIT
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITT
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_CCITT
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTTRUE
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTTRUE
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_V41LSB
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_V41LSB
  - linkId: Bodu.Security.Cryptography.CrcStandard.KERMIT
    commentId: P:Bodu.Security.Cryptography.CrcStandard.KERMIT
- uid: Bodu.Security.Cryptography.CrcStandard.KERMIT
  commentId: P:Bodu.Security.Cryptography.CrcStandard.KERMIT
  id: KERMIT
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: KERMIT
  nameWithType: CrcStandard.KERMIT
  fullName: Bodu.Security.Cryptography.CrcStandard.KERMIT
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: KERMIT
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2848
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/KERMIT</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>KERMIT</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_KERMIT" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard KERMIT { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>KERMIT</code> definition.
    content.vb: Public Shared ReadOnly Property KERMIT As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.KERMIT*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_KERMIT
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_KERMIT
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITT
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_CCITT
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTTRUE
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTTRUE
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_V41LSB
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_V41LSB
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRCCCITT
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRCCCITT
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_LJ1200
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_LJ1200
  id: CRC16_LJ1200
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_LJ1200
  nameWithType: CrcStandard.CRC16_LJ1200
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_LJ1200
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_LJ1200
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2867
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/LJ1200</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-16/LJ1200</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-16/LJ1200</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-lj1200">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 20 February 2016, Updated: 6 June 2018), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x6F63</code></li><li>Initial Value: <code>0x0000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_LJ1200 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/LJ1200</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_LJ1200 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_LJ1200*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_M17
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_M17
  id: CRC16_M17
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_M17
  nameWithType: CrcStandard.CRC16_M17
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_M17
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_M17
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2884
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/M17</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-16/M17</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-m17">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x5935</code></li><li>Initial Value: <code>0xFFFF</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_M17 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/M17</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_M17 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_M17*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_MAXIMDOW
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_MAXIMDOW
  id: CRC16_MAXIMDOW
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_MAXIMDOW
  nameWithType: CrcStandard.CRC16_MAXIMDOW
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_MAXIMDOW
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_MAXIMDOW
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2903
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/MAXIM-DOW</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-16/MAXIM-DOW</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-maxim-dow">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 26 April 2009, Updated: 28 December 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x8005</code></li><li>Initial Value: <code>0x0000</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0xFFFF</code></li></ul>

    </p>

    <p>The <code>CRC-16/MAXIM-DOW</code> standard is also known by the alias <code>CRC-16/MAXIM</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_MAXIMDOW { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/MAXIM-DOW</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_MAXIMDOW As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_MAXIMDOW*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_MAXIM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_MAXIM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_MAXIM
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_MAXIM
  id: CRC16_MAXIM
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_MAXIM
  nameWithType: CrcStandard.CRC16_MAXIM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_MAXIM
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_MAXIM
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2911
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/MAXIM-DOW</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC16_MAXIM</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_MAXIMDOW" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_MAXIM { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/MAXIM</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_MAXIM As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_MAXIM*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_MAXIMDOW
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_MAXIMDOW
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_MCRF4XX
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_MCRF4XX
  id: CRC16_MCRF4XX
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_MCRF4XX
  nameWithType: CrcStandard.CRC16_MCRF4XX
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_MCRF4XX
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_MCRF4XX
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2929
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/MCRF4XX</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-16/MCRF4XX</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-mcrf4xx">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 18 January 2008, Updated: 2 January 2021), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x1021</code></li><li>Initial Value: <code>0xFFFF</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_MCRF4XX { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/MCRF4XX</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_MCRF4XX As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_MCRF4XX*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_MODBUS
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_MODBUS
  id: CRC16_MODBUS
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_MODBUS
  nameWithType: CrcStandard.CRC16_MODBUS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_MODBUS
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_MODBUS
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2948
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/MODBUS</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-16/MODBUS</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-modbus">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 27 February 2007, Updated: 2 January 2021), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x8005</code></li><li>Initial Value: <code>0xFFFF</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>

    <p>The <code>CRC-16/MODBUS</code> standard is also known by the alias <code>MODBUS</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_MODBUS { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/MODBUS</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_MODBUS As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_MODBUS*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.MODBUS
    commentId: P:Bodu.Security.Cryptography.CrcStandard.MODBUS
- uid: Bodu.Security.Cryptography.CrcStandard.MODBUS
  commentId: P:Bodu.Security.Cryptography.CrcStandard.MODBUS
  id: MODBUS
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: MODBUS
  nameWithType: CrcStandard.MODBUS
  fullName: Bodu.Security.Cryptography.CrcStandard.MODBUS
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: MODBUS
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2956
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/MODBUS</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>MODBUS</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_MODBUS" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard MODBUS { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>MODBUS</code> definition.
    content.vb: Public Shared ReadOnly Property MODBUS As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.MODBUS*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_MODBUS
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_MODBUS
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_NRSC5
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_NRSC5
  id: CRC16_NRSC5
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_NRSC5
  nameWithType: CrcStandard.CRC16_NRSC5
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_NRSC5
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_NRSC5
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2974
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/NRSC-5</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-16/NRSC-5</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-nrsc-5">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 16 November 2018, Updated: 20 March 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x080B</code></li><li>Initial Value: <code>0xFFFF</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_NRSC5 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/NRSC-5</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_NRSC5 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_NRSC5*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_OPENSAFETYA
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_OPENSAFETYA
  id: CRC16_OPENSAFETYA
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_OPENSAFETYA
  nameWithType: CrcStandard.CRC16_OPENSAFETYA
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_OPENSAFETYA
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_OPENSAFETYA
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 2991
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/OPENSAFETY-A</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-16/OPENSAFETY-A</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-opensafety-a">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 22 July 2016, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x5935</code></li><li>Initial Value: <code>0x0000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_OPENSAFETYA { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/OPENSAFETY-A</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_OPENSAFETYA As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_OPENSAFETYA*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_OPENSAFETYB
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_OPENSAFETYB
  id: CRC16_OPENSAFETYB
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_OPENSAFETYB
  nameWithType: CrcStandard.CRC16_OPENSAFETYB
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_OPENSAFETYB
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_OPENSAFETYB
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3008
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/OPENSAFETY-B</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-16/OPENSAFETY-B</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-opensafety-b">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 22 July 2016, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x755B</code></li><li>Initial Value: <code>0x0000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_OPENSAFETYB { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/OPENSAFETY-B</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_OPENSAFETYB As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_OPENSAFETYB*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_PROFIBUS
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_PROFIBUS
  id: CRC16_PROFIBUS
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_PROFIBUS
  nameWithType: CrcStandard.CRC16_PROFIBUS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_PROFIBUS
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_PROFIBUS
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3027
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/PROFIBUS</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-16/PROFIBUS</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-profibus">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 5 July 2016, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x1DCF</code></li><li>Initial Value: <code>0xFFFF</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0xFFFF</code></li></ul>

    </p>

    <p>The <code>CRC-16/PROFIBUS</code> standard is also known by the alias <code>CRC-16/IEC-61158-2</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_PROFIBUS { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/PROFIBUS</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_PROFIBUS As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_PROFIBUS*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_IEC611582
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_IEC611582
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_IEC611582
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_IEC611582
  id: CRC16_IEC611582
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_IEC611582
  nameWithType: CrcStandard.CRC16_IEC611582
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_IEC611582
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_IEC611582
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3035
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/PROFIBUS</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC16_IEC611582</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_PROFIBUS" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_IEC611582 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/IEC-61158-2</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_IEC611582 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_IEC611582*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_PROFIBUS
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_PROFIBUS
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_RIELLO
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_RIELLO
  id: CRC16_RIELLO
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_RIELLO
  nameWithType: CrcStandard.CRC16_RIELLO
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_RIELLO
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_RIELLO
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3054
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/RIELLO</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-16/RIELLO</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-16/RIELLO</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-riello">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 18 April 2009, Updated: 28 December 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x1021</code></li><li>Initial Value: <code>0xB2AA</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_RIELLO { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/RIELLO</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_RIELLO As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_RIELLO*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_SPIFUJITSU
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_SPIFUJITSU
  id: CRC16_SPIFUJITSU
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_SPIFUJITSU
  nameWithType: CrcStandard.CRC16_SPIFUJITSU
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_SPIFUJITSU
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_SPIFUJITSU
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3073
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/SPI-FUJITSU</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-16/SPI-FUJITSU</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-spi-fujitsu">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 30 October 2007, Updated: 28 December 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x1021</code></li><li>Initial Value: <code>0x1D0F</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>

    <p>The <code>CRC-16/SPI-FUJITSU</code> standard is also known by the alias <code>CRC-16/AUG-CCITT</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_SPIFUJITSU { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/SPI-FUJITSU</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_SPIFUJITSU As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_SPIFUJITSU*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_AUGCCITT
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_AUGCCITT
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_AUGCCITT
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_AUGCCITT
  id: CRC16_AUGCCITT
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_AUGCCITT
  nameWithType: CrcStandard.CRC16_AUGCCITT
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_AUGCCITT
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_AUGCCITT
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3081
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/SPI-FUJITSU</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC16_AUGCCITT</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_SPIFUJITSU" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_AUGCCITT { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/AUG-CCITT</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_AUGCCITT As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_AUGCCITT*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_SPIFUJITSU
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_SPIFUJITSU
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_T10DIF
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_T10DIF
  id: CRC16_T10DIF
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_T10DIF
  nameWithType: CrcStandard.CRC16_T10DIF
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_T10DIF
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_T10DIF
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3099
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/T10-DIF</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-16/T10-DIF</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-t10-dif">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 29 September 2009, Updated: 2 January 2021), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x8BB7</code></li><li>Initial Value: <code>0x0000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_T10DIF { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/T10-DIF</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_T10DIF As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_T10DIF*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_TELEDISK
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_TELEDISK
  id: CRC16_TELEDISK
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_TELEDISK
  nameWithType: CrcStandard.CRC16_TELEDISK
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_TELEDISK
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_TELEDISK
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3116
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/TELEDISK</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-16/TELEDISK</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-teledisk">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 10 December 2009, Updated: 6 June 2018), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0xA097</code></li><li>Initial Value: <code>0x0000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_TELEDISK { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/TELEDISK</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_TELEDISK As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_TELEDISK*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_TMS37157
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_TMS37157
  id: CRC16_TMS37157
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_TMS37157
  nameWithType: CrcStandard.CRC16_TMS37157
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_TMS37157
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_TMS37157
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3133
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/TMS37157</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-16/TMS37157</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-tms37157">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 17 April 2011, Updated: 28 December 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x1021</code></li><li>Initial Value: <code>0x89EC</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_TMS37157 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/TMS37157</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_TMS37157 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_TMS37157*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_UMTS
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_UMTS
  id: CRC16_UMTS
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_UMTS
  nameWithType: CrcStandard.CRC16_UMTS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_UMTS
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_UMTS
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3153
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/UMTS</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-16/UMTS</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-umts">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 4 June 2008, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x8005</code></li><li>Initial Value: <code>0x0000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>

    <p>The <code>CRC-16/UMTS</code> standard is also known by the aliases <code>CRC-16/BUYPASS</code>, and <code>CRC-16/VERIFONE</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_UMTS { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/UMTS</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_UMTS As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_UMTS*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_BUYPASS
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_BUYPASS
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_VERIFONE
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_VERIFONE
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_BUYPASS
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_BUYPASS
  id: CRC16_BUYPASS
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_BUYPASS
  nameWithType: CrcStandard.CRC16_BUYPASS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_BUYPASS
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_BUYPASS
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3162
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/UMTS</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC16_BUYPASS</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_UMTS" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_BUYPASS { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/BUYPASS</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_BUYPASS As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_BUYPASS*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_UMTS
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_UMTS
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_VERIFONE
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_VERIFONE
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_VERIFONE
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_VERIFONE
  id: CRC16_VERIFONE
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_VERIFONE
  nameWithType: CrcStandard.CRC16_VERIFONE
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_VERIFONE
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_VERIFONE
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3172
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/UMTS</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC16_VERIFONE</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_UMTS" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_VERIFONE { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/VERIFONE</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_VERIFONE As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_VERIFONE*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_UMTS
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_UMTS
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_BUYPASS
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_BUYPASS
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_USB
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_USB
  id: CRC16_USB
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_USB
  nameWithType: CrcStandard.CRC16_USB
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_USB
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_USB
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3191
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/USB</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-16/USB</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-16/USB</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-usb">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 1 December 2007, Updated: 6 February 2017), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x8005</code></li><li>Initial Value: <code>0xFFFF</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0xFFFF</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_USB { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/USB</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_USB As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_USB*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_XMODEM
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_XMODEM
  id: CRC16_XMODEM
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_XMODEM
  nameWithType: CrcStandard.CRC16_XMODEM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_XMODEM
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_XMODEM
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3214
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/XMODEM</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-16/XMODEM</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-16-xmodem">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 30 March 2005, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>16</code></li><li>Polynomial: <code>0x1021</code></li><li>Initial Value: <code>0x0000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x0000</code></li></ul>

    </p>

    <p>The <code>CRC-16/XMODEM</code> standard is also known by the aliases <code>CRC-16/ACORN</code>, <code>CRC-16/LTE</code>, <code>CRC-16/V-41-MSB</code>, <code>XMODEM</code>, and <code>ZMODEM</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_XMODEM { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/XMODEM</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_XMODEM As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_XMODEM*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_ACORN
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ACORN
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_LTE
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_LTE
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_V41MSB
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_V41MSB
  - linkId: Bodu.Security.Cryptography.CrcStandard.XMODEM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.XMODEM
  - linkId: Bodu.Security.Cryptography.CrcStandard.ZMODEM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.ZMODEM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_ACORN
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ACORN
  id: CRC16_ACORN
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_ACORN
  nameWithType: CrcStandard.CRC16_ACORN
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_ACORN
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_ACORN
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3226
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/XMODEM</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC16_ACORN</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_XMODEM" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_ACORN { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/ACORN</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_ACORN As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_ACORN*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_XMODEM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_XMODEM
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_LTE
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_LTE
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_V41MSB
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_V41MSB
  - linkId: Bodu.Security.Cryptography.CrcStandard.XMODEM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.XMODEM
  - linkId: Bodu.Security.Cryptography.CrcStandard.ZMODEM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.ZMODEM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_LTE
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_LTE
  id: CRC16_LTE
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_LTE
  nameWithType: CrcStandard.CRC16_LTE
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_LTE
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_LTE
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3239
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/XMODEM</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC16_LTE</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_XMODEM" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_LTE { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/LTE</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_LTE As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_LTE*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_XMODEM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_XMODEM
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_ACORN
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ACORN
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_V41MSB
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_V41MSB
  - linkId: Bodu.Security.Cryptography.CrcStandard.XMODEM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.XMODEM
  - linkId: Bodu.Security.Cryptography.CrcStandard.ZMODEM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.ZMODEM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_V41MSB
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_V41MSB
  id: CRC16_V41MSB
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC16_V41MSB
  nameWithType: CrcStandard.CRC16_V41MSB
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_V41MSB
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC16_V41MSB
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3252
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/XMODEM</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC16_V41MSB</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_XMODEM" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC16_V41MSB { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-16/V-41-MSB</code> definition.
    content.vb: Public Shared ReadOnly Property CRC16_V41MSB As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC16_V41MSB*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_XMODEM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_XMODEM
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_ACORN
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ACORN
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_LTE
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_LTE
  - linkId: Bodu.Security.Cryptography.CrcStandard.XMODEM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.XMODEM
  - linkId: Bodu.Security.Cryptography.CrcStandard.ZMODEM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.ZMODEM
- uid: Bodu.Security.Cryptography.CrcStandard.XMODEM
  commentId: P:Bodu.Security.Cryptography.CrcStandard.XMODEM
  id: XMODEM
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: XMODEM
  nameWithType: CrcStandard.XMODEM
  fullName: Bodu.Security.Cryptography.CrcStandard.XMODEM
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: XMODEM
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3265
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/XMODEM</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>XMODEM</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_XMODEM" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard XMODEM { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>XMODEM</code> definition.
    content.vb: Public Shared ReadOnly Property XMODEM As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.XMODEM*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_XMODEM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_XMODEM
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_ACORN
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ACORN
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_LTE
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_LTE
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_V41MSB
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_V41MSB
  - linkId: Bodu.Security.Cryptography.CrcStandard.ZMODEM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.ZMODEM
- uid: Bodu.Security.Cryptography.CrcStandard.ZMODEM
  commentId: P:Bodu.Security.Cryptography.CrcStandard.ZMODEM
  id: ZMODEM
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: ZMODEM
  nameWithType: CrcStandard.ZMODEM
  fullName: Bodu.Security.Cryptography.CrcStandard.ZMODEM
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: ZMODEM
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3278
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-16/XMODEM</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>ZMODEM</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC16_XMODEM" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard ZMODEM { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>ZMODEM</code> definition.
    content.vb: Public Shared ReadOnly Property ZMODEM As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.ZMODEM*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_XMODEM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_XMODEM
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_ACORN
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ACORN
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_LTE
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_LTE
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC16_V41MSB
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_V41MSB
  - linkId: Bodu.Security.Cryptography.CrcStandard.XMODEM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.XMODEM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC17_CANFD
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC17_CANFD
  id: CRC17_CANFD
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC17_CANFD
  nameWithType: CrcStandard.CRC17_CANFD
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC17_CANFD
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC17_CANFD
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3300
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-17/CAN-FD</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-17/CAN-FD</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-17/CAN-FD</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-17-can-fd">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 20 June 2017, Updated: 3 January 2021), with the following definition.</p>

    <p>

    <ul><li>Width: <code>17</code></li><li>Polynomial: <code>0x0001685B</code></li><li>Initial Value: <code>0x00000000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x00000000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC17_CANFD { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-17/CAN-FD</code> definition.
    content.vb: Public Shared ReadOnly Property CRC17_CANFD As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC17_CANFD*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC21_CANFD
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC21_CANFD
  id: CRC21_CANFD
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC21_CANFD
  nameWithType: CrcStandard.CRC21_CANFD
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC21_CANFD
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC21_CANFD
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3321
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-21/CAN-FD</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-21/CAN-FD</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-21/CAN-FD</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-21-can-fd">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 20 June 2017, Updated: 3 January 2021), with the following definition.</p>

    <p>

    <ul><li>Width: <code>21</code></li><li>Polynomial: <code>0x00102899</code></li><li>Initial Value: <code>0x00000000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x00000000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC21_CANFD { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-21/CAN-FD</code> definition.
    content.vb: Public Shared ReadOnly Property CRC21_CANFD As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC21_CANFD*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC24_BLE
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC24_BLE
  id: CRC24_BLE
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC24_BLE
  nameWithType: CrcStandard.CRC24_BLE
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC24_BLE
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC24_BLE
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3341
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-24/BLE</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-24/BLE</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-24-ble">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 7 February 2016, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>24</code></li><li>Polynomial: <code>0x0000065B</code></li><li>Initial Value: <code>0x00555555</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x00000000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC24_BLE { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-24/BLE</code> definition.
    content.vb: Public Shared ReadOnly Property CRC24_BLE As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC24_BLE*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC24_FLEXRAYA
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC24_FLEXRAYA
  id: CRC24_FLEXRAYA
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC24_FLEXRAYA
  nameWithType: CrcStandard.CRC24_FLEXRAYA
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC24_FLEXRAYA
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC24_FLEXRAYA
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3358
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-24/FLEXRAY-A</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-24/FLEXRAY-A</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-24-flexray-a">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 3 November 2007, Updated: 6 February 2017), with the following definition.</p>

    <p>

    <ul><li>Width: <code>24</code></li><li>Polynomial: <code>0x005D6DCB</code></li><li>Initial Value: <code>0x00FEDCBA</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x00000000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC24_FLEXRAYA { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-24/FLEXRAY-A</code> definition.
    content.vb: Public Shared ReadOnly Property CRC24_FLEXRAYA As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC24_FLEXRAYA*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC24_FLEXRAYB
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC24_FLEXRAYB
  id: CRC24_FLEXRAYB
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC24_FLEXRAYB
  nameWithType: CrcStandard.CRC24_FLEXRAYB
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC24_FLEXRAYB
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC24_FLEXRAYB
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3375
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-24/FLEXRAY-B</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-24/FLEXRAY-B</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-24-flexray-b">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 3 November 2007, Updated: 6 February 2017), with the following definition.</p>

    <p>

    <ul><li>Width: <code>24</code></li><li>Polynomial: <code>0x005D6DCB</code></li><li>Initial Value: <code>0x00ABCDEF</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x00000000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC24_FLEXRAYB { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-24/FLEXRAY-B</code> definition.
    content.vb: Public Shared ReadOnly Property CRC24_FLEXRAYB As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC24_FLEXRAYB*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC24_INTERLAKEN
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC24_INTERLAKEN
  id: CRC24_INTERLAKEN
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC24_INTERLAKEN
  nameWithType: CrcStandard.CRC24_INTERLAKEN
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC24_INTERLAKEN
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC24_INTERLAKEN
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3393
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-24/INTERLAKEN</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-24/INTERLAKEN</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-24/INTERLAKEN</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-24-interlaken">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 10 February 2016, Updated: 28 December 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>24</code></li><li>Polynomial: <code>0x00328B63</code></li><li>Initial Value: <code>0x00FFFFFF</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x00FFFFFF</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC24_INTERLAKEN { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-24/INTERLAKEN</code> definition.
    content.vb: Public Shared ReadOnly Property CRC24_INTERLAKEN As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC24_INTERLAKEN*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC24_LTEA
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC24_LTEA
  id: CRC24_LTEA
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC24_LTEA
  nameWithType: CrcStandard.CRC24_LTEA
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC24_LTEA
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC24_LTEA
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3411
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-24/LTE-A</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-24/LTE-A</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-24/LTE-A</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-24-lte-a">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 13 February 2016, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>24</code></li><li>Polynomial: <code>0x00864CFB</code></li><li>Initial Value: <code>0x00000000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x00000000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC24_LTEA { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-24/LTE-A</code> definition.
    content.vb: Public Shared ReadOnly Property CRC24_LTEA As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC24_LTEA*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC24_LTEB
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC24_LTEB
  id: CRC24_LTEB
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC24_LTEB
  nameWithType: CrcStandard.CRC24_LTEB
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC24_LTEB
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC24_LTEB
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3429
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-24/LTE-B</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-24/LTE-B</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-24/LTE-B</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-24-lte-b">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 13 February 2016, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>24</code></li><li>Polynomial: <code>0x00800063</code></li><li>Initial Value: <code>0x00000000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x00000000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC24_LTEB { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-24/LTE-B</code> definition.
    content.vb: Public Shared ReadOnly Property CRC24_LTEB As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC24_LTEB*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC24_OPENPGP
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC24_OPENPGP
  id: CRC24_OPENPGP
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC24_OPENPGP
  nameWithType: CrcStandard.CRC24_OPENPGP
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC24_OPENPGP
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC24_OPENPGP
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3448
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-24/OPENPGP</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-24/OPENPGP</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-24-openpgp">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 2 November 2007, Updated: 25 March 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>24</code></li><li>Polynomial: <code>0x00864CFB</code></li><li>Initial Value: <code>0x00B704CE</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x00000000</code></li></ul>

    </p>

    <p>The <code>CRC-24/OPENPGP</code> standard is also known by the alias <code>CRC-24</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC24_OPENPGP { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-24/OPENPGP</code> definition.
    content.vb: Public Shared ReadOnly Property CRC24_OPENPGP As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC24_OPENPGP*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC24
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC24
- uid: Bodu.Security.Cryptography.CrcStandard.CRC24
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC24
  id: CRC24
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC24
  nameWithType: CrcStandard.CRC24
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC24
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC24
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3456
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-24/OPENPGP</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC24</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC24_OPENPGP" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC24 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-24</code> definition.
    content.vb: Public Shared ReadOnly Property CRC24 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC24*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC24_OPENPGP
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC24_OPENPGP
- uid: Bodu.Security.Cryptography.CrcStandard.CRC24_OS9
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC24_OS9
  id: CRC24_OS9
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC24_OS9
  nameWithType: CrcStandard.CRC24_OS9
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC24_OS9
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC24_OS9
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3474
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-24/OS-9</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-24/OS-9</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-24-os-9">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 25 July 2018, Updated: 28 December 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>24</code></li><li>Polynomial: <code>0x00800063</code></li><li>Initial Value: <code>0x00FFFFFF</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x00FFFFFF</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC24_OS9 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-24/OS-9</code> definition.
    content.vb: Public Shared ReadOnly Property CRC24_OS9 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC24_OS9*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC30_CDMA
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC30_CDMA
  id: CRC30_CDMA
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC30_CDMA
  nameWithType: CrcStandard.CRC30_CDMA
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC30_CDMA
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC30_CDMA
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3495
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-30/CDMA</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-30/CDMA</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-30/CDMA</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-30-cdma">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 20 February 2016, Updated: 3 January 2021), with the following definition.</p>

    <p>

    <ul><li>Width: <code>30</code></li><li>Polynomial: <code>0x2030B9C7</code></li><li>Initial Value: <code>0x3FFFFFFF</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x3FFFFFFF</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC30_CDMA { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-30/CDMA</code> definition.
    content.vb: Public Shared ReadOnly Property CRC30_CDMA As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC30_CDMA*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC31_PHILIPS
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC31_PHILIPS
  id: CRC31_PHILIPS
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC31_PHILIPS
  nameWithType: CrcStandard.CRC31_PHILIPS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC31_PHILIPS
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC31_PHILIPS
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3515
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-31/PHILIPS</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-31/PHILIPS</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-31-philips">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 12 April 2012, Updated: 28 December 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>31</code></li><li>Polynomial: <code>0x04C11DB7</code></li><li>Initial Value: <code>0x7FFFFFFF</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x7FFFFFFF</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC31_PHILIPS { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-31/PHILIPS</code> definition.
    content.vb: Public Shared ReadOnly Property CRC31_PHILIPS As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC31_PHILIPS*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_AIXM
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_AIXM
  id: CRC32_AIXM
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC32_AIXM
  nameWithType: CrcStandard.CRC32_AIXM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_AIXM
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC32_AIXM
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3537
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/AIXM</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-32/AIXM</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-32-aixm">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 29 April 2009, Updated: 2 January 2021), with the following definition.</p>

    <p>

    <ul><li>Width: <code>32</code></li><li>Polynomial: <code>0x814141AB</code></li><li>Initial Value: <code>0x00000000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x00000000</code></li></ul>

    </p>

    <p>The <code>CRC-32/AIXM</code> standard is also known by the alias <code>CRC-32Q</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC32_AIXM { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-32/AIXM</code> definition.
    content.vb: Public Shared ReadOnly Property CRC32_AIXM As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC32_AIXM*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32Q
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32Q
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32Q
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32Q
  id: CRC32Q
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC32Q
  nameWithType: CrcStandard.CRC32Q
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32Q
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC32Q
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3545
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/AIXM</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC32Q</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC32_AIXM" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC32Q { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-32Q</code> definition.
    content.vb: Public Shared ReadOnly Property CRC32Q As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC32Q*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_AIXM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_AIXM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_AUTOSAR
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_AUTOSAR
  id: CRC32_AUTOSAR
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC32_AUTOSAR
  nameWithType: CrcStandard.CRC32_AUTOSAR
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_AUTOSAR
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC32_AUTOSAR
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3563
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/AUTOSAR</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-32/AUTOSAR</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-32-autosar">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 24 July 2016, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>32</code></li><li>Polynomial: <code>0xF4ACFB13</code></li><li>Initial Value: <code>0xFFFFFFFF</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0xFFFFFFFF</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC32_AUTOSAR { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-32/AUTOSAR</code> definition.
    content.vb: Public Shared ReadOnly Property CRC32_AUTOSAR As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC32_AUTOSAR*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91D
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91D
  id: CRC32_BASE91D
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC32_BASE91D
  nameWithType: CrcStandard.CRC32_BASE91D
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91D
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC32_BASE91D
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3582
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/BASE91-D</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-32/BASE91-D</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-32-base91-d">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 28 November 2008, Updated: 21 March 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>32</code></li><li>Polynomial: <code>0xA833982B</code></li><li>Initial Value: <code>0xFFFFFFFF</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0xFFFFFFFF</code></li></ul>

    </p>

    <p>The <code>CRC-32/BASE91-D</code> standard is also known by the alias <code>CRC-32D</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC32_BASE91D { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-32/BASE91-D</code> definition.
    content.vb: Public Shared ReadOnly Property CRC32_BASE91D As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91D*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32D
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32D
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32D
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32D
  id: CRC32D
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC32D
  nameWithType: CrcStandard.CRC32D
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32D
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC32D
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3590
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/BASE91-D</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC32D</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91D" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC32D { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-32D</code> definition.
    content.vb: Public Shared ReadOnly Property CRC32D As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC32D*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91D
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91D
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_BZIP2
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_BZIP2
  id: CRC32_BZIP2
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC32_BZIP2
  nameWithType: CrcStandard.CRC32_BZIP2
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_BZIP2
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC32_BZIP2
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3612
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/BZIP2</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-32/BZIP2</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-32-bzip2">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 8 October 2008, Updated: 20 March 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>32</code></li><li>Polynomial: <code>0x04C11DB7</code></li><li>Initial Value: <code>0xFFFFFFFF</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0xFFFFFFFF</code></li></ul>

    </p>

    <p>The <code>CRC-32/BZIP2</code> standard is also known by the aliases <code>CRC-32/AAL5</code>, <code>CRC-32/DECT-B</code>, and <code>B-CRC-32</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC32_BZIP2 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-32/BZIP2</code> definition.
    content.vb: Public Shared ReadOnly Property CRC32_BZIP2 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC32_BZIP2*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_AAL5
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_AAL5
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_DECTB
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_DECTB
  - linkId: Bodu.Security.Cryptography.CrcStandard.BCRC32
    commentId: P:Bodu.Security.Cryptography.CrcStandard.BCRC32
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_AAL5
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_AAL5
  id: CRC32_AAL5
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC32_AAL5
  nameWithType: CrcStandard.CRC32_AAL5
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_AAL5
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC32_AAL5
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3622
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/BZIP2</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC32_AAL5</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC32_BZIP2" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC32_AAL5 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-32/AAL5</code> definition.
    content.vb: Public Shared ReadOnly Property CRC32_AAL5 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC32_AAL5*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_BZIP2
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_BZIP2
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_DECTB
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_DECTB
  - linkId: Bodu.Security.Cryptography.CrcStandard.BCRC32
    commentId: P:Bodu.Security.Cryptography.CrcStandard.BCRC32
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_DECTB
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_DECTB
  id: CRC32_DECTB
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC32_DECTB
  nameWithType: CrcStandard.CRC32_DECTB
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_DECTB
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC32_DECTB
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3633
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/BZIP2</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC32_DECTB</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC32_BZIP2" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC32_DECTB { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-32/DECT-B</code> definition.
    content.vb: Public Shared ReadOnly Property CRC32_DECTB As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC32_DECTB*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_BZIP2
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_BZIP2
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_AAL5
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_AAL5
  - linkId: Bodu.Security.Cryptography.CrcStandard.BCRC32
    commentId: P:Bodu.Security.Cryptography.CrcStandard.BCRC32
- uid: Bodu.Security.Cryptography.CrcStandard.BCRC32
  commentId: P:Bodu.Security.Cryptography.CrcStandard.BCRC32
  id: BCRC32
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: BCRC32
  nameWithType: CrcStandard.BCRC32
  fullName: Bodu.Security.Cryptography.CrcStandard.BCRC32
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: BCRC32
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3644
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/BZIP2</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>BCRC32</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC32_BZIP2" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard BCRC32 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>B-CRC-32</code> definition.
    content.vb: Public Shared ReadOnly Property BCRC32 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.BCRC32*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_BZIP2
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_BZIP2
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_AAL5
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_AAL5
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_DECTB
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_DECTB
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_CDROMEDC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_CDROMEDC
  id: CRC32_CDROMEDC
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC32_CDROMEDC
  nameWithType: CrcStandard.CRC32_CDROMEDC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_CDROMEDC
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC32_CDROMEDC
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3663
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/CD-ROM-EDC</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-32/CD-ROM-EDC</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-32/CD-ROM-EDC</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-32-cd-rom-edc">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 19 April 2019, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>32</code></li><li>Polynomial: <code>0x8001801B</code></li><li>Initial Value: <code>0x00000000</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x00000000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC32_CDROMEDC { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-32/CD-ROM-EDC</code> definition.
    content.vb: Public Shared ReadOnly Property CRC32_CDROMEDC As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC32_CDROMEDC*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_CKSUM
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_CKSUM
  id: CRC32_CKSUM
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC32_CKSUM
  nameWithType: CrcStandard.CRC32_CKSUM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_CKSUM
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC32_CKSUM
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3683
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/CKSUM</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-32/CKSUM</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-32-cksum">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 30 March 2005, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>32</code></li><li>Polynomial: <code>0x04C11DB7</code></li><li>Initial Value: <code>0x00000000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0xFFFFFFFF</code></li></ul>

    </p>

    <p>The <code>CRC-32/CKSUM</code> standard is also known by the aliases <code>CKSUM</code>, and <code>CRC-32/POSIX</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC32_CKSUM { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-32/CKSUM</code> definition.
    content.vb: Public Shared ReadOnly Property CRC32_CKSUM As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC32_CKSUM*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CKSUM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CKSUM
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_POSIX
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_POSIX
- uid: Bodu.Security.Cryptography.CrcStandard.CKSUM
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CKSUM
  id: CKSUM
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CKSUM
  nameWithType: CrcStandard.CKSUM
  fullName: Bodu.Security.Cryptography.CrcStandard.CKSUM
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CKSUM
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3692
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/CKSUM</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CKSUM</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC32_CKSUM" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CKSUM { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CKSUM</code> definition.
    content.vb: Public Shared ReadOnly Property CKSUM As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CKSUM*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_CKSUM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_CKSUM
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_POSIX
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_POSIX
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_POSIX
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_POSIX
  id: CRC32_POSIX
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC32_POSIX
  nameWithType: CrcStandard.CRC32_POSIX
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_POSIX
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC32_POSIX
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3702
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/CKSUM</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC32_POSIX</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC32_CKSUM" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC32_POSIX { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-32/POSIX</code> definition.
    content.vb: Public Shared ReadOnly Property CRC32_POSIX As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC32_POSIX*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_CKSUM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_CKSUM
  - linkId: Bodu.Security.Cryptography.CrcStandard.CKSUM
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CKSUM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_ISCSI
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_ISCSI
  id: CRC32_ISCSI
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC32_ISCSI
  nameWithType: CrcStandard.CRC32_ISCSI
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_ISCSI
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC32_ISCSI
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3725
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/ISCSI</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-32/ISCSI</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-32-iscsi">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 10 September 2005, Updated: 28 December 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>32</code></li><li>Polynomial: <code>0x1EDC6F41</code></li><li>Initial Value: <code>0xFFFFFFFF</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0xFFFFFFFF</code></li></ul>

    </p>

    <p>The <code>CRC-32/ISCSI</code> standard is also known by the aliases <code>CRC-32/BASE91-C</code>, <code>CRC-32/CASTAGNOLI</code>, <code>CRC-32/INTERLAKEN</code>, and <code>CRC-32C</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC32_ISCSI { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-32/ISCSI</code> definition.
    content.vb: Public Shared ReadOnly Property CRC32_ISCSI As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC32_ISCSI*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91C
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91C
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_CASTAGNOLI
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_CASTAGNOLI
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_INTERLAKEN
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_INTERLAKEN
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32C
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32C
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91C
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91C
  id: CRC32_BASE91C
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC32_BASE91C
  nameWithType: CrcStandard.CRC32_BASE91C
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91C
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC32_BASE91C
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3736
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/ISCSI</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC32_BASE91C</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC32_ISCSI" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC32_BASE91C { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-32/BASE91-C</code> definition.
    content.vb: Public Shared ReadOnly Property CRC32_BASE91C As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91C*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_ISCSI
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_ISCSI
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_CASTAGNOLI
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_CASTAGNOLI
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_INTERLAKEN
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_INTERLAKEN
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32C
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32C
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_CASTAGNOLI
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_CASTAGNOLI
  id: CRC32_CASTAGNOLI
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC32_CASTAGNOLI
  nameWithType: CrcStandard.CRC32_CASTAGNOLI
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_CASTAGNOLI
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC32_CASTAGNOLI
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3748
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/ISCSI</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC32_CASTAGNOLI</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC32_ISCSI" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC32_CASTAGNOLI { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-32/CASTAGNOLI</code> definition.
    content.vb: Public Shared ReadOnly Property CRC32_CASTAGNOLI As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC32_CASTAGNOLI*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_ISCSI
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_ISCSI
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91C
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91C
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_INTERLAKEN
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_INTERLAKEN
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32C
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32C
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_INTERLAKEN
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_INTERLAKEN
  id: CRC32_INTERLAKEN
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC32_INTERLAKEN
  nameWithType: CrcStandard.CRC32_INTERLAKEN
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_INTERLAKEN
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC32_INTERLAKEN
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3760
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/ISCSI</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC32_INTERLAKEN</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC32_ISCSI" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC32_INTERLAKEN { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-32/INTERLAKEN</code> definition.
    content.vb: Public Shared ReadOnly Property CRC32_INTERLAKEN As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC32_INTERLAKEN*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_ISCSI
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_ISCSI
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91C
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91C
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_CASTAGNOLI
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_CASTAGNOLI
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32C
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32C
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32C
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32C
  id: CRC32C
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC32C
  nameWithType: CrcStandard.CRC32C
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32C
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC32C
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3772
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/ISCSI</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC32C</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC32_ISCSI" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC32C { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-32C</code> definition.
    content.vb: Public Shared ReadOnly Property CRC32C As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC32C*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_ISCSI
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_ISCSI
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91C
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91C
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_CASTAGNOLI
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_CASTAGNOLI
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_INTERLAKEN
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_INTERLAKEN
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_ISOHDLC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_ISOHDLC
  id: CRC32_ISOHDLC
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC32_ISOHDLC
  nameWithType: CrcStandard.CRC32_ISOHDLC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_ISOHDLC
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC32_ISOHDLC
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3796
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/ISO-HDLC</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-32/ISO-HDLC</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-32-iso-hdlc">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 30 March 2005, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>32</code></li><li>Polynomial: <code>0x04C11DB7</code></li><li>Initial Value: <code>0xFFFFFFFF</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0xFFFFFFFF</code></li></ul>

    </p>

    <p>The <code>CRC-32/ISO-HDLC</code> standard is also known by the aliases <code>CRC-32</code>, <code>CRC-32/ADCCP</code>, <code>CRC-32/V-42</code>, <code>CRC-32/XZ</code>, and <code>PKZIP</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC32_ISOHDLC { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-32/ISO-HDLC</code> definition.
    content.vb: Public Shared ReadOnly Property CRC32_ISOHDLC As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC32_ISOHDLC*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_ADCCP
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_ADCCP
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_V42
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_V42
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_XZ
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_XZ
  - linkId: Bodu.Security.Cryptography.CrcStandard.PKZIP
    commentId: P:Bodu.Security.Cryptography.CrcStandard.PKZIP
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32
  id: CRC32
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC32
  nameWithType: CrcStandard.CRC32
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC32
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3808
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/ISO-HDLC</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC32</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC32_ISOHDLC" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC32 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-32</code> definition.
    content.vb: Public Shared ReadOnly Property CRC32 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC32*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_ISOHDLC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_ISOHDLC
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_ADCCP
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_ADCCP
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_V42
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_V42
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_XZ
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_XZ
  - linkId: Bodu.Security.Cryptography.CrcStandard.PKZIP
    commentId: P:Bodu.Security.Cryptography.CrcStandard.PKZIP
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_ADCCP
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_ADCCP
  id: CRC32_ADCCP
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC32_ADCCP
  nameWithType: CrcStandard.CRC32_ADCCP
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_ADCCP
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC32_ADCCP
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3821
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/ISO-HDLC</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC32_ADCCP</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC32_ISOHDLC" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC32_ADCCP { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-32/ADCCP</code> definition.
    content.vb: Public Shared ReadOnly Property CRC32_ADCCP As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC32_ADCCP*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_ISOHDLC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_ISOHDLC
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_V42
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_V42
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_XZ
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_XZ
  - linkId: Bodu.Security.Cryptography.CrcStandard.PKZIP
    commentId: P:Bodu.Security.Cryptography.CrcStandard.PKZIP
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_V42
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_V42
  id: CRC32_V42
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC32_V42
  nameWithType: CrcStandard.CRC32_V42
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_V42
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC32_V42
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3834
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/ISO-HDLC</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC32_V42</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC32_ISOHDLC" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC32_V42 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-32/V-42</code> definition.
    content.vb: Public Shared ReadOnly Property CRC32_V42 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC32_V42*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_ISOHDLC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_ISOHDLC
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_ADCCP
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_ADCCP
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_XZ
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_XZ
  - linkId: Bodu.Security.Cryptography.CrcStandard.PKZIP
    commentId: P:Bodu.Security.Cryptography.CrcStandard.PKZIP
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_XZ
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_XZ
  id: CRC32_XZ
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC32_XZ
  nameWithType: CrcStandard.CRC32_XZ
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_XZ
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC32_XZ
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3847
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/ISO-HDLC</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC32_XZ</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC32_ISOHDLC" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC32_XZ { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-32/XZ</code> definition.
    content.vb: Public Shared ReadOnly Property CRC32_XZ As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC32_XZ*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_ISOHDLC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_ISOHDLC
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_ADCCP
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_ADCCP
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_V42
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_V42
  - linkId: Bodu.Security.Cryptography.CrcStandard.PKZIP
    commentId: P:Bodu.Security.Cryptography.CrcStandard.PKZIP
- uid: Bodu.Security.Cryptography.CrcStandard.PKZIP
  commentId: P:Bodu.Security.Cryptography.CrcStandard.PKZIP
  id: PKZIP
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: PKZIP
  nameWithType: CrcStandard.PKZIP
  fullName: Bodu.Security.Cryptography.CrcStandard.PKZIP
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: PKZIP
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3860
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/ISO-HDLC</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>PKZIP</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC32_ISOHDLC" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard PKZIP { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>PKZIP</code> definition.
    content.vb: Public Shared ReadOnly Property PKZIP As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.PKZIP*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_ISOHDLC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_ISOHDLC
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_ADCCP
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_ADCCP
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_V42
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_V42
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_XZ
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_XZ
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_JAMCRC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_JAMCRC
  id: CRC32_JAMCRC
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC32_JAMCRC
  nameWithType: CrcStandard.CRC32_JAMCRC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_JAMCRC
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC32_JAMCRC
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3880
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/JAMCRC</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-32/JAMCRC</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-32-jamcrc">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 30 March 2005, Updated: 21 November 2018), with the following definition.</p>

    <p>

    <ul><li>Width: <code>32</code></li><li>Polynomial: <code>0x04C11DB7</code></li><li>Initial Value: <code>0xFFFFFFFF</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x00000000</code></li></ul>

    </p>

    <p>The <code>CRC-32/JAMCRC</code> standard is also known by the alias <code>JAMCRC</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC32_JAMCRC { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-32/JAMCRC</code> definition.
    content.vb: Public Shared ReadOnly Property CRC32_JAMCRC As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC32_JAMCRC*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.JAMCRC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.JAMCRC
- uid: Bodu.Security.Cryptography.CrcStandard.JAMCRC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.JAMCRC
  id: JAMCRC
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: JAMCRC
  nameWithType: CrcStandard.JAMCRC
  fullName: Bodu.Security.Cryptography.CrcStandard.JAMCRC
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: JAMCRC
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3888
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/JAMCRC</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>JAMCRC</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC32_JAMCRC" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard JAMCRC { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>JAMCRC</code> definition.
    content.vb: Public Shared ReadOnly Property JAMCRC As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.JAMCRC*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_JAMCRC
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_JAMCRC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_MEF
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_MEF
  id: CRC32_MEF
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC32_MEF
  nameWithType: CrcStandard.CRC32_MEF
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_MEF
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC32_MEF
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3906
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/MEF</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-32/MEF</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-32-mef">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 10 January 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>32</code></li><li>Polynomial: <code>0x741B8CD7</code></li><li>Initial Value: <code>0xFFFFFFFF</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x00000000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC32_MEF { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-32/MEF</code> definition.
    content.vb: Public Shared ReadOnly Property CRC32_MEF As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC32_MEF*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_MPEG2
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_MPEG2
  id: CRC32_MPEG2
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC32_MPEG2
  nameWithType: CrcStandard.CRC32_MPEG2
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_MPEG2
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC32_MPEG2
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3923
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/MPEG-2</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-32/MPEG-2</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-32-mpeg-2">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 8 October 2008, Updated: 2 January 2021), with the following definition.</p>

    <p>

    <ul><li>Width: <code>32</code></li><li>Polynomial: <code>0x04C11DB7</code></li><li>Initial Value: <code>0xFFFFFFFF</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x00000000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC32_MPEG2 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-32/MPEG-2</code> definition.
    content.vb: Public Shared ReadOnly Property CRC32_MPEG2 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC32_MPEG2*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_XFER
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_XFER
  id: CRC32_XFER
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC32_XFER
  nameWithType: CrcStandard.CRC32_XFER
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_XFER
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC32_XFER
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3942
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/XFER</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-32/XFER</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-32-xfer">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 30 March 2005, Updated: 2 January 2021), with the following definition.</p>

    <p>

    <ul><li>Width: <code>32</code></li><li>Polynomial: <code>0x000000AF</code></li><li>Initial Value: <code>0x00000000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x00000000</code></li></ul>

    </p>

    <p>The <code>CRC-32/XFER</code> standard is also known by the alias <code>XFER</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC32_XFER { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-32/XFER</code> definition.
    content.vb: Public Shared ReadOnly Property CRC32_XFER As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC32_XFER*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.XFER
    commentId: P:Bodu.Security.Cryptography.CrcStandard.XFER
- uid: Bodu.Security.Cryptography.CrcStandard.XFER
  commentId: P:Bodu.Security.Cryptography.CrcStandard.XFER
  id: XFER
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: XFER
  nameWithType: CrcStandard.XFER
  fullName: Bodu.Security.Cryptography.CrcStandard.XFER
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: XFER
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3950
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-32/XFER</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>XFER</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC32_XFER" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard XFER { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>XFER</code> definition.
    content.vb: Public Shared ReadOnly Property XFER As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.XFER*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC32_XFER
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_XFER
- uid: Bodu.Security.Cryptography.CrcStandard.CRC40_GSM
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC40_GSM
  id: CRC40_GSM
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC40_GSM
  nameWithType: CrcStandard.CRC40_GSM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC40_GSM
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC40_GSM
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3972
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-40/GSM</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-40/GSM</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-40/GSM</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-40-gsm">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 10 December 2009, Updated: 25 March 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>40</code></li><li>Polynomial: <code>0x0000000004820009</code></li><li>Initial Value: <code>0x0000000000000000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x000000FFFFFFFFFF</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC40_GSM { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-40/GSM</code> definition.
    content.vb: Public Shared ReadOnly Property CRC40_GSM As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC40_GSM*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC64_ECMA182
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC64_ECMA182
  id: CRC64_ECMA182
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC64_ECMA182
  nameWithType: CrcStandard.CRC64_ECMA182
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC64_ECMA182
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC64_ECMA182
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 3995
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-64/ECMA-182</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The parameters for the <code>CRC-64/ECMA-182</code> standard are not widely tested or confirmed.</p></div>

    <p>The <code>CRC-64/ECMA-182</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-64-ecma-182">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 6 April 2009, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>64</code></li><li>Polynomial: <code>0x42F0E1EBA9EA3693</code></li><li>Initial Value: <code>0x0000000000000000</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0x0000000000000000</code></li></ul>

    </p>

    <p>The <code>CRC-64/ECMA-182</code> standard is also known by the alias <code>CRC-64</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC64_ECMA182 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-64/ECMA-182</code> definition.
    content.vb: Public Shared ReadOnly Property CRC64_ECMA182 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC64_ECMA182*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC64
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC64
- uid: Bodu.Security.Cryptography.CrcStandard.CRC64
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC64
  id: CRC64
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC64
  nameWithType: CrcStandard.CRC64
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC64
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC64
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 4003
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-64/ECMA-182</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC64</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC64_ECMA182" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC64 { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-64</code> definition.
    content.vb: Public Shared ReadOnly Property CRC64 As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC64*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC64_ECMA182
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC64_ECMA182
- uid: Bodu.Security.Cryptography.CrcStandard.CRC64_GOISO
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC64_GOISO
  id: CRC64_GOISO
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC64_GOISO
  nameWithType: CrcStandard.CRC64_GOISO
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC64_GOISO
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC64_GOISO
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 4021
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-64/GO-ISO</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-64/GO-ISO</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-64-go-iso">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 28 January 2017, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>64</code></li><li>Polynomial: <code>0x000000000000001B</code></li><li>Initial Value: <code>0xFFFFFFFFFFFFFFFF</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0xFFFFFFFFFFFFFFFF</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC64_GOISO { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-64/GO-ISO</code> definition.
    content.vb: Public Shared ReadOnly Property CRC64_GOISO As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC64_GOISO*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC64_JONES
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC64_JONES
  id: CRC64_JONES
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC64_JONES
  nameWithType: CrcStandard.CRC64_JONES
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC64_JONES
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC64_JONES
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 4038
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-64/JONES</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-64/JONES</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-64-jones">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 31 December 9999), with the following definition.</p>

    <p>

    <ul><li>Width: <code>64</code></li><li>Polynomial: <code>0xAD93D23594C935A9</code></li><li>Initial Value: <code>0xFFFFFFFFFFFFFFFF</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x0000000000000000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC64_JONES { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-64/JONES</code> definition.
    content.vb: Public Shared ReadOnly Property CRC64_JONES As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC64_JONES*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC64_MS
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC64_MS
  id: CRC64_MS
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC64_MS
  nameWithType: CrcStandard.CRC64_MS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC64_MS
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC64_MS
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 4055
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-64/MS</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-64/MS</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-64-ms">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 7 January 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>64</code></li><li>Polynomial: <code>0x259C84CBA6426349</code></li><li>Initial Value: <code>0xFFFFFFFFFFFFFFFF</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0x0000000000000000</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC64_MS { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-64/MS</code> definition.
    content.vb: Public Shared ReadOnly Property CRC64_MS As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC64_MS*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC64_WE
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC64_WE
  id: CRC64_WE
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC64_WE
  nameWithType: CrcStandard.CRC64_WE
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC64_WE
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC64_WE
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 4072
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-64/WE</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-64/WE</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-64-we">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 8 November 2009, Updated: 28 December 2019), with the following definition.</p>

    <p>

    <ul><li>Width: <code>64</code></li><li>Polynomial: <code>0x42F0E1EBA9EA3693</code></li><li>Initial Value: <code>0xFFFFFFFFFFFFFFFF</code></li><li>Reflect In: <code>False</code></li><li>Reflect Out: <code>False</code></li><li>XOR Out: <code>0xFFFFFFFFFFFFFFFF</code></li></ul>

    </p>
  example: []
  syntax:
    content: public static CrcStandard CRC64_WE { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-64/WE</code> definition.
    content.vb: Public Shared ReadOnly Property CRC64_WE As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC64_WE*
- uid: Bodu.Security.Cryptography.CrcStandard.CRC64_XZ
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC64_XZ
  id: CRC64_XZ
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC64_XZ
  nameWithType: CrcStandard.CRC64_XZ
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC64_XZ
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC64_XZ
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 4091
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-64/XZ</code> cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The <code>CRC-64/XZ</code> standard was taken from <a href="http://reveng.sourceforge.net/crc-catalogue/all.htm#crc.cat.crc-64-xz">http://reveng.sourceforge.net/crc-catalogue/</a> (Created: 4 July 2011, Updated: 7 May 2022), with the following definition.</p>

    <p>

    <ul><li>Width: <code>64</code></li><li>Polynomial: <code>0x42F0E1EBA9EA3693</code></li><li>Initial Value: <code>0xFFFFFFFFFFFFFFFF</code></li><li>Reflect In: <code>True</code></li><li>Reflect Out: <code>True</code></li><li>XOR Out: <code>0xFFFFFFFFFFFFFFFF</code></li></ul>

    </p>

    <p>The <code>CRC-64/XZ</code> standard is also known by the alias <code>CRC-64/GO-ECMA</code>.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC64_XZ { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-64/XZ</code> definition.
    content.vb: Public Shared ReadOnly Property CRC64_XZ As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC64_XZ*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC64_GOECMA
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC64_GOECMA
- uid: Bodu.Security.Cryptography.CrcStandard.CRC64_GOECMA
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC64_GOECMA
  id: CRC64_GOECMA
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: CRC64_GOECMA
  nameWithType: CrcStandard.CRC64_GOECMA
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC64_GOECMA
  type: Property
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CRC64_GOECMA
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 4099
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Gets the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> that defines the <code>CRC-64/XZ</code> cyclic redundancy check algorithm standard.
  remarks: <p>The <code>CRC64_GOECMA</code> is an alias of the <xref href="Bodu.Security.Cryptography.CrcStandard.CRC64_XZ" data-throw-if-not-resolved="false"></xref> standard.</p>
  example: []
  syntax:
    content: public static CrcStandard CRC64_GOECMA { get; }
    parameters: []
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: A <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> object with the properties set to the <code>CRC-64/GO-ECMA</code> definition.
    content.vb: Public Shared ReadOnly Property CRC64_GOECMA As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.CRC64_GOECMA*
  seealso:
  - linkId: Bodu.Security.Cryptography.CrcStandard.CRC64_XZ
    commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC64_XZ
- uid: Bodu.Security.Cryptography.CrcStandard.GetCrcParameters(System.String)
  commentId: M:Bodu.Security.Cryptography.CrcStandard.GetCrcParameters(System.String)
  id: GetCrcParameters(System.String)
  parent: Bodu.Security.Cryptography.CrcStandard
  langs:
  - csharp
  - vb
  name: GetCrcParameters(string)
  nameWithType: CrcStandard.GetCrcParameters(string)
  fullName: Bodu.Security.Cryptography.CrcStandard.GetCrcParameters(string)
  type: Method
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: GetCrcParameters
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CrcStandard.g.cs
    startLine: 4303
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Return the <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> with the specified cyclic redundancy check algorithm standard.
  remarks: >-
    <p>The properties for the CRC Standards were taken from <a href="http://reveng.sourceforge.net/crc-catalogue/">http://reveng.sourceforge.net/crc-catalogue/</a>.</p>

    <p>The following permutationTable shows the valid values for the <code class="paramref">name</code> parameter and the CRC Standard it maps to.</p>

    <p><strong>Parameter value-Implements</strong></p>
  example: []
  syntax:
    content: public static CrcStandard GetCrcParameters(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the CRC Standard to use. See Remarks.
    return:
      type: Bodu.Security.Cryptography.CrcStandard
      description: The <xref href="Bodu.Security.Cryptography.CrcStandard" data-throw-if-not-resolved="false"></xref> associated with the specified cyclic redundancy check algorithm standard.
    content.vb: Public Shared Function GetCrcParameters(name As String) As CrcStandard
  overload: Bodu.Security.Cryptography.CrcStandard.GetCrcParameters*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">name</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> (Nothing in Visual Basic).
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code class="paramref">name</code> is a an unknown cyclic redundancy check standard.
  nameWithType.vb: CrcStandard.GetCrcParameters(String)
  fullName.vb: Bodu.Security.Cryptography.CrcStandard.GetCrcParameters(String)
  name.vb: GetCrcParameters(String)
references:
- uid: Bodu.Security.Cryptography.Crc
  commentId: T:Bodu.Security.Cryptography.Crc
  href: Bodu.Security.Cryptography.Crc.html
  name: Crc
  nameWithType: Crc
  fullName: Bodu.Security.Cryptography.Crc
- uid: Bodu.Security.Cryptography
  commentId: N:Bodu.Security.Cryptography
  href: Bodu.html
  name: Bodu.Security.Cryptography
  nameWithType: Bodu.Security.Cryptography
  fullName: Bodu.Security.Cryptography
  spec.csharp:
  - uid: Bodu
    name: Bodu
    href: Bodu.html
  - name: .
  - uid: Bodu.Security
    name: Security
    href: Bodu.Security.html
  - name: .
  - uid: Bodu.Security.Cryptography
    name: Cryptography
    href: Bodu.Security.Cryptography.html
  spec.vb:
  - uid: Bodu
    name: Bodu
    href: Bodu.html
  - name: .
  - uid: Bodu.Security
    name: Security
    href: Bodu.Security.html
  - name: .
  - uid: Bodu.Security.Cryptography
    name: Cryptography
    href: Bodu.Security.Cryptography.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.iserializable
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.IEquatable{Bodu.Security.Cryptography.CrcStandard}
  commentId: T:System.IEquatable{Bodu.Security.Cryptography.CrcStandard}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<CrcStandard>
  nameWithType: IEquatable<CrcStandard>
  fullName: System.IEquatable<Bodu.Security.Cryptography.CrcStandard>
  nameWithType.vb: IEquatable(Of CrcStandard)
  fullName.vb: System.IEquatable(Of Bodu.Security.Cryptography.CrcStandard)
  name.vb: IEquatable(Of CrcStandard)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Bodu.Security.Cryptography.CrcStandard
    name: CrcStandard
    href: Bodu.Security.Cryptography.CrcStandard.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Bodu.Security.Cryptography.CrcStandard
    name: CrcStandard
    href: Bodu.Security.Cryptography.CrcStandard.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Bodu.Security.Cryptography.CrcStandard.Bodu.Extensions.NumericExtensions.GetBytes``1(System.Boolean)
  commentId: M:Bodu.Extensions.NumericExtensions.GetBytes``1(``0,System.Boolean)
  parent: Bodu.Extensions.NumericExtensions
  definition: Bodu.Extensions.NumericExtensions.GetBytes``1(``0,System.Boolean)
  href: Bodu.Extensions.NumericExtensions.html#Bodu_Extensions_NumericExtensions_GetBytes__1___0_System_Boolean_
  name: GetBytes<CrcStandard>(CrcStandard, bool)
  nameWithType: NumericExtensions.GetBytes<CrcStandard>(CrcStandard, bool)
  fullName: Bodu.Extensions.NumericExtensions.GetBytes<Bodu.Security.Cryptography.CrcStandard>(Bodu.Security.Cryptography.CrcStandard, bool)
  nameWithType.vb: NumericExtensions.GetBytes(Of CrcStandard)(CrcStandard, Boolean)
  fullName.vb: Bodu.Extensions.NumericExtensions.GetBytes(Of Bodu.Security.Cryptography.CrcStandard)(Bodu.Security.Cryptography.CrcStandard, Boolean)
  name.vb: GetBytes(Of CrcStandard)(CrcStandard, Boolean)
  spec.csharp:
  - uid: Bodu.Extensions.NumericExtensions.GetBytes``1(Bodu.Security.Cryptography.CrcStandard,System.Boolean)
    name: GetBytes
    href: Bodu.Extensions.NumericExtensions.html#Bodu_Extensions_NumericExtensions_GetBytes__1___0_System_Boolean_
  - name: <
  - uid: Bodu.Security.Cryptography.CrcStandard
    name: CrcStandard
    href: Bodu.Security.Cryptography.CrcStandard.html
  - name: '>'
  - name: (
  - uid: Bodu.Security.Cryptography.CrcStandard
    name: CrcStandard
    href: Bodu.Security.Cryptography.CrcStandard.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Bodu.Extensions.NumericExtensions.GetBytes``1(Bodu.Security.Cryptography.CrcStandard,System.Boolean)
    name: GetBytes
    href: Bodu.Extensions.NumericExtensions.html#Bodu_Extensions_NumericExtensions_GetBytes__1___0_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - uid: Bodu.Security.Cryptography.CrcStandard
    name: CrcStandard
    href: Bodu.Security.Cryptography.CrcStandard.html
  - name: )
  - name: (
  - uid: Bodu.Security.Cryptography.CrcStandard
    name: CrcStandard
    href: Bodu.Security.Cryptography.CrcStandard.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Bodu.Extensions.NumericExtensions.GetBytes``1(``0,System.Boolean)
  commentId: M:Bodu.Extensions.NumericExtensions.GetBytes``1(``0,System.Boolean)
  isExternal: true
  href: Bodu.Extensions.NumericExtensions.html#Bodu_Extensions_NumericExtensions_GetBytes__1___0_System_Boolean_
  name: GetBytes<T>(T, bool)
  nameWithType: NumericExtensions.GetBytes<T>(T, bool)
  fullName: Bodu.Extensions.NumericExtensions.GetBytes<T>(T, bool)
  nameWithType.vb: NumericExtensions.GetBytes(Of T)(T, Boolean)
  fullName.vb: Bodu.Extensions.NumericExtensions.GetBytes(Of T)(T, Boolean)
  name.vb: GetBytes(Of T)(T, Boolean)
  spec.csharp:
  - uid: Bodu.Extensions.NumericExtensions.GetBytes``1(``0,System.Boolean)
    name: GetBytes
    href: Bodu.Extensions.NumericExtensions.html#Bodu_Extensions_NumericExtensions_GetBytes__1___0_System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Bodu.Extensions.NumericExtensions.GetBytes``1(``0,System.Boolean)
    name: GetBytes
    href: Bodu.Extensions.NumericExtensions.html#Bodu_Extensions_NumericExtensions_GetBytes__1___0_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Bodu.Extensions.NumericExtensions
  commentId: T:Bodu.Extensions.NumericExtensions
  parent: Bodu.Extensions
  href: Bodu.Extensions.NumericExtensions.html
  name: NumericExtensions
  nameWithType: NumericExtensions
  fullName: Bodu.Extensions.NumericExtensions
- uid: Bodu.Extensions
  commentId: N:Bodu.Extensions
  href: Bodu.html
  name: Bodu.Extensions
  nameWithType: Bodu.Extensions
  fullName: Bodu.Extensions
  spec.csharp:
  - uid: Bodu
    name: Bodu
    href: Bodu.html
  - name: .
  - uid: Bodu.Extensions
    name: Extensions
    href: Bodu.Extensions.html
  spec.vb:
  - uid: Bodu
    name: Bodu
    href: Bodu.html
  - name: .
  - uid: Bodu.Extensions
    name: Extensions
    href: Bodu.Extensions.html
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Bodu.Security.Cryptography.CrcStandard
  commentId: T:Bodu.Security.Cryptography.CrcStandard
  parent: Bodu.Security.Cryptography
  href: Bodu.Security.Cryptography.CrcStandard.html
  name: CrcStandard
  nameWithType: CrcStandard
  fullName: Bodu.Security.Cryptography.CrcStandard
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: Bodu.Security.Cryptography.CrcStandard.#ctor*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.#ctor
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard__ctor_System_String_System_Int32_System_UInt64_System_UInt64_System_Boolean_System_Boolean_System_UInt64_
  name: CrcStandard
  nameWithType: CrcStandard.CrcStandard
  fullName: Bodu.Security.Cryptography.CrcStandard.CrcStandard
  nameWithType.vb: CrcStandard.New
  fullName.vb: Bodu.Security.Cryptography.CrcStandard.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Bodu.Security.Cryptography.CrcStandard.Name*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.Name
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_Name
  name: Name
  nameWithType: CrcStandard.Name
  fullName: Bodu.Security.Cryptography.CrcStandard.Name
- uid: Bodu.Security.Cryptography.CrcStandard.Size*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.Size
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_Size
  name: Size
  nameWithType: CrcStandard.Size
  fullName: Bodu.Security.Cryptography.CrcStandard.Size
- uid: Bodu.Security.Cryptography.CrcStandard.Polynomial*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.Polynomial
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_Polynomial
  name: Polynomial
  nameWithType: CrcStandard.Polynomial
  fullName: Bodu.Security.Cryptography.CrcStandard.Polynomial
- uid: Bodu.Security.Cryptography.CrcStandard.InitialValue*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.InitialValue
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_InitialValue
  name: InitialValue
  nameWithType: CrcStandard.InitialValue
  fullName: Bodu.Security.Cryptography.CrcStandard.InitialValue
- uid: Bodu.Security.Cryptography.CrcStandard.ReflectIn*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.ReflectIn
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_ReflectIn
  name: ReflectIn
  nameWithType: CrcStandard.ReflectIn
  fullName: Bodu.Security.Cryptography.CrcStandard.ReflectIn
- uid: Bodu.Security.Cryptography.CrcStandard.XOrOut
  commentId: P:Bodu.Security.Cryptography.CrcStandard.XOrOut
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_XOrOut
  name: XOrOut
  nameWithType: CrcStandard.XOrOut
  fullName: Bodu.Security.Cryptography.CrcStandard.XOrOut
- uid: Bodu.Security.Cryptography.CrcStandard.ReflectOut*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.ReflectOut
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_ReflectOut
  name: ReflectOut
  nameWithType: CrcStandard.ReflectOut
  fullName: Bodu.Security.Cryptography.CrcStandard.ReflectOut
- uid: Bodu.Security.Cryptography.CrcStandard.XOrOut*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.XOrOut
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_XOrOut
  name: XOrOut
  nameWithType: CrcStandard.XOrOut
  fullName: Bodu.Security.Cryptography.CrcStandard.XOrOut
- uid: Bodu.Security.Cryptography.CrcStandard.Equals*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.Equals
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_Equals_Bodu_Security_Cryptography_CrcStandard_
  name: Equals
  nameWithType: CrcStandard.Equals
  fullName: Bodu.Security.Cryptography.CrcStandard.Equals
- uid: System.IEquatable{Bodu.Security.Cryptography.CrcStandard}.Equals(Bodu.Security.Cryptography.CrcStandard)
  commentId: M:System.IEquatable{Bodu.Security.Cryptography.CrcStandard}.Equals(Bodu.Security.Cryptography.CrcStandard)
  parent: System.IEquatable{Bodu.Security.Cryptography.CrcStandard}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(CrcStandard)
  nameWithType: IEquatable<CrcStandard>.Equals(CrcStandard)
  fullName: System.IEquatable<Bodu.Security.Cryptography.CrcStandard>.Equals(Bodu.Security.Cryptography.CrcStandard)
  nameWithType.vb: IEquatable(Of CrcStandard).Equals(CrcStandard)
  fullName.vb: System.IEquatable(Of Bodu.Security.Cryptography.CrcStandard).Equals(Bodu.Security.Cryptography.CrcStandard)
  spec.csharp:
  - uid: System.IEquatable{Bodu.Security.Cryptography.CrcStandard}.Equals(Bodu.Security.Cryptography.CrcStandard)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Bodu.Security.Cryptography.CrcStandard
    name: CrcStandard
    href: Bodu.Security.Cryptography.CrcStandard.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{Bodu.Security.Cryptography.CrcStandard}.Equals(Bodu.Security.Cryptography.CrcStandard)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Bodu.Security.Cryptography.CrcStandard
    name: CrcStandard
    href: Bodu.Security.Cryptography.CrcStandard.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: Bodu.Security.Cryptography.CrcStandard.GetHashCode*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.GetHashCode
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_GetHashCode
  name: GetHashCode
  nameWithType: CrcStandard.GetHashCode
  fullName: Bodu.Security.Cryptography.CrcStandard.GetHashCode
- uid: Bodu.Security.Cryptography.CrcStandard.CRC3_GSM*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC3_GSM
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC3_GSM
  name: CRC3_GSM
  nameWithType: CrcStandard.CRC3_GSM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC3_GSM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC3_ROHC*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC3_ROHC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC3_ROHC
  name: CRC3_ROHC
  nameWithType: CrcStandard.CRC3_ROHC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC3_ROHC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC4_ITU
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC4_ITU
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC4_ITU
  name: CRC4_ITU
  nameWithType: CrcStandard.CRC4_ITU
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC4_ITU
- uid: Bodu.Security.Cryptography.CrcStandard.CRC4_G704*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC4_G704
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC4_G704
  name: CRC4_G704
  nameWithType: CrcStandard.CRC4_G704
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC4_G704
- uid: Bodu.Security.Cryptography.CrcStandard.CRC4_G704
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC4_G704
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC4_G704
  name: CRC4_G704
  nameWithType: CrcStandard.CRC4_G704
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC4_G704
- uid: Bodu.Security.Cryptography.CrcStandard.CRC4_ITU*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC4_ITU
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC4_ITU
  name: CRC4_ITU
  nameWithType: CrcStandard.CRC4_ITU
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC4_ITU
- uid: Bodu.Security.Cryptography.CrcStandard.CRC4_INTERLAKEN*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC4_INTERLAKEN
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC4_INTERLAKEN
  name: CRC4_INTERLAKEN
  nameWithType: CrcStandard.CRC4_INTERLAKEN
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC4_INTERLAKEN
- uid: Bodu.Security.Cryptography.CrcStandard.CRC5_EPC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC5_EPC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC5_EPC
  name: CRC5_EPC
  nameWithType: CrcStandard.CRC5_EPC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC5_EPC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC5_EPCC1G2*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC5_EPCC1G2
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC5_EPCC1G2
  name: CRC5_EPCC1G2
  nameWithType: CrcStandard.CRC5_EPCC1G2
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC5_EPCC1G2
- uid: Bodu.Security.Cryptography.CrcStandard.CRC5_EPCC1G2
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC5_EPCC1G2
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC5_EPCC1G2
  name: CRC5_EPCC1G2
  nameWithType: CrcStandard.CRC5_EPCC1G2
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC5_EPCC1G2
- uid: Bodu.Security.Cryptography.CrcStandard.CRC5_EPC*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC5_EPC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC5_EPC
  name: CRC5_EPC
  nameWithType: CrcStandard.CRC5_EPC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC5_EPC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC5_ITU
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC5_ITU
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC5_ITU
  name: CRC5_ITU
  nameWithType: CrcStandard.CRC5_ITU
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC5_ITU
- uid: Bodu.Security.Cryptography.CrcStandard.CRC5_G704*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC5_G704
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC5_G704
  name: CRC5_G704
  nameWithType: CrcStandard.CRC5_G704
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC5_G704
- uid: Bodu.Security.Cryptography.CrcStandard.CRC5_G704
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC5_G704
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC5_G704
  name: CRC5_G704
  nameWithType: CrcStandard.CRC5_G704
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC5_G704
- uid: Bodu.Security.Cryptography.CrcStandard.CRC5_ITU*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC5_ITU
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC5_ITU
  name: CRC5_ITU
  nameWithType: CrcStandard.CRC5_ITU
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC5_ITU
- uid: Bodu.Security.Cryptography.CrcStandard.CRC5_USB*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC5_USB
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC5_USB
  name: CRC5_USB
  nameWithType: CrcStandard.CRC5_USB
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC5_USB
- uid: Bodu.Security.Cryptography.CrcStandard.CRC6_CDMA2000A*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC6_CDMA2000A
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC6_CDMA2000A
  name: CRC6_CDMA2000A
  nameWithType: CrcStandard.CRC6_CDMA2000A
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC6_CDMA2000A
- uid: Bodu.Security.Cryptography.CrcStandard.CRC6_CDMA2000B*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC6_CDMA2000B
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC6_CDMA2000B
  name: CRC6_CDMA2000B
  nameWithType: CrcStandard.CRC6_CDMA2000B
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC6_CDMA2000B
- uid: Bodu.Security.Cryptography.CrcStandard.CRC6_DARC*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC6_DARC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC6_DARC
  name: CRC6_DARC
  nameWithType: CrcStandard.CRC6_DARC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC6_DARC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC6_ITU
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC6_ITU
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC6_ITU
  name: CRC6_ITU
  nameWithType: CrcStandard.CRC6_ITU
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC6_ITU
- uid: Bodu.Security.Cryptography.CrcStandard.CRC6_G704*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC6_G704
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC6_G704
  name: CRC6_G704
  nameWithType: CrcStandard.CRC6_G704
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC6_G704
- uid: Bodu.Security.Cryptography.CrcStandard.CRC6_G704
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC6_G704
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC6_G704
  name: CRC6_G704
  nameWithType: CrcStandard.CRC6_G704
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC6_G704
- uid: Bodu.Security.Cryptography.CrcStandard.CRC6_ITU*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC6_ITU
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC6_ITU
  name: CRC6_ITU
  nameWithType: CrcStandard.CRC6_ITU
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC6_ITU
- uid: Bodu.Security.Cryptography.CrcStandard.CRC6_GSM*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC6_GSM
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC6_GSM
  name: CRC6_GSM
  nameWithType: CrcStandard.CRC6_GSM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC6_GSM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC7
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC7
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC7
  name: CRC7
  nameWithType: CrcStandard.CRC7
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC7
- uid: Bodu.Security.Cryptography.CrcStandard.CRC7_MMC*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC7_MMC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC7_MMC
  name: CRC7_MMC
  nameWithType: CrcStandard.CRC7_MMC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC7_MMC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC7_MMC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC7_MMC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC7_MMC
  name: CRC7_MMC
  nameWithType: CrcStandard.CRC7_MMC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC7_MMC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC7*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC7
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC7
  name: CRC7
  nameWithType: CrcStandard.CRC7
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC7
- uid: Bodu.Security.Cryptography.CrcStandard.CRC7_ROHC*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC7_ROHC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC7_ROHC
  name: CRC7_ROHC
  nameWithType: CrcStandard.CRC7_ROHC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC7_ROHC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC7_UMTS*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC7_UMTS
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC7_UMTS
  name: CRC7_UMTS
  nameWithType: CrcStandard.CRC7_UMTS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC7_UMTS
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_AUTOSAR*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC8_AUTOSAR
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_AUTOSAR
  name: CRC8_AUTOSAR
  nameWithType: CrcStandard.CRC8_AUTOSAR
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_AUTOSAR
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_BLUETOOTH*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC8_BLUETOOTH
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_BLUETOOTH
  name: CRC8_BLUETOOTH
  nameWithType: CrcStandard.CRC8_BLUETOOTH
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_BLUETOOTH
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_CDMA2000*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC8_CDMA2000
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_CDMA2000
  name: CRC8_CDMA2000
  nameWithType: CrcStandard.CRC8_CDMA2000
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_CDMA2000
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_DARC*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC8_DARC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_DARC
  name: CRC8_DARC
  nameWithType: CrcStandard.CRC8_DARC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_DARC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_DVBS2*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC8_DVBS2
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_DVBS2
  name: CRC8_DVBS2
  nameWithType: CrcStandard.CRC8_DVBS2
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_DVBS2
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_GSMA*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC8_GSMA
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_GSMA
  name: CRC8_GSMA
  nameWithType: CrcStandard.CRC8_GSMA
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_GSMA
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_GSMB*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC8_GSMB
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_GSMB
  name: CRC8_GSMB
  nameWithType: CrcStandard.CRC8_GSMB
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_GSMB
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_HITAG*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC8_HITAG
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_HITAG
  name: CRC8_HITAG
  nameWithType: CrcStandard.CRC8_HITAG
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_HITAG
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_ITU
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_ITU
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_ITU
  name: CRC8_ITU
  nameWithType: CrcStandard.CRC8_ITU
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_ITU
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_I4321*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC8_I4321
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_I4321
  name: CRC8_I4321
  nameWithType: CrcStandard.CRC8_I4321
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_I4321
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_I4321
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_I4321
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_I4321
  name: CRC8_I4321
  nameWithType: CrcStandard.CRC8_I4321
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_I4321
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_ITU*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC8_ITU
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_ITU
  name: CRC8_ITU
  nameWithType: CrcStandard.CRC8_ITU
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_ITU
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_ICODE*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC8_ICODE
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_ICODE
  name: CRC8_ICODE
  nameWithType: CrcStandard.CRC8_ICODE
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_ICODE
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_LTE*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC8_LTE
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_LTE
  name: CRC8_LTE
  nameWithType: CrcStandard.CRC8_LTE
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_LTE
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIM
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIM
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_MAXIM
  name: CRC8_MAXIM
  nameWithType: CrcStandard.CRC8_MAXIM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIM
- uid: Bodu.Security.Cryptography.CrcStandard.DOWCRC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.DOWCRC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_DOWCRC
  name: DOWCRC
  nameWithType: CrcStandard.DOWCRC
  fullName: Bodu.Security.Cryptography.CrcStandard.DOWCRC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIMDOW*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIMDOW
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_MAXIMDOW
  name: CRC8_MAXIMDOW
  nameWithType: CrcStandard.CRC8_MAXIMDOW
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIMDOW
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIMDOW
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIMDOW
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_MAXIMDOW
  name: CRC8_MAXIMDOW
  nameWithType: CrcStandard.CRC8_MAXIMDOW
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIMDOW
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIM*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIM
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_MAXIM
  name: CRC8_MAXIM
  nameWithType: CrcStandard.CRC8_MAXIM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_MAXIM
- uid: Bodu.Security.Cryptography.CrcStandard.DOWCRC*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.DOWCRC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_DOWCRC
  name: DOWCRC
  nameWithType: CrcStandard.DOWCRC
  fullName: Bodu.Security.Cryptography.CrcStandard.DOWCRC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_MIFAREMAD*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC8_MIFAREMAD
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_MIFAREMAD
  name: CRC8_MIFAREMAD
  nameWithType: CrcStandard.CRC8_MIFAREMAD
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_MIFAREMAD
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_NRSC5*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC8_NRSC5
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_NRSC5
  name: CRC8_NRSC5
  nameWithType: CrcStandard.CRC8_NRSC5
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_NRSC5
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_OPENSAFETY*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC8_OPENSAFETY
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_OPENSAFETY
  name: CRC8_OPENSAFETY
  nameWithType: CrcStandard.CRC8_OPENSAFETY
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_OPENSAFETY
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_ROHC*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC8_ROHC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_ROHC
  name: CRC8_ROHC
  nameWithType: CrcStandard.CRC8_ROHC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_ROHC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_SAEJ1850*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC8_SAEJ1850
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_SAEJ1850
  name: CRC8_SAEJ1850
  nameWithType: CrcStandard.CRC8_SAEJ1850
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_SAEJ1850
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8
  name: CRC8
  nameWithType: CrcStandard.CRC8
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_SMBUS*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC8_SMBUS
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_SMBUS
  name: CRC8_SMBUS
  nameWithType: CrcStandard.CRC8_SMBUS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_SMBUS
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_SMBUS
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_SMBUS
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_SMBUS
  name: CRC8_SMBUS
  nameWithType: CrcStandard.CRC8_SMBUS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_SMBUS
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC8
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8
  name: CRC8
  nameWithType: CrcStandard.CRC8
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_AES
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_AES
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_AES
  name: CRC8_AES
  nameWithType: CrcStandard.CRC8_AES
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_AES
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_EBU
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_EBU
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_EBU
  name: CRC8_EBU
  nameWithType: CrcStandard.CRC8_EBU
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_EBU
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_TECH3250*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC8_TECH3250
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_TECH3250
  name: CRC8_TECH3250
  nameWithType: CrcStandard.CRC8_TECH3250
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_TECH3250
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_TECH3250
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC8_TECH3250
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_TECH3250
  name: CRC8_TECH3250
  nameWithType: CrcStandard.CRC8_TECH3250
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_TECH3250
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_AES*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC8_AES
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_AES
  name: CRC8_AES
  nameWithType: CrcStandard.CRC8_AES
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_AES
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_EBU*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC8_EBU
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_EBU
  name: CRC8_EBU
  nameWithType: CrcStandard.CRC8_EBU
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_EBU
- uid: Bodu.Security.Cryptography.CrcStandard.CRC8_WCDMA*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC8_WCDMA
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC8_WCDMA
  name: CRC8_WCDMA
  nameWithType: CrcStandard.CRC8_WCDMA
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC8_WCDMA
- uid: Bodu.Security.Cryptography.CrcStandard.CRC10
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC10
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC10
  name: CRC10
  nameWithType: CrcStandard.CRC10
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC10
- uid: Bodu.Security.Cryptography.CrcStandard.CRC10_I610
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC10_I610
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC10_I610
  name: CRC10_I610
  nameWithType: CrcStandard.CRC10_I610
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC10_I610
- uid: Bodu.Security.Cryptography.CrcStandard.CRC10_ATM*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC10_ATM
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC10_ATM
  name: CRC10_ATM
  nameWithType: CrcStandard.CRC10_ATM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC10_ATM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC10_ATM
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC10_ATM
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC10_ATM
  name: CRC10_ATM
  nameWithType: CrcStandard.CRC10_ATM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC10_ATM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC10*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC10
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC10
  name: CRC10
  nameWithType: CrcStandard.CRC10
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC10
- uid: Bodu.Security.Cryptography.CrcStandard.CRC10_I610*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC10_I610
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC10_I610
  name: CRC10_I610
  nameWithType: CrcStandard.CRC10_I610
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC10_I610
- uid: Bodu.Security.Cryptography.CrcStandard.CRC10_CDMA2000*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC10_CDMA2000
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC10_CDMA2000
  name: CRC10_CDMA2000
  nameWithType: CrcStandard.CRC10_CDMA2000
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC10_CDMA2000
- uid: Bodu.Security.Cryptography.CrcStandard.CRC10_GSM*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC10_GSM
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC10_GSM
  name: CRC10_GSM
  nameWithType: CrcStandard.CRC10_GSM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC10_GSM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC11
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC11
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC11
  name: CRC11
  nameWithType: CrcStandard.CRC11
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC11
- uid: Bodu.Security.Cryptography.CrcStandard.CRC11_FLEXRAY*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC11_FLEXRAY
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC11_FLEXRAY
  name: CRC11_FLEXRAY
  nameWithType: CrcStandard.CRC11_FLEXRAY
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC11_FLEXRAY
- uid: Bodu.Security.Cryptography.CrcStandard.CRC11_FLEXRAY
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC11_FLEXRAY
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC11_FLEXRAY
  name: CRC11_FLEXRAY
  nameWithType: CrcStandard.CRC11_FLEXRAY
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC11_FLEXRAY
- uid: Bodu.Security.Cryptography.CrcStandard.CRC11*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC11
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC11
  name: CRC11
  nameWithType: CrcStandard.CRC11
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC11
- uid: Bodu.Security.Cryptography.CrcStandard.CRC11_UMTS*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC11_UMTS
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC11_UMTS
  name: CRC11_UMTS
  nameWithType: CrcStandard.CRC11_UMTS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC11_UMTS
- uid: Bodu.Security.Cryptography.CrcStandard.CRC12_CDMA2000*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC12_CDMA2000
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC12_CDMA2000
  name: CRC12_CDMA2000
  nameWithType: CrcStandard.CRC12_CDMA2000
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC12_CDMA2000
- uid: Bodu.Security.Cryptography.CrcStandard.XCRC12
  commentId: P:Bodu.Security.Cryptography.CrcStandard.XCRC12
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_XCRC12
  name: XCRC12
  nameWithType: CrcStandard.XCRC12
  fullName: Bodu.Security.Cryptography.CrcStandard.XCRC12
- uid: Bodu.Security.Cryptography.CrcStandard.CRC12_DECT*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC12_DECT
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC12_DECT
  name: CRC12_DECT
  nameWithType: CrcStandard.CRC12_DECT
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC12_DECT
- uid: Bodu.Security.Cryptography.CrcStandard.CRC12_DECT
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC12_DECT
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC12_DECT
  name: CRC12_DECT
  nameWithType: CrcStandard.CRC12_DECT
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC12_DECT
- uid: Bodu.Security.Cryptography.CrcStandard.XCRC12*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.XCRC12
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_XCRC12
  name: XCRC12
  nameWithType: CrcStandard.XCRC12
  fullName: Bodu.Security.Cryptography.CrcStandard.XCRC12
- uid: Bodu.Security.Cryptography.CrcStandard.CRC12_GSM*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC12_GSM
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC12_GSM
  name: CRC12_GSM
  nameWithType: CrcStandard.CRC12_GSM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC12_GSM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC12_3GPP
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC12_3GPP
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC12_3GPP
  name: CRC12_3GPP
  nameWithType: CrcStandard.CRC12_3GPP
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC12_3GPP
- uid: Bodu.Security.Cryptography.CrcStandard.CRC12_UMTS*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC12_UMTS
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC12_UMTS
  name: CRC12_UMTS
  nameWithType: CrcStandard.CRC12_UMTS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC12_UMTS
- uid: Bodu.Security.Cryptography.CrcStandard.CRC12_UMTS
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC12_UMTS
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC12_UMTS
  name: CRC12_UMTS
  nameWithType: CrcStandard.CRC12_UMTS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC12_UMTS
- uid: Bodu.Security.Cryptography.CrcStandard.CRC12_3GPP*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC12_3GPP
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC12_3GPP
  name: CRC12_3GPP
  nameWithType: CrcStandard.CRC12_3GPP
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC12_3GPP
- uid: Bodu.Security.Cryptography.CrcStandard.CRC13_BBC*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC13_BBC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC13_BBC
  name: CRC13_BBC
  nameWithType: CrcStandard.CRC13_BBC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC13_BBC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC14_DARC*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC14_DARC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC14_DARC
  name: CRC14_DARC
  nameWithType: CrcStandard.CRC14_DARC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC14_DARC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC14_GSM*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC14_GSM
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC14_GSM
  name: CRC14_GSM
  nameWithType: CrcStandard.CRC14_GSM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC14_GSM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC15
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC15
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC15
  name: CRC15
  nameWithType: CrcStandard.CRC15
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC15
- uid: Bodu.Security.Cryptography.CrcStandard.CRC15_CAN*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC15_CAN
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC15_CAN
  name: CRC15_CAN
  nameWithType: CrcStandard.CRC15_CAN
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC15_CAN
- uid: Bodu.Security.Cryptography.CrcStandard.CRC15_CAN
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC15_CAN
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC15_CAN
  name: CRC15_CAN
  nameWithType: CrcStandard.CRC15_CAN
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC15_CAN
- uid: Bodu.Security.Cryptography.CrcStandard.CRC15*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC15
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC15
  name: CRC15
  nameWithType: CrcStandard.CRC15
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC15
- uid: Bodu.Security.Cryptography.CrcStandard.CRC15_MPT1327*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC15_MPT1327
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC15_MPT1327
  name: CRC15_MPT1327
  nameWithType: CrcStandard.CRC15_MPT1327
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC15_MPT1327
- uid: Bodu.Security.Cryptography.CrcStandard.ARC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.ARC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_ARC
  name: ARC
  nameWithType: CrcStandard.ARC
  fullName: Bodu.Security.Cryptography.CrcStandard.ARC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16
  name: CRC16
  nameWithType: CrcStandard.CRC16
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_LHA
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_LHA
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_LHA
  name: CRC16_LHA
  nameWithType: CrcStandard.CRC16_LHA
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_LHA
- uid: Bodu.Security.Cryptography.CrcStandard.CRCIBM
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRCIBM
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRCIBM
  name: CRCIBM
  nameWithType: CrcStandard.CRCIBM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRCIBM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_ARC*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_ARC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_ARC
  name: CRC16_ARC
  nameWithType: CrcStandard.CRC16_ARC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_ARC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_ARC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ARC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_ARC
  name: CRC16_ARC
  nameWithType: CrcStandard.CRC16_ARC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_ARC
- uid: Bodu.Security.Cryptography.CrcStandard.ARC*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.ARC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_ARC
  name: ARC
  nameWithType: CrcStandard.ARC
  fullName: Bodu.Security.Cryptography.CrcStandard.ARC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16
  name: CRC16
  nameWithType: CrcStandard.CRC16
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_LHA*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_LHA
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_LHA
  name: CRC16_LHA
  nameWithType: CrcStandard.CRC16_LHA
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_LHA
- uid: Bodu.Security.Cryptography.CrcStandard.CRCIBM*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRCIBM
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRCIBM
  name: CRCIBM
  nameWithType: CrcStandard.CRCIBM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRCIBM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_CDMA2000*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_CDMA2000
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_CDMA2000
  name: CRC16_CDMA2000
  nameWithType: CrcStandard.CRC16_CDMA2000
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_CDMA2000
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_CMS*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_CMS
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_CMS
  name: CRC16_CMS
  nameWithType: CrcStandard.CRC16_CMS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_CMS
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_DDS110*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_DDS110
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_DDS110
  name: CRC16_DDS110
  nameWithType: CrcStandard.CRC16_DDS110
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_DDS110
- uid: Bodu.Security.Cryptography.CrcStandard.RCRC16
  commentId: P:Bodu.Security.Cryptography.CrcStandard.RCRC16
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_RCRC16
  name: RCRC16
  nameWithType: CrcStandard.RCRC16
  fullName: Bodu.Security.Cryptography.CrcStandard.RCRC16
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_DECTR*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_DECTR
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_DECTR
  name: CRC16_DECTR
  nameWithType: CrcStandard.CRC16_DECTR
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_DECTR
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_DECTR
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_DECTR
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_DECTR
  name: CRC16_DECTR
  nameWithType: CrcStandard.CRC16_DECTR
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_DECTR
- uid: Bodu.Security.Cryptography.CrcStandard.RCRC16*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.RCRC16
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_RCRC16
  name: RCRC16
  nameWithType: CrcStandard.RCRC16
  fullName: Bodu.Security.Cryptography.CrcStandard.RCRC16
- uid: Bodu.Security.Cryptography.CrcStandard.XCRC16
  commentId: P:Bodu.Security.Cryptography.CrcStandard.XCRC16
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_XCRC16
  name: XCRC16
  nameWithType: CrcStandard.XCRC16
  fullName: Bodu.Security.Cryptography.CrcStandard.XCRC16
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_DECTX*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_DECTX
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_DECTX
  name: CRC16_DECTX
  nameWithType: CrcStandard.CRC16_DECTX
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_DECTX
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_DECTX
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_DECTX
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_DECTX
  name: CRC16_DECTX
  nameWithType: CrcStandard.CRC16_DECTX
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_DECTX
- uid: Bodu.Security.Cryptography.CrcStandard.XCRC16*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.XCRC16
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_XCRC16
  name: XCRC16
  nameWithType: CrcStandard.XCRC16
  fullName: Bodu.Security.Cryptography.CrcStandard.XCRC16
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_DNP*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_DNP
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_DNP
  name: CRC16_DNP
  nameWithType: CrcStandard.CRC16_DNP
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_DNP
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_EN13757*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_EN13757
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_EN13757
  name: CRC16_EN13757
  nameWithType: CrcStandard.CRC16_EN13757
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_EN13757
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_DARC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_DARC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_DARC
  name: CRC16_DARC
  nameWithType: CrcStandard.CRC16_DARC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_DARC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_EPC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_EPC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_EPC
  name: CRC16_EPC
  nameWithType: CrcStandard.CRC16_EPC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_EPC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_EPCC1G2
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_EPCC1G2
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_EPCC1G2
  name: CRC16_EPCC1G2
  nameWithType: CrcStandard.CRC16_EPCC1G2
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_EPCC1G2
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_ICODE
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ICODE
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_ICODE
  name: CRC16_ICODE
  nameWithType: CrcStandard.CRC16_ICODE
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_ICODE
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_GENIBUS*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_GENIBUS
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_GENIBUS
  name: CRC16_GENIBUS
  nameWithType: CrcStandard.CRC16_GENIBUS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_GENIBUS
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_GENIBUS
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_GENIBUS
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_GENIBUS
  name: CRC16_GENIBUS
  nameWithType: CrcStandard.CRC16_GENIBUS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_GENIBUS
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_DARC*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_DARC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_DARC
  name: CRC16_DARC
  nameWithType: CrcStandard.CRC16_DARC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_DARC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_EPC*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_EPC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_EPC
  name: CRC16_EPC
  nameWithType: CrcStandard.CRC16_EPC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_EPC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_EPCC1G2*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_EPCC1G2
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_EPCC1G2
  name: CRC16_EPCC1G2
  nameWithType: CrcStandard.CRC16_EPCC1G2
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_EPCC1G2
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_ICODE*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_ICODE
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_ICODE
  name: CRC16_ICODE
  nameWithType: CrcStandard.CRC16_ICODE
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_ICODE
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_GSM*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_GSM
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_GSM
  name: CRC16_GSM
  nameWithType: CrcStandard.CRC16_GSM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_GSM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_AUTOSAR
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_AUTOSAR
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_AUTOSAR
  name: CRC16_AUTOSAR
  nameWithType: CrcStandard.CRC16_AUTOSAR
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_AUTOSAR
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTFALSE
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTFALSE
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_CCITTFALSE
  name: CRC16_CCITTFALSE
  nameWithType: CrcStandard.CRC16_CCITTFALSE
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTFALSE
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_IBM3740*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_IBM3740
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_IBM3740
  name: CRC16_IBM3740
  nameWithType: CrcStandard.CRC16_IBM3740
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_IBM3740
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_IBM3740
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_IBM3740
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_IBM3740
  name: CRC16_IBM3740
  nameWithType: CrcStandard.CRC16_IBM3740
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_IBM3740
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_AUTOSAR*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_AUTOSAR
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_AUTOSAR
  name: CRC16_AUTOSAR
  nameWithType: CrcStandard.CRC16_AUTOSAR
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_AUTOSAR
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTFALSE*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTFALSE
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_CCITTFALSE
  name: CRC16_CCITTFALSE
  nameWithType: CrcStandard.CRC16_CCITTFALSE
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTFALSE
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOHDLC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ISOHDLC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_ISOHDLC
  name: CRC16_ISOHDLC
  nameWithType: CrcStandard.CRC16_ISOHDLC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOHDLC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433B
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433B
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_ISOIEC144433B
  name: CRC16_ISOIEC144433B
  nameWithType: CrcStandard.CRC16_ISOIEC144433B
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433B
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_X25
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_X25
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_X25
  name: CRC16_X25
  nameWithType: CrcStandard.CRC16_X25
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_X25
- uid: Bodu.Security.Cryptography.CrcStandard.CRCB
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRCB
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRCB
  name: CRCB
  nameWithType: CrcStandard.CRCB
  fullName: Bodu.Security.Cryptography.CrcStandard.CRCB
- uid: Bodu.Security.Cryptography.CrcStandard.X25
  commentId: P:Bodu.Security.Cryptography.CrcStandard.X25
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_X25
  name: X25
  nameWithType: CrcStandard.X25
  fullName: Bodu.Security.Cryptography.CrcStandard.X25
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_IBMSDLC*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_IBMSDLC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_IBMSDLC
  name: CRC16_IBMSDLC
  nameWithType: CrcStandard.CRC16_IBMSDLC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_IBMSDLC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_IBMSDLC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_IBMSDLC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_IBMSDLC
  name: CRC16_IBMSDLC
  nameWithType: CrcStandard.CRC16_IBMSDLC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_IBMSDLC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOHDLC*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_ISOHDLC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_ISOHDLC
  name: CRC16_ISOHDLC
  nameWithType: CrcStandard.CRC16_ISOHDLC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOHDLC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433B*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433B
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_ISOIEC144433B
  name: CRC16_ISOIEC144433B
  nameWithType: CrcStandard.CRC16_ISOIEC144433B
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433B
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_X25*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_X25
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_X25
  name: CRC16_X25
  nameWithType: CrcStandard.CRC16_X25
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_X25
- uid: Bodu.Security.Cryptography.CrcStandard.CRCB*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRCB
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRCB
  name: CRCB
  nameWithType: CrcStandard.CRCB
  fullName: Bodu.Security.Cryptography.CrcStandard.CRCB
- uid: Bodu.Security.Cryptography.CrcStandard.X25*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.X25
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_X25
  name: X25
  nameWithType: CrcStandard.X25
  fullName: Bodu.Security.Cryptography.CrcStandard.X25
- uid: Bodu.Security.Cryptography.CrcStandard.CRCA
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRCA
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRCA
  name: CRCA
  nameWithType: CrcStandard.CRCA
  fullName: Bodu.Security.Cryptography.CrcStandard.CRCA
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433A*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433A
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_ISOIEC144433A
  name: CRC16_ISOIEC144433A
  nameWithType: CrcStandard.CRC16_ISOIEC144433A
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433A
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433A
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433A
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_ISOIEC144433A
  name: CRC16_ISOIEC144433A
  nameWithType: CrcStandard.CRC16_ISOIEC144433A
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_ISOIEC144433A
- uid: Bodu.Security.Cryptography.CrcStandard.CRCA*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRCA
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRCA
  name: CRCA
  nameWithType: CrcStandard.CRCA
  fullName: Bodu.Security.Cryptography.CrcStandard.CRCA
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITT
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_CCITT
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_CCITT
  name: CRC16_CCITT
  nameWithType: CrcStandard.CRC16_CCITT
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITT
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTTRUE
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTTRUE
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_CCITTTRUE
  name: CRC16_CCITTTRUE
  nameWithType: CrcStandard.CRC16_CCITTTRUE
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTTRUE
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_V41LSB
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_V41LSB
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_V41LSB
  name: CRC16_V41LSB
  nameWithType: CrcStandard.CRC16_V41LSB
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_V41LSB
- uid: Bodu.Security.Cryptography.CrcStandard.CRCCCITT
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRCCCITT
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRCCCITT
  name: CRCCCITT
  nameWithType: CrcStandard.CRCCCITT
  fullName: Bodu.Security.Cryptography.CrcStandard.CRCCCITT
- uid: Bodu.Security.Cryptography.CrcStandard.KERMIT
  commentId: P:Bodu.Security.Cryptography.CrcStandard.KERMIT
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_KERMIT
  name: KERMIT
  nameWithType: CrcStandard.KERMIT
  fullName: Bodu.Security.Cryptography.CrcStandard.KERMIT
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_KERMIT*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_KERMIT
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_KERMIT
  name: CRC16_KERMIT
  nameWithType: CrcStandard.CRC16_KERMIT
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_KERMIT
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_KERMIT
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_KERMIT
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_KERMIT
  name: CRC16_KERMIT
  nameWithType: CrcStandard.CRC16_KERMIT
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_KERMIT
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITT*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_CCITT
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_CCITT
  name: CRC16_CCITT
  nameWithType: CrcStandard.CRC16_CCITT
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITT
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTTRUE*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTTRUE
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_CCITTTRUE
  name: CRC16_CCITTTRUE
  nameWithType: CrcStandard.CRC16_CCITTTRUE
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_CCITTTRUE
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_V41LSB*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_V41LSB
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_V41LSB
  name: CRC16_V41LSB
  nameWithType: CrcStandard.CRC16_V41LSB
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_V41LSB
- uid: Bodu.Security.Cryptography.CrcStandard.CRCCCITT*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRCCCITT
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRCCCITT
  name: CRCCCITT
  nameWithType: CrcStandard.CRCCCITT
  fullName: Bodu.Security.Cryptography.CrcStandard.CRCCCITT
- uid: Bodu.Security.Cryptography.CrcStandard.KERMIT*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.KERMIT
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_KERMIT
  name: KERMIT
  nameWithType: CrcStandard.KERMIT
  fullName: Bodu.Security.Cryptography.CrcStandard.KERMIT
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_LJ1200*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_LJ1200
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_LJ1200
  name: CRC16_LJ1200
  nameWithType: CrcStandard.CRC16_LJ1200
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_LJ1200
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_M17*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_M17
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_M17
  name: CRC16_M17
  nameWithType: CrcStandard.CRC16_M17
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_M17
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_MAXIM
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_MAXIM
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_MAXIM
  name: CRC16_MAXIM
  nameWithType: CrcStandard.CRC16_MAXIM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_MAXIM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_MAXIMDOW*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_MAXIMDOW
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_MAXIMDOW
  name: CRC16_MAXIMDOW
  nameWithType: CrcStandard.CRC16_MAXIMDOW
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_MAXIMDOW
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_MAXIMDOW
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_MAXIMDOW
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_MAXIMDOW
  name: CRC16_MAXIMDOW
  nameWithType: CrcStandard.CRC16_MAXIMDOW
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_MAXIMDOW
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_MAXIM*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_MAXIM
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_MAXIM
  name: CRC16_MAXIM
  nameWithType: CrcStandard.CRC16_MAXIM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_MAXIM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_MCRF4XX*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_MCRF4XX
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_MCRF4XX
  name: CRC16_MCRF4XX
  nameWithType: CrcStandard.CRC16_MCRF4XX
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_MCRF4XX
- uid: Bodu.Security.Cryptography.CrcStandard.MODBUS
  commentId: P:Bodu.Security.Cryptography.CrcStandard.MODBUS
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_MODBUS
  name: MODBUS
  nameWithType: CrcStandard.MODBUS
  fullName: Bodu.Security.Cryptography.CrcStandard.MODBUS
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_MODBUS*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_MODBUS
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_MODBUS
  name: CRC16_MODBUS
  nameWithType: CrcStandard.CRC16_MODBUS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_MODBUS
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_MODBUS
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_MODBUS
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_MODBUS
  name: CRC16_MODBUS
  nameWithType: CrcStandard.CRC16_MODBUS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_MODBUS
- uid: Bodu.Security.Cryptography.CrcStandard.MODBUS*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.MODBUS
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_MODBUS
  name: MODBUS
  nameWithType: CrcStandard.MODBUS
  fullName: Bodu.Security.Cryptography.CrcStandard.MODBUS
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_NRSC5*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_NRSC5
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_NRSC5
  name: CRC16_NRSC5
  nameWithType: CrcStandard.CRC16_NRSC5
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_NRSC5
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_OPENSAFETYA*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_OPENSAFETYA
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_OPENSAFETYA
  name: CRC16_OPENSAFETYA
  nameWithType: CrcStandard.CRC16_OPENSAFETYA
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_OPENSAFETYA
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_OPENSAFETYB*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_OPENSAFETYB
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_OPENSAFETYB
  name: CRC16_OPENSAFETYB
  nameWithType: CrcStandard.CRC16_OPENSAFETYB
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_OPENSAFETYB
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_IEC611582
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_IEC611582
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_IEC611582
  name: CRC16_IEC611582
  nameWithType: CrcStandard.CRC16_IEC611582
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_IEC611582
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_PROFIBUS*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_PROFIBUS
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_PROFIBUS
  name: CRC16_PROFIBUS
  nameWithType: CrcStandard.CRC16_PROFIBUS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_PROFIBUS
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_PROFIBUS
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_PROFIBUS
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_PROFIBUS
  name: CRC16_PROFIBUS
  nameWithType: CrcStandard.CRC16_PROFIBUS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_PROFIBUS
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_IEC611582*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_IEC611582
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_IEC611582
  name: CRC16_IEC611582
  nameWithType: CrcStandard.CRC16_IEC611582
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_IEC611582
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_RIELLO*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_RIELLO
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_RIELLO
  name: CRC16_RIELLO
  nameWithType: CrcStandard.CRC16_RIELLO
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_RIELLO
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_AUGCCITT
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_AUGCCITT
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_AUGCCITT
  name: CRC16_AUGCCITT
  nameWithType: CrcStandard.CRC16_AUGCCITT
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_AUGCCITT
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_SPIFUJITSU*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_SPIFUJITSU
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_SPIFUJITSU
  name: CRC16_SPIFUJITSU
  nameWithType: CrcStandard.CRC16_SPIFUJITSU
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_SPIFUJITSU
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_SPIFUJITSU
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_SPIFUJITSU
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_SPIFUJITSU
  name: CRC16_SPIFUJITSU
  nameWithType: CrcStandard.CRC16_SPIFUJITSU
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_SPIFUJITSU
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_AUGCCITT*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_AUGCCITT
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_AUGCCITT
  name: CRC16_AUGCCITT
  nameWithType: CrcStandard.CRC16_AUGCCITT
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_AUGCCITT
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_T10DIF*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_T10DIF
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_T10DIF
  name: CRC16_T10DIF
  nameWithType: CrcStandard.CRC16_T10DIF
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_T10DIF
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_TELEDISK*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_TELEDISK
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_TELEDISK
  name: CRC16_TELEDISK
  nameWithType: CrcStandard.CRC16_TELEDISK
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_TELEDISK
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_TMS37157*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_TMS37157
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_TMS37157
  name: CRC16_TMS37157
  nameWithType: CrcStandard.CRC16_TMS37157
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_TMS37157
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_BUYPASS
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_BUYPASS
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_BUYPASS
  name: CRC16_BUYPASS
  nameWithType: CrcStandard.CRC16_BUYPASS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_BUYPASS
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_VERIFONE
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_VERIFONE
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_VERIFONE
  name: CRC16_VERIFONE
  nameWithType: CrcStandard.CRC16_VERIFONE
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_VERIFONE
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_UMTS*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_UMTS
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_UMTS
  name: CRC16_UMTS
  nameWithType: CrcStandard.CRC16_UMTS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_UMTS
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_UMTS
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_UMTS
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_UMTS
  name: CRC16_UMTS
  nameWithType: CrcStandard.CRC16_UMTS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_UMTS
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_BUYPASS*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_BUYPASS
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_BUYPASS
  name: CRC16_BUYPASS
  nameWithType: CrcStandard.CRC16_BUYPASS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_BUYPASS
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_VERIFONE*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_VERIFONE
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_VERIFONE
  name: CRC16_VERIFONE
  nameWithType: CrcStandard.CRC16_VERIFONE
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_VERIFONE
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_USB*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_USB
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_USB
  name: CRC16_USB
  nameWithType: CrcStandard.CRC16_USB
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_USB
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_ACORN
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_ACORN
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_ACORN
  name: CRC16_ACORN
  nameWithType: CrcStandard.CRC16_ACORN
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_ACORN
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_LTE
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_LTE
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_LTE
  name: CRC16_LTE
  nameWithType: CrcStandard.CRC16_LTE
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_LTE
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_V41MSB
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_V41MSB
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_V41MSB
  name: CRC16_V41MSB
  nameWithType: CrcStandard.CRC16_V41MSB
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_V41MSB
- uid: Bodu.Security.Cryptography.CrcStandard.XMODEM
  commentId: P:Bodu.Security.Cryptography.CrcStandard.XMODEM
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_XMODEM
  name: XMODEM
  nameWithType: CrcStandard.XMODEM
  fullName: Bodu.Security.Cryptography.CrcStandard.XMODEM
- uid: Bodu.Security.Cryptography.CrcStandard.ZMODEM
  commentId: P:Bodu.Security.Cryptography.CrcStandard.ZMODEM
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_ZMODEM
  name: ZMODEM
  nameWithType: CrcStandard.ZMODEM
  fullName: Bodu.Security.Cryptography.CrcStandard.ZMODEM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_XMODEM*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_XMODEM
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_XMODEM
  name: CRC16_XMODEM
  nameWithType: CrcStandard.CRC16_XMODEM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_XMODEM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_XMODEM
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC16_XMODEM
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_XMODEM
  name: CRC16_XMODEM
  nameWithType: CrcStandard.CRC16_XMODEM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_XMODEM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_ACORN*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_ACORN
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_ACORN
  name: CRC16_ACORN
  nameWithType: CrcStandard.CRC16_ACORN
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_ACORN
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_LTE*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_LTE
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_LTE
  name: CRC16_LTE
  nameWithType: CrcStandard.CRC16_LTE
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_LTE
- uid: Bodu.Security.Cryptography.CrcStandard.CRC16_V41MSB*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC16_V41MSB
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC16_V41MSB
  name: CRC16_V41MSB
  nameWithType: CrcStandard.CRC16_V41MSB
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC16_V41MSB
- uid: Bodu.Security.Cryptography.CrcStandard.XMODEM*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.XMODEM
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_XMODEM
  name: XMODEM
  nameWithType: CrcStandard.XMODEM
  fullName: Bodu.Security.Cryptography.CrcStandard.XMODEM
- uid: Bodu.Security.Cryptography.CrcStandard.ZMODEM*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.ZMODEM
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_ZMODEM
  name: ZMODEM
  nameWithType: CrcStandard.ZMODEM
  fullName: Bodu.Security.Cryptography.CrcStandard.ZMODEM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC17_CANFD*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC17_CANFD
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC17_CANFD
  name: CRC17_CANFD
  nameWithType: CrcStandard.CRC17_CANFD
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC17_CANFD
- uid: Bodu.Security.Cryptography.CrcStandard.CRC21_CANFD*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC21_CANFD
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC21_CANFD
  name: CRC21_CANFD
  nameWithType: CrcStandard.CRC21_CANFD
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC21_CANFD
- uid: Bodu.Security.Cryptography.CrcStandard.CRC24_BLE*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC24_BLE
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC24_BLE
  name: CRC24_BLE
  nameWithType: CrcStandard.CRC24_BLE
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC24_BLE
- uid: Bodu.Security.Cryptography.CrcStandard.CRC24_FLEXRAYA*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC24_FLEXRAYA
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC24_FLEXRAYA
  name: CRC24_FLEXRAYA
  nameWithType: CrcStandard.CRC24_FLEXRAYA
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC24_FLEXRAYA
- uid: Bodu.Security.Cryptography.CrcStandard.CRC24_FLEXRAYB*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC24_FLEXRAYB
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC24_FLEXRAYB
  name: CRC24_FLEXRAYB
  nameWithType: CrcStandard.CRC24_FLEXRAYB
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC24_FLEXRAYB
- uid: Bodu.Security.Cryptography.CrcStandard.CRC24_INTERLAKEN*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC24_INTERLAKEN
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC24_INTERLAKEN
  name: CRC24_INTERLAKEN
  nameWithType: CrcStandard.CRC24_INTERLAKEN
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC24_INTERLAKEN
- uid: Bodu.Security.Cryptography.CrcStandard.CRC24_LTEA*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC24_LTEA
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC24_LTEA
  name: CRC24_LTEA
  nameWithType: CrcStandard.CRC24_LTEA
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC24_LTEA
- uid: Bodu.Security.Cryptography.CrcStandard.CRC24_LTEB*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC24_LTEB
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC24_LTEB
  name: CRC24_LTEB
  nameWithType: CrcStandard.CRC24_LTEB
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC24_LTEB
- uid: Bodu.Security.Cryptography.CrcStandard.CRC24
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC24
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC24
  name: CRC24
  nameWithType: CrcStandard.CRC24
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC24
- uid: Bodu.Security.Cryptography.CrcStandard.CRC24_OPENPGP*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC24_OPENPGP
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC24_OPENPGP
  name: CRC24_OPENPGP
  nameWithType: CrcStandard.CRC24_OPENPGP
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC24_OPENPGP
- uid: Bodu.Security.Cryptography.CrcStandard.CRC24_OPENPGP
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC24_OPENPGP
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC24_OPENPGP
  name: CRC24_OPENPGP
  nameWithType: CrcStandard.CRC24_OPENPGP
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC24_OPENPGP
- uid: Bodu.Security.Cryptography.CrcStandard.CRC24*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC24
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC24
  name: CRC24
  nameWithType: CrcStandard.CRC24
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC24
- uid: Bodu.Security.Cryptography.CrcStandard.CRC24_OS9*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC24_OS9
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC24_OS9
  name: CRC24_OS9
  nameWithType: CrcStandard.CRC24_OS9
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC24_OS9
- uid: Bodu.Security.Cryptography.CrcStandard.CRC30_CDMA*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC30_CDMA
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC30_CDMA
  name: CRC30_CDMA
  nameWithType: CrcStandard.CRC30_CDMA
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC30_CDMA
- uid: Bodu.Security.Cryptography.CrcStandard.CRC31_PHILIPS*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC31_PHILIPS
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC31_PHILIPS
  name: CRC31_PHILIPS
  nameWithType: CrcStandard.CRC31_PHILIPS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC31_PHILIPS
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32Q
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32Q
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32Q
  name: CRC32Q
  nameWithType: CrcStandard.CRC32Q
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32Q
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_AIXM*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC32_AIXM
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_AIXM
  name: CRC32_AIXM
  nameWithType: CrcStandard.CRC32_AIXM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_AIXM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_AIXM
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_AIXM
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_AIXM
  name: CRC32_AIXM
  nameWithType: CrcStandard.CRC32_AIXM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_AIXM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32Q*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC32Q
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32Q
  name: CRC32Q
  nameWithType: CrcStandard.CRC32Q
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32Q
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_AUTOSAR*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC32_AUTOSAR
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_AUTOSAR
  name: CRC32_AUTOSAR
  nameWithType: CrcStandard.CRC32_AUTOSAR
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_AUTOSAR
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32D
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32D
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32D
  name: CRC32D
  nameWithType: CrcStandard.CRC32D
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32D
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91D*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91D
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_BASE91D
  name: CRC32_BASE91D
  nameWithType: CrcStandard.CRC32_BASE91D
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91D
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91D
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91D
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_BASE91D
  name: CRC32_BASE91D
  nameWithType: CrcStandard.CRC32_BASE91D
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91D
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32D*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC32D
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32D
  name: CRC32D
  nameWithType: CrcStandard.CRC32D
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32D
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_AAL5
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_AAL5
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_AAL5
  name: CRC32_AAL5
  nameWithType: CrcStandard.CRC32_AAL5
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_AAL5
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_DECTB
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_DECTB
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_DECTB
  name: CRC32_DECTB
  nameWithType: CrcStandard.CRC32_DECTB
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_DECTB
- uid: Bodu.Security.Cryptography.CrcStandard.BCRC32
  commentId: P:Bodu.Security.Cryptography.CrcStandard.BCRC32
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_BCRC32
  name: BCRC32
  nameWithType: CrcStandard.BCRC32
  fullName: Bodu.Security.Cryptography.CrcStandard.BCRC32
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_BZIP2*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC32_BZIP2
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_BZIP2
  name: CRC32_BZIP2
  nameWithType: CrcStandard.CRC32_BZIP2
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_BZIP2
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_BZIP2
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_BZIP2
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_BZIP2
  name: CRC32_BZIP2
  nameWithType: CrcStandard.CRC32_BZIP2
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_BZIP2
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_AAL5*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC32_AAL5
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_AAL5
  name: CRC32_AAL5
  nameWithType: CrcStandard.CRC32_AAL5
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_AAL5
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_DECTB*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC32_DECTB
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_DECTB
  name: CRC32_DECTB
  nameWithType: CrcStandard.CRC32_DECTB
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_DECTB
- uid: Bodu.Security.Cryptography.CrcStandard.BCRC32*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.BCRC32
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_BCRC32
  name: BCRC32
  nameWithType: CrcStandard.BCRC32
  fullName: Bodu.Security.Cryptography.CrcStandard.BCRC32
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_CDROMEDC*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC32_CDROMEDC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_CDROMEDC
  name: CRC32_CDROMEDC
  nameWithType: CrcStandard.CRC32_CDROMEDC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_CDROMEDC
- uid: Bodu.Security.Cryptography.CrcStandard.CKSUM
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CKSUM
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CKSUM
  name: CKSUM
  nameWithType: CrcStandard.CKSUM
  fullName: Bodu.Security.Cryptography.CrcStandard.CKSUM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_POSIX
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_POSIX
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_POSIX
  name: CRC32_POSIX
  nameWithType: CrcStandard.CRC32_POSIX
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_POSIX
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_CKSUM*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC32_CKSUM
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_CKSUM
  name: CRC32_CKSUM
  nameWithType: CrcStandard.CRC32_CKSUM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_CKSUM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_CKSUM
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_CKSUM
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_CKSUM
  name: CRC32_CKSUM
  nameWithType: CrcStandard.CRC32_CKSUM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_CKSUM
- uid: Bodu.Security.Cryptography.CrcStandard.CKSUM*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CKSUM
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CKSUM
  name: CKSUM
  nameWithType: CrcStandard.CKSUM
  fullName: Bodu.Security.Cryptography.CrcStandard.CKSUM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_POSIX*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC32_POSIX
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_POSIX
  name: CRC32_POSIX
  nameWithType: CrcStandard.CRC32_POSIX
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_POSIX
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91C
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91C
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_BASE91C
  name: CRC32_BASE91C
  nameWithType: CrcStandard.CRC32_BASE91C
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91C
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_CASTAGNOLI
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_CASTAGNOLI
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_CASTAGNOLI
  name: CRC32_CASTAGNOLI
  nameWithType: CrcStandard.CRC32_CASTAGNOLI
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_CASTAGNOLI
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_INTERLAKEN
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_INTERLAKEN
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_INTERLAKEN
  name: CRC32_INTERLAKEN
  nameWithType: CrcStandard.CRC32_INTERLAKEN
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_INTERLAKEN
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32C
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32C
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32C
  name: CRC32C
  nameWithType: CrcStandard.CRC32C
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32C
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_ISCSI*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC32_ISCSI
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_ISCSI
  name: CRC32_ISCSI
  nameWithType: CrcStandard.CRC32_ISCSI
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_ISCSI
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_ISCSI
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_ISCSI
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_ISCSI
  name: CRC32_ISCSI
  nameWithType: CrcStandard.CRC32_ISCSI
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_ISCSI
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91C*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91C
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_BASE91C
  name: CRC32_BASE91C
  nameWithType: CrcStandard.CRC32_BASE91C
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_BASE91C
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_CASTAGNOLI*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC32_CASTAGNOLI
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_CASTAGNOLI
  name: CRC32_CASTAGNOLI
  nameWithType: CrcStandard.CRC32_CASTAGNOLI
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_CASTAGNOLI
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_INTERLAKEN*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC32_INTERLAKEN
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_INTERLAKEN
  name: CRC32_INTERLAKEN
  nameWithType: CrcStandard.CRC32_INTERLAKEN
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_INTERLAKEN
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32C*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC32C
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32C
  name: CRC32C
  nameWithType: CrcStandard.CRC32C
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32C
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32
  name: CRC32
  nameWithType: CrcStandard.CRC32
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_ADCCP
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_ADCCP
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_ADCCP
  name: CRC32_ADCCP
  nameWithType: CrcStandard.CRC32_ADCCP
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_ADCCP
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_V42
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_V42
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_V42
  name: CRC32_V42
  nameWithType: CrcStandard.CRC32_V42
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_V42
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_XZ
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_XZ
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_XZ
  name: CRC32_XZ
  nameWithType: CrcStandard.CRC32_XZ
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_XZ
- uid: Bodu.Security.Cryptography.CrcStandard.PKZIP
  commentId: P:Bodu.Security.Cryptography.CrcStandard.PKZIP
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_PKZIP
  name: PKZIP
  nameWithType: CrcStandard.PKZIP
  fullName: Bodu.Security.Cryptography.CrcStandard.PKZIP
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_ISOHDLC*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC32_ISOHDLC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_ISOHDLC
  name: CRC32_ISOHDLC
  nameWithType: CrcStandard.CRC32_ISOHDLC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_ISOHDLC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_ISOHDLC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_ISOHDLC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_ISOHDLC
  name: CRC32_ISOHDLC
  nameWithType: CrcStandard.CRC32_ISOHDLC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_ISOHDLC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC32
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32
  name: CRC32
  nameWithType: CrcStandard.CRC32
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_ADCCP*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC32_ADCCP
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_ADCCP
  name: CRC32_ADCCP
  nameWithType: CrcStandard.CRC32_ADCCP
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_ADCCP
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_V42*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC32_V42
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_V42
  name: CRC32_V42
  nameWithType: CrcStandard.CRC32_V42
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_V42
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_XZ*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC32_XZ
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_XZ
  name: CRC32_XZ
  nameWithType: CrcStandard.CRC32_XZ
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_XZ
- uid: Bodu.Security.Cryptography.CrcStandard.PKZIP*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.PKZIP
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_PKZIP
  name: PKZIP
  nameWithType: CrcStandard.PKZIP
  fullName: Bodu.Security.Cryptography.CrcStandard.PKZIP
- uid: Bodu.Security.Cryptography.CrcStandard.JAMCRC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.JAMCRC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_JAMCRC
  name: JAMCRC
  nameWithType: CrcStandard.JAMCRC
  fullName: Bodu.Security.Cryptography.CrcStandard.JAMCRC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_JAMCRC*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC32_JAMCRC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_JAMCRC
  name: CRC32_JAMCRC
  nameWithType: CrcStandard.CRC32_JAMCRC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_JAMCRC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_JAMCRC
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_JAMCRC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_JAMCRC
  name: CRC32_JAMCRC
  nameWithType: CrcStandard.CRC32_JAMCRC
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_JAMCRC
- uid: Bodu.Security.Cryptography.CrcStandard.JAMCRC*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.JAMCRC
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_JAMCRC
  name: JAMCRC
  nameWithType: CrcStandard.JAMCRC
  fullName: Bodu.Security.Cryptography.CrcStandard.JAMCRC
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_MEF*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC32_MEF
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_MEF
  name: CRC32_MEF
  nameWithType: CrcStandard.CRC32_MEF
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_MEF
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_MPEG2*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC32_MPEG2
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_MPEG2
  name: CRC32_MPEG2
  nameWithType: CrcStandard.CRC32_MPEG2
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_MPEG2
- uid: Bodu.Security.Cryptography.CrcStandard.XFER
  commentId: P:Bodu.Security.Cryptography.CrcStandard.XFER
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_XFER
  name: XFER
  nameWithType: CrcStandard.XFER
  fullName: Bodu.Security.Cryptography.CrcStandard.XFER
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_XFER*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC32_XFER
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_XFER
  name: CRC32_XFER
  nameWithType: CrcStandard.CRC32_XFER
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_XFER
- uid: Bodu.Security.Cryptography.CrcStandard.CRC32_XFER
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC32_XFER
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC32_XFER
  name: CRC32_XFER
  nameWithType: CrcStandard.CRC32_XFER
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC32_XFER
- uid: Bodu.Security.Cryptography.CrcStandard.XFER*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.XFER
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_XFER
  name: XFER
  nameWithType: CrcStandard.XFER
  fullName: Bodu.Security.Cryptography.CrcStandard.XFER
- uid: Bodu.Security.Cryptography.CrcStandard.CRC40_GSM*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC40_GSM
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC40_GSM
  name: CRC40_GSM
  nameWithType: CrcStandard.CRC40_GSM
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC40_GSM
- uid: Bodu.Security.Cryptography.CrcStandard.CRC64
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC64
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC64
  name: CRC64
  nameWithType: CrcStandard.CRC64
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC64
- uid: Bodu.Security.Cryptography.CrcStandard.CRC64_ECMA182*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC64_ECMA182
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC64_ECMA182
  name: CRC64_ECMA182
  nameWithType: CrcStandard.CRC64_ECMA182
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC64_ECMA182
- uid: Bodu.Security.Cryptography.CrcStandard.CRC64_ECMA182
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC64_ECMA182
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC64_ECMA182
  name: CRC64_ECMA182
  nameWithType: CrcStandard.CRC64_ECMA182
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC64_ECMA182
- uid: Bodu.Security.Cryptography.CrcStandard.CRC64*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC64
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC64
  name: CRC64
  nameWithType: CrcStandard.CRC64
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC64
- uid: Bodu.Security.Cryptography.CrcStandard.CRC64_GOISO*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC64_GOISO
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC64_GOISO
  name: CRC64_GOISO
  nameWithType: CrcStandard.CRC64_GOISO
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC64_GOISO
- uid: Bodu.Security.Cryptography.CrcStandard.CRC64_JONES*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC64_JONES
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC64_JONES
  name: CRC64_JONES
  nameWithType: CrcStandard.CRC64_JONES
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC64_JONES
- uid: Bodu.Security.Cryptography.CrcStandard.CRC64_MS*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC64_MS
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC64_MS
  name: CRC64_MS
  nameWithType: CrcStandard.CRC64_MS
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC64_MS
- uid: Bodu.Security.Cryptography.CrcStandard.CRC64_WE*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC64_WE
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC64_WE
  name: CRC64_WE
  nameWithType: CrcStandard.CRC64_WE
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC64_WE
- uid: Bodu.Security.Cryptography.CrcStandard.CRC64_GOECMA
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC64_GOECMA
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC64_GOECMA
  name: CRC64_GOECMA
  nameWithType: CrcStandard.CRC64_GOECMA
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC64_GOECMA
- uid: Bodu.Security.Cryptography.CrcStandard.CRC64_XZ*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC64_XZ
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC64_XZ
  name: CRC64_XZ
  nameWithType: CrcStandard.CRC64_XZ
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC64_XZ
- uid: Bodu.Security.Cryptography.CrcStandard.CRC64_XZ
  commentId: P:Bodu.Security.Cryptography.CrcStandard.CRC64_XZ
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC64_XZ
  name: CRC64_XZ
  nameWithType: CrcStandard.CRC64_XZ
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC64_XZ
- uid: Bodu.Security.Cryptography.CrcStandard.CRC64_GOECMA*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.CRC64_GOECMA
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_CRC64_GOECMA
  name: CRC64_GOECMA
  nameWithType: CrcStandard.CRC64_GOECMA
  fullName: Bodu.Security.Cryptography.CrcStandard.CRC64_GOECMA
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: Bodu.Security.Cryptography.CrcStandard.GetCrcParameters*
  commentId: Overload:Bodu.Security.Cryptography.CrcStandard.GetCrcParameters
  href: Bodu.Security.Cryptography.CrcStandard.html#Bodu_Security_Cryptography_CrcStandard_GetCrcParameters_System_String_
  name: GetCrcParameters
  nameWithType: CrcStandard.GetCrcParameters
  fullName: Bodu.Security.Cryptography.CrcStandard.GetCrcParameters
