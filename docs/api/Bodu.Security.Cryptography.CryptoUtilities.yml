### YamlMime:ManagedReference
items:
- uid: Bodu.Security.Cryptography.CryptoUtilities
  commentId: T:Bodu.Security.Cryptography.CryptoUtilities
  id: CryptoUtilities
  parent: Bodu.Security.Cryptography
  children:
  - Bodu.Security.Cryptography.CryptoUtilities.DepadBlock(System.Security.Cryptography.PaddingMode,System.Int32,System.Byte[],System.Int32,System.Int32)
  - Bodu.Security.Cryptography.CryptoUtilities.DepadBlock(System.Security.Cryptography.PaddingMode,System.Int32,System.ReadOnlySpan{System.Byte},System.Span{System.Byte})
  - Bodu.Security.Cryptography.CryptoUtilities.PadBlock(System.Security.Cryptography.PaddingMode,System.Int32,System.Byte[],System.Int32,System.Int32)
  - Bodu.Security.Cryptography.CryptoUtilities.PadBlock(System.Security.Cryptography.PaddingMode,System.Int32,System.ReadOnlySpan{System.Byte},System.Span{System.Byte})
  - Bodu.Security.Cryptography.CryptoUtilities.TryDepadBlock(System.Security.Cryptography.PaddingMode,System.Int32,System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)
  - Bodu.Security.Cryptography.CryptoUtilities.TryPadBlock(System.Security.Cryptography.PaddingMode,System.Int32,System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)
  langs:
  - csharp
  - vb
  name: CryptoUtilities
  nameWithType: CryptoUtilities
  fullName: Bodu.Security.Cryptography.CryptoUtilities
  type: Class
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CryptoUtilities.ThrowHelper.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: CryptoUtilities
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CryptoUtilities.ThrowHelper.cs
    startLine: 6
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: >-
    Provides general-purpose utility methods used by cryptographic components and implementations. This includes bit manipulation,

    secure random byte generation, and helper functions to ensure compliance with cryptographic constraints such as non-zero padding,

    key generation, or exclusion of reserved byte values.
  remarks: >-
    <p>

    This helper class is intended for internal cryptographic infrastructure, test scaffolding, and algorithm development. It supports

    efficient and secure primitives such as span-based zero-allocation random generation and bit reflection.

    </p>

    <p>

    All random methods use <xref href="System.Security.Cryptography.RandomNumberGenerator.Fill(System.Span%7bSystem.Byte%7d)" data-throw-if-not-resolved="false"></xref> and are optimized for repeatable use in critical paths,

    including optional inlining for performance.

    </p>
  example: []
  syntax:
    content: public static class CryptoUtilities
    content.vb: Public Module CryptoUtilities
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Bodu.Security.Cryptography.CryptoUtilities.TryPadBlock(System.Security.Cryptography.PaddingMode,System.Int32,System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)
  commentId: M:Bodu.Security.Cryptography.CryptoUtilities.TryPadBlock(System.Security.Cryptography.PaddingMode,System.Int32,System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)
  id: TryPadBlock(System.Security.Cryptography.PaddingMode,System.Int32,System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)
  parent: Bodu.Security.Cryptography.CryptoUtilities
  langs:
  - csharp
  - vb
  name: TryPadBlock(PaddingMode, int, ReadOnlySpan<byte>, Span<byte>, out int)
  nameWithType: CryptoUtilities.TryPadBlock(PaddingMode, int, ReadOnlySpan<byte>, Span<byte>, out int)
  fullName: Bodu.Security.Cryptography.CryptoUtilities.TryPadBlock(System.Security.Cryptography.PaddingMode, int, System.ReadOnlySpan<byte>, System.Span<byte>, out int)
  type: Method
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CryptoUtilities.Padding.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: TryPadBlock
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CryptoUtilities.Padding.cs
    startLine: 24
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Attempts to apply padding to the given input buffer using the specified mode.
  example: []
  syntax:
    content: public static bool TryPadBlock(PaddingMode padding, int blockSizeBytes, ReadOnlySpan<byte> source, Span<byte> destination, out int bytesWritten)
    parameters:
    - id: padding
      type: System.Security.Cryptography.PaddingMode
      description: The padding mode to apply.
    - id: blockSizeBytes
      type: System.Int32
      description: The block size in bytes.
    - id: source
      type: System.ReadOnlySpan{System.Byte}
      description: The input buffer to pad.
    - id: destination
      type: System.Span{System.Byte}
      description: The destination span that receives the padded data.
    - id: bytesWritten
      type: System.Int32
      description: The number of bytes written to <code class="paramref">destination</code>.
    return:
      type: System.Boolean
      description: <code>true</code> if padding was successfully applied; otherwise, <code>false</code>.
    content.vb: Public Shared Function TryPadBlock(padding As PaddingMode, blockSizeBytes As Integer, source As ReadOnlySpan(Of Byte), destination As Span(Of Byte), bytesWritten As Integer) As Boolean
  overload: Bodu.Security.Cryptography.CryptoUtilities.TryPadBlock*
  nameWithType.vb: CryptoUtilities.TryPadBlock(PaddingMode, Integer, ReadOnlySpan(Of Byte), Span(Of Byte), Integer)
  fullName.vb: Bodu.Security.Cryptography.CryptoUtilities.TryPadBlock(System.Security.Cryptography.PaddingMode, Integer, System.ReadOnlySpan(Of Byte), System.Span(Of Byte), Integer)
  name.vb: TryPadBlock(PaddingMode, Integer, ReadOnlySpan(Of Byte), Span(Of Byte), Integer)
- uid: Bodu.Security.Cryptography.CryptoUtilities.TryDepadBlock(System.Security.Cryptography.PaddingMode,System.Int32,System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)
  commentId: M:Bodu.Security.Cryptography.CryptoUtilities.TryDepadBlock(System.Security.Cryptography.PaddingMode,System.Int32,System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)
  id: TryDepadBlock(System.Security.Cryptography.PaddingMode,System.Int32,System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)
  parent: Bodu.Security.Cryptography.CryptoUtilities
  langs:
  - csharp
  - vb
  name: TryDepadBlock(PaddingMode, int, ReadOnlySpan<byte>, Span<byte>, out int)
  nameWithType: CryptoUtilities.TryDepadBlock(PaddingMode, int, ReadOnlySpan<byte>, Span<byte>, out int)
  fullName: Bodu.Security.Cryptography.CryptoUtilities.TryDepadBlock(System.Security.Cryptography.PaddingMode, int, System.ReadOnlySpan<byte>, System.Span<byte>, out int)
  type: Method
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CryptoUtilities.Padding.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: TryDepadBlock
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CryptoUtilities.Padding.cs
    startLine: 52
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Attempts to remove padding from the given input buffer using the specified mode.
  example: []
  syntax:
    content: public static bool TryDepadBlock(PaddingMode padding, int blockSizeBytes, ReadOnlySpan<byte> source, Span<byte> destination, out int bytesWritten)
    parameters:
    - id: padding
      type: System.Security.Cryptography.PaddingMode
      description: The padding mode to validate and remove.
    - id: blockSizeBytes
      type: System.Int32
      description: The block size in bytes.
    - id: source
      type: System.ReadOnlySpan{System.Byte}
      description: The padded input buffer.
    - id: destination
      type: System.Span{System.Byte}
      description: The destination span that receives the depadded data.
    - id: bytesWritten
      type: System.Int32
      description: The number of bytes written to <code class="paramref">destination</code>.
    return:
      type: System.Boolean
      description: <code>true</code> if depadding was successful; otherwise, <code>false</code>.
    content.vb: Public Shared Function TryDepadBlock(padding As PaddingMode, blockSizeBytes As Integer, source As ReadOnlySpan(Of Byte), destination As Span(Of Byte), bytesWritten As Integer) As Boolean
  overload: Bodu.Security.Cryptography.CryptoUtilities.TryDepadBlock*
  nameWithType.vb: CryptoUtilities.TryDepadBlock(PaddingMode, Integer, ReadOnlySpan(Of Byte), Span(Of Byte), Integer)
  fullName.vb: Bodu.Security.Cryptography.CryptoUtilities.TryDepadBlock(System.Security.Cryptography.PaddingMode, Integer, System.ReadOnlySpan(Of Byte), System.Span(Of Byte), Integer)
  name.vb: TryDepadBlock(PaddingMode, Integer, ReadOnlySpan(Of Byte), Span(Of Byte), Integer)
- uid: Bodu.Security.Cryptography.CryptoUtilities.PadBlock(System.Security.Cryptography.PaddingMode,System.Int32,System.Byte[],System.Int32,System.Int32)
  commentId: M:Bodu.Security.Cryptography.CryptoUtilities.PadBlock(System.Security.Cryptography.PaddingMode,System.Int32,System.Byte[],System.Int32,System.Int32)
  id: PadBlock(System.Security.Cryptography.PaddingMode,System.Int32,System.Byte[],System.Int32,System.Int32)
  parent: Bodu.Security.Cryptography.CryptoUtilities
  langs:
  - csharp
  - vb
  name: PadBlock(PaddingMode, int, byte[], int, int)
  nameWithType: CryptoUtilities.PadBlock(PaddingMode, int, byte[], int, int)
  fullName: Bodu.Security.Cryptography.CryptoUtilities.PadBlock(System.Security.Cryptography.PaddingMode, int, byte[], int, int)
  type: Method
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CryptoUtilities.Padding.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: PadBlock
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CryptoUtilities.Padding.cs
    startLine: 80
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Applies padding to a block and returns a newly allocated array.
  example: []
  syntax:
    content: public static byte[] PadBlock(PaddingMode padding, int blockSizeBytes, byte[] block, int offset, int count)
    parameters:
    - id: padding
      type: System.Security.Cryptography.PaddingMode
      description: The padding mode to apply.
    - id: blockSizeBytes
      type: System.Int32
      description: The block size in bytes.
    - id: block
      type: System.Byte[]
      description: The input buffer to pad.
    - id: offset
      type: System.Int32
      description: The offset within the buffer to start reading.
    - id: count
      type: System.Int32
      description: The number of bytes to read from the buffer.
    return:
      type: System.Byte[]
      description: A new padded byte array.
    content.vb: Public Shared Function PadBlock(padding As PaddingMode, blockSizeBytes As Integer, block As Byte(), offset As Integer, count As Integer) As Byte()
  overload: Bodu.Security.Cryptography.CryptoUtilities.PadBlock*
  nameWithType.vb: CryptoUtilities.PadBlock(PaddingMode, Integer, Byte(), Integer, Integer)
  fullName.vb: Bodu.Security.Cryptography.CryptoUtilities.PadBlock(System.Security.Cryptography.PaddingMode, Integer, Byte(), Integer, Integer)
  name.vb: PadBlock(PaddingMode, Integer, Byte(), Integer, Integer)
- uid: Bodu.Security.Cryptography.CryptoUtilities.PadBlock(System.Security.Cryptography.PaddingMode,System.Int32,System.ReadOnlySpan{System.Byte},System.Span{System.Byte})
  commentId: M:Bodu.Security.Cryptography.CryptoUtilities.PadBlock(System.Security.Cryptography.PaddingMode,System.Int32,System.ReadOnlySpan{System.Byte},System.Span{System.Byte})
  id: PadBlock(System.Security.Cryptography.PaddingMode,System.Int32,System.ReadOnlySpan{System.Byte},System.Span{System.Byte})
  parent: Bodu.Security.Cryptography.CryptoUtilities
  langs:
  - csharp
  - vb
  name: PadBlock(PaddingMode, int, ReadOnlySpan<byte>, Span<byte>)
  nameWithType: CryptoUtilities.PadBlock(PaddingMode, int, ReadOnlySpan<byte>, Span<byte>)
  fullName: Bodu.Security.Cryptography.CryptoUtilities.PadBlock(System.Security.Cryptography.PaddingMode, int, System.ReadOnlySpan<byte>, System.Span<byte>)
  type: Method
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CryptoUtilities.Padding.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: PadBlock
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CryptoUtilities.Padding.cs
    startLine: 99
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Applies padding to a block using the specified padding mode and writes to the destination span.
  example: []
  syntax:
    content: public static int PadBlock(PaddingMode padding, int blockSizeBytes, ReadOnlySpan<byte> source, Span<byte> destination)
    parameters:
    - id: padding
      type: System.Security.Cryptography.PaddingMode
      description: Padding mode to apply.
    - id: blockSizeBytes
      type: System.Int32
      description: The block size in bytes.
    - id: source
      type: System.ReadOnlySpan{System.Byte}
      description: Input data to pad.
    - id: destination
      type: System.Span{System.Byte}
      description: Destination span for the padded result.
    return:
      type: System.Int32
      description: Total bytes written to the destination span.
    content.vb: Public Shared Function PadBlock(padding As PaddingMode, blockSizeBytes As Integer, source As ReadOnlySpan(Of Byte), destination As Span(Of Byte)) As Integer
  overload: Bodu.Security.Cryptography.CryptoUtilities.PadBlock*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown when the destination span is too small.
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: Thrown if the padding mode is invalid or the input is not aligned.
  nameWithType.vb: CryptoUtilities.PadBlock(PaddingMode, Integer, ReadOnlySpan(Of Byte), Span(Of Byte))
  fullName.vb: Bodu.Security.Cryptography.CryptoUtilities.PadBlock(System.Security.Cryptography.PaddingMode, Integer, System.ReadOnlySpan(Of Byte), System.Span(Of Byte))
  name.vb: PadBlock(PaddingMode, Integer, ReadOnlySpan(Of Byte), Span(Of Byte))
- uid: Bodu.Security.Cryptography.CryptoUtilities.DepadBlock(System.Security.Cryptography.PaddingMode,System.Int32,System.Byte[],System.Int32,System.Int32)
  commentId: M:Bodu.Security.Cryptography.CryptoUtilities.DepadBlock(System.Security.Cryptography.PaddingMode,System.Int32,System.Byte[],System.Int32,System.Int32)
  id: DepadBlock(System.Security.Cryptography.PaddingMode,System.Int32,System.Byte[],System.Int32,System.Int32)
  parent: Bodu.Security.Cryptography.CryptoUtilities
  langs:
  - csharp
  - vb
  name: DepadBlock(PaddingMode, int, byte[], int, int)
  nameWithType: CryptoUtilities.DepadBlock(PaddingMode, int, byte[], int, int)
  fullName: Bodu.Security.Cryptography.CryptoUtilities.DepadBlock(System.Security.Cryptography.PaddingMode, int, byte[], int, int)
  type: Method
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CryptoUtilities.Padding.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: DepadBlock
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CryptoUtilities.Padding.cs
    startLine: 168
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Removes padding from a block and returns a newly allocated array.
  example: []
  syntax:
    content: public static byte[] DepadBlock(PaddingMode padding, int blockSizeBytes, byte[] block, int offset, int count)
    parameters:
    - id: padding
      type: System.Security.Cryptography.PaddingMode
      description: The padding mode used in the block.
    - id: blockSizeBytes
      type: System.Int32
      description: The block size in bytes.
    - id: block
      type: System.Byte[]
      description: The input padded block.
    - id: offset
      type: System.Int32
      description: Offset in the input buffer.
    - id: count
      type: System.Int32
      description: Number of bytes to process.
    return:
      type: System.Byte[]
      description: A new byte array with padding removed.
    content.vb: Public Shared Function DepadBlock(padding As PaddingMode, blockSizeBytes As Integer, block As Byte(), offset As Integer, count As Integer) As Byte()
  overload: Bodu.Security.Cryptography.CryptoUtilities.DepadBlock*
  nameWithType.vb: CryptoUtilities.DepadBlock(PaddingMode, Integer, Byte(), Integer, Integer)
  fullName.vb: Bodu.Security.Cryptography.CryptoUtilities.DepadBlock(System.Security.Cryptography.PaddingMode, Integer, Byte(), Integer, Integer)
  name.vb: DepadBlock(PaddingMode, Integer, Byte(), Integer, Integer)
- uid: Bodu.Security.Cryptography.CryptoUtilities.DepadBlock(System.Security.Cryptography.PaddingMode,System.Int32,System.ReadOnlySpan{System.Byte},System.Span{System.Byte})
  commentId: M:Bodu.Security.Cryptography.CryptoUtilities.DepadBlock(System.Security.Cryptography.PaddingMode,System.Int32,System.ReadOnlySpan{System.Byte},System.Span{System.Byte})
  id: DepadBlock(System.Security.Cryptography.PaddingMode,System.Int32,System.ReadOnlySpan{System.Byte},System.Span{System.Byte})
  parent: Bodu.Security.Cryptography.CryptoUtilities
  langs:
  - csharp
  - vb
  name: DepadBlock(PaddingMode, int, ReadOnlySpan<byte>, Span<byte>)
  nameWithType: CryptoUtilities.DepadBlock(PaddingMode, int, ReadOnlySpan<byte>, Span<byte>)
  fullName: Bodu.Security.Cryptography.CryptoUtilities.DepadBlock(System.Security.Cryptography.PaddingMode, int, System.ReadOnlySpan<byte>, System.Span<byte>)
  type: Method
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/CryptoUtilities.Padding.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: DepadBlock
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/CryptoUtilities.Padding.cs
    startLine: 188
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: Removes padding from a block and writes the depadded data into the destination span.
  example: []
  syntax:
    content: public static int DepadBlock(PaddingMode padding, int blockSizeBytes, ReadOnlySpan<byte> source, Span<byte> destination)
    parameters:
    - id: padding
      type: System.Security.Cryptography.PaddingMode
      description: The padding mode applied to the input data.
    - id: blockSizeBytes
      type: System.Int32
      description: The block size in bytes for validation.
    - id: source
      type: System.ReadOnlySpan{System.Byte}
      description: The padded input data.
    - id: destination
      type: System.Span{System.Byte}
      description: The destination span to receive depadded data.
    return:
      type: System.Int32
      description: The number of unpadded bytes written to <code class="paramref">destination</code>.
    content.vb: Public Shared Function DepadBlock(padding As PaddingMode, blockSizeBytes As Integer, source As ReadOnlySpan(Of Byte), destination As Span(Of Byte)) As Integer
  overload: Bodu.Security.Cryptography.CryptoUtilities.DepadBlock*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: Thrown if the padding is invalid, the source is not block-aligned, or the padding mode is unsupported.
  nameWithType.vb: CryptoUtilities.DepadBlock(PaddingMode, Integer, ReadOnlySpan(Of Byte), Span(Of Byte))
  fullName.vb: Bodu.Security.Cryptography.CryptoUtilities.DepadBlock(System.Security.Cryptography.PaddingMode, Integer, System.ReadOnlySpan(Of Byte), System.Span(Of Byte))
  name.vb: DepadBlock(PaddingMode, Integer, ReadOnlySpan(Of Byte), Span(Of Byte))
references:
- uid: System.Security.Cryptography.RandomNumberGenerator.Fill(System.Span{System.Byte})
  commentId: M:System.Security.Cryptography.RandomNumberGenerator.Fill(System.Span{System.Byte})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.security.cryptography.randomnumbergenerator.fill
  name: Fill(Span<byte>)
  nameWithType: RandomNumberGenerator.Fill(Span<byte>)
  fullName: System.Security.Cryptography.RandomNumberGenerator.Fill(System.Span<byte>)
  nameWithType.vb: RandomNumberGenerator.Fill(Span(Of Byte))
  fullName.vb: System.Security.Cryptography.RandomNumberGenerator.Fill(System.Span(Of Byte))
  name.vb: Fill(Span(Of Byte))
  spec.csharp:
  - uid: System.Security.Cryptography.RandomNumberGenerator.Fill(System.Span{System.Byte})
    name: Fill
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security.cryptography.randomnumbergenerator.fill
  - name: (
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Security.Cryptography.RandomNumberGenerator.Fill(System.Span{System.Byte})
    name: Fill
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security.cryptography.randomnumbergenerator.fill
  - name: (
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  - name: )
- uid: Bodu.Security.Cryptography
  commentId: N:Bodu.Security.Cryptography
  href: Bodu.html
  name: Bodu.Security.Cryptography
  nameWithType: Bodu.Security.Cryptography
  fullName: Bodu.Security.Cryptography
  spec.csharp:
  - uid: Bodu
    name: Bodu
    href: Bodu.html
  - name: .
  - uid: Bodu.Security
    name: Security
    href: Bodu.Security.html
  - name: .
  - uid: Bodu.Security.Cryptography
    name: Cryptography
    href: Bodu.Security.Cryptography.html
  spec.vb:
  - uid: Bodu
    name: Bodu
    href: Bodu.html
  - name: .
  - uid: Bodu.Security
    name: Security
    href: Bodu.Security.html
  - name: .
  - uid: Bodu.Security.Cryptography
    name: Cryptography
    href: Bodu.Security.Cryptography.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Bodu.Security.Cryptography.CryptoUtilities.TryPadBlock*
  commentId: Overload:Bodu.Security.Cryptography.CryptoUtilities.TryPadBlock
  href: Bodu.Security.Cryptography.CryptoUtilities.html#Bodu_Security_Cryptography_CryptoUtilities_TryPadBlock_System_Security_Cryptography_PaddingMode_System_Int32_System_ReadOnlySpan_System_Byte__System_Span_System_Byte__System_Int32__
  name: TryPadBlock
  nameWithType: CryptoUtilities.TryPadBlock
  fullName: Bodu.Security.Cryptography.CryptoUtilities.TryPadBlock
- uid: System.Security.Cryptography.PaddingMode
  commentId: T:System.Security.Cryptography.PaddingMode
  parent: System.Security.Cryptography
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.security.cryptography.paddingmode
  name: PaddingMode
  nameWithType: PaddingMode
  fullName: System.Security.Cryptography.PaddingMode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.ReadOnlySpan{System.Byte}
  commentId: T:System.ReadOnlySpan{System.Byte}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<byte>
  nameWithType: ReadOnlySpan<byte>
  fullName: System.ReadOnlySpan<byte>
  nameWithType.vb: ReadOnlySpan(Of Byte)
  fullName.vb: System.ReadOnlySpan(Of Byte)
  name.vb: ReadOnlySpan(Of Byte)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.Span{System.Byte}
  commentId: T:System.Span{System.Byte}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<byte>
  nameWithType: Span<byte>
  fullName: System.Span<byte>
  nameWithType.vb: Span(Of Byte)
  fullName.vb: System.Span(Of Byte)
  name.vb: Span(Of Byte)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Security.Cryptography
  commentId: N:System.Security.Cryptography
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Security.Cryptography
  nameWithType: System.Security.Cryptography
  fullName: System.Security.Cryptography
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Security
    name: Security
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security
  - name: .
  - uid: System.Security.Cryptography
    name: Cryptography
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security.cryptography
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Security
    name: Security
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security
  - name: .
  - uid: System.Security.Cryptography
    name: Cryptography
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security.cryptography
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Span`1
  commentId: T:System.Span`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<T>
  nameWithType: Span<T>
  fullName: System.Span<T>
  nameWithType.vb: Span(Of T)
  fullName.vb: System.Span(Of T)
  name.vb: Span(Of T)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Bodu.Security.Cryptography.CryptoUtilities.TryDepadBlock*
  commentId: Overload:Bodu.Security.Cryptography.CryptoUtilities.TryDepadBlock
  href: Bodu.Security.Cryptography.CryptoUtilities.html#Bodu_Security_Cryptography_CryptoUtilities_TryDepadBlock_System_Security_Cryptography_PaddingMode_System_Int32_System_ReadOnlySpan_System_Byte__System_Span_System_Byte__System_Int32__
  name: TryDepadBlock
  nameWithType: CryptoUtilities.TryDepadBlock
  fullName: Bodu.Security.Cryptography.CryptoUtilities.TryDepadBlock
- uid: Bodu.Security.Cryptography.CryptoUtilities.PadBlock*
  commentId: Overload:Bodu.Security.Cryptography.CryptoUtilities.PadBlock
  href: Bodu.Security.Cryptography.CryptoUtilities.html#Bodu_Security_Cryptography_CryptoUtilities_PadBlock_System_Security_Cryptography_PaddingMode_System_Int32_System_Byte___System_Int32_System_Int32_
  name: PadBlock
  nameWithType: CryptoUtilities.PadBlock
  fullName: Bodu.Security.Cryptography.CryptoUtilities.PadBlock
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Security.Cryptography.CryptographicException
  commentId: T:System.Security.Cryptography.CryptographicException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.security.cryptography.cryptographicexception
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: Bodu.Security.Cryptography.CryptoUtilities.DepadBlock*
  commentId: Overload:Bodu.Security.Cryptography.CryptoUtilities.DepadBlock
  href: Bodu.Security.Cryptography.CryptoUtilities.html#Bodu_Security_Cryptography_CryptoUtilities_DepadBlock_System_Security_Cryptography_PaddingMode_System_Int32_System_Byte___System_Int32_System_Int32_
  name: DepadBlock
  nameWithType: CryptoUtilities.DepadBlock
  fullName: Bodu.Security.Cryptography.CryptoUtilities.DepadBlock
