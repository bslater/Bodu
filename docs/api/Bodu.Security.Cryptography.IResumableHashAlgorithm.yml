### YamlMime:ManagedReference
items:
- uid: Bodu.Security.Cryptography.IResumableHashAlgorithm
  commentId: T:Bodu.Security.Cryptography.IResumableHashAlgorithm
  id: IResumableHashAlgorithm
  parent: Bodu.Security.Cryptography
  children:
  - Bodu.Security.Cryptography.IResumableHashAlgorithm.ComputeHashFrom(System.Byte[],System.Byte[])
  - Bodu.Security.Cryptography.IResumableHashAlgorithm.ComputeHashFrom(System.Byte[],System.Byte[],System.Int32,System.Int32)
  - Bodu.Security.Cryptography.IResumableHashAlgorithm.ComputeHashFrom(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  - Bodu.Security.Cryptography.IResumableHashAlgorithm.TryComputeHashFrom(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)
  langs:
  - csharp
  - vb
  name: IResumableHashAlgorithm
  nameWithType: IResumableHashAlgorithm
  fullName: Bodu.Security.Cryptography.IResumableHashAlgorithm
  type: Interface
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/IResumableHashAlgorithm.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: IResumableHashAlgorithm
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/IResumableHashAlgorithm.cs
    startLine: 18
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: >-
    Represents a hash algorithm that supports resuming a previously finalized hash state and continuing the hash computation with

    additional input data.
  remarks: >-
    This interface is intended for use with non-cryptographic or stateful hash algorithms (such as CRC, FNV, or Jenkins) that allow the

    internal state to be reconstructed from a finalized hash output. Implementations must reverse any finalization steps—such as XOR-out

    or reflection—before resuming the hash process.
  example: []
  syntax:
    content: public interface IResumableHashAlgorithm
    content.vb: Public Interface IResumableHashAlgorithm
  extensionMethods:
  - Bodu.Security.Cryptography.IResumableHashAlgorithm.Bodu.Extensions.NumericExtensions.GetBytes``1(System.Boolean)
- uid: Bodu.Security.Cryptography.IResumableHashAlgorithm.TryComputeHashFrom(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)
  commentId: M:Bodu.Security.Cryptography.IResumableHashAlgorithm.TryComputeHashFrom(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)
  id: TryComputeHashFrom(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)
  parent: Bodu.Security.Cryptography.IResumableHashAlgorithm
  langs:
  - csharp
  - vb
  name: TryComputeHashFrom(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, out int)
  nameWithType: IResumableHashAlgorithm.TryComputeHashFrom(ReadOnlySpan<byte>, ReadOnlySpan<byte>, Span<byte>, out int)
  fullName: Bodu.Security.Cryptography.IResumableHashAlgorithm.TryComputeHashFrom(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>, System.Span<byte>, out int)
  type: Method
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/IResumableHashAlgorithm.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: TryComputeHashFrom
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/IResumableHashAlgorithm.cs
    startLine: 33
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: >-
    Resumes a hash computation from a previously finalized hash value, processes additional input, and writes the new finalized hash

    to the specified destination span.
  example: []
  syntax:
    content: bool TryComputeHashFrom(ReadOnlySpan<byte> previousHash, ReadOnlySpan<byte> newData, Span<byte> destination, out int bytesWritten)
    parameters:
    - id: previousHash
      type: System.ReadOnlySpan{System.Byte}
      description: The previously finalized hash value to resume from.
    - id: newData
      type: System.ReadOnlySpan{System.Byte}
      description: The additional input data to include in the resumed hash calculation.
    - id: destination
      type: System.Span{System.Byte}
      description: The destination buffer to write the finalized hash value to.
    - id: bytesWritten
      type: System.Int32
      description: Outputs the number of bytes written to the destination buffer.
    return:
      type: System.Boolean
      description: >-
        <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the resumed and finalized hash was written successfully; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if the

        destination span was too small.
    content.vb: Function TryComputeHashFrom(previousHash As ReadOnlySpan(Of Byte), newData As ReadOnlySpan(Of Byte), destination As Span(Of Byte), bytesWritten As Integer) As Boolean
  overload: Bodu.Security.Cryptography.IResumableHashAlgorithm.TryComputeHashFrom*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if the <code class="paramref">previousHash</code> length does not match <xref href="System.Security.Cryptography.HashAlgorithm.HashSize" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: IResumableHashAlgorithm.TryComputeHashFrom(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), Integer)
  fullName.vb: Bodu.Security.Cryptography.IResumableHashAlgorithm.TryComputeHashFrom(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte), System.Span(Of Byte), Integer)
  name.vb: TryComputeHashFrom(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte), Span(Of Byte), Integer)
- uid: Bodu.Security.Cryptography.IResumableHashAlgorithm.ComputeHashFrom(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  commentId: M:Bodu.Security.Cryptography.IResumableHashAlgorithm.ComputeHashFrom(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  id: ComputeHashFrom(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})
  parent: Bodu.Security.Cryptography.IResumableHashAlgorithm
  langs:
  - csharp
  - vb
  name: ComputeHashFrom(ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  nameWithType: IResumableHashAlgorithm.ComputeHashFrom(ReadOnlySpan<byte>, ReadOnlySpan<byte>)
  fullName: Bodu.Security.Cryptography.IResumableHashAlgorithm.ComputeHashFrom(System.ReadOnlySpan<byte>, System.ReadOnlySpan<byte>)
  type: Method
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/IResumableHashAlgorithm.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: ComputeHashFrom
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/IResumableHashAlgorithm.cs
    startLine: 47
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: >-
    Resumes a hash computation from a previously finalized hash value and processes additional input, returning the new finalized

    hash result as a byte array.
  example: []
  syntax:
    content: byte[] ComputeHashFrom(ReadOnlySpan<byte> previousHash, ReadOnlySpan<byte> newData)
    parameters:
    - id: previousHash
      type: System.ReadOnlySpan{System.Byte}
      description: The previously finalized hash value to resume from.
    - id: newData
      type: System.ReadOnlySpan{System.Byte}
      description: The additional input data to include in the resumed hash calculation.
    return:
      type: System.Byte[]
      description: A byte array containing the new finalized hash result.
    content.vb: Function ComputeHashFrom(previousHash As ReadOnlySpan(Of Byte), newData As ReadOnlySpan(Of Byte)) As Byte()
  overload: Bodu.Security.Cryptography.IResumableHashAlgorithm.ComputeHashFrom*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if the <code class="paramref">previousHash</code> length does not match <xref href="System.Security.Cryptography.HashAlgorithm.HashSize" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: IResumableHashAlgorithm.ComputeHashFrom(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
  fullName.vb: Bodu.Security.Cryptography.IResumableHashAlgorithm.ComputeHashFrom(System.ReadOnlySpan(Of Byte), System.ReadOnlySpan(Of Byte))
  name.vb: ComputeHashFrom(ReadOnlySpan(Of Byte), ReadOnlySpan(Of Byte))
- uid: Bodu.Security.Cryptography.IResumableHashAlgorithm.ComputeHashFrom(System.Byte[],System.Byte[])
  commentId: M:Bodu.Security.Cryptography.IResumableHashAlgorithm.ComputeHashFrom(System.Byte[],System.Byte[])
  id: ComputeHashFrom(System.Byte[],System.Byte[])
  parent: Bodu.Security.Cryptography.IResumableHashAlgorithm
  langs:
  - csharp
  - vb
  name: ComputeHashFrom(byte[], byte[])
  nameWithType: IResumableHashAlgorithm.ComputeHashFrom(byte[], byte[])
  fullName: Bodu.Security.Cryptography.IResumableHashAlgorithm.ComputeHashFrom(byte[], byte[])
  type: Method
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/IResumableHashAlgorithm.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: ComputeHashFrom
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/IResumableHashAlgorithm.cs
    startLine: 57
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: >-
    Resumes a hash computation from a previously finalized hash value and processes additional input, returning the new finalized

    hash result as a byte array.
  example: []
  syntax:
    content: byte[] ComputeHashFrom(byte[] previousHash, byte[] newData)
    parameters:
    - id: previousHash
      type: System.Byte[]
      description: The previously finalized hash value to resume from.
    - id: newData
      type: System.Byte[]
      description: The additional input data to include in the resumed hash calculation.
    return:
      type: System.Byte[]
      description: A byte array containing the new finalized hash result.
    content.vb: Function ComputeHashFrom(previousHash As Byte(), newData As Byte()) As Byte()
  overload: Bodu.Security.Cryptography.IResumableHashAlgorithm.ComputeHashFrom*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if the <code class="paramref">previousHash</code> length does not match <xref href="System.Security.Cryptography.HashAlgorithm.HashSize" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: IResumableHashAlgorithm.ComputeHashFrom(Byte(), Byte())
  fullName.vb: Bodu.Security.Cryptography.IResumableHashAlgorithm.ComputeHashFrom(Byte(), Byte())
  name.vb: ComputeHashFrom(Byte(), Byte())
- uid: Bodu.Security.Cryptography.IResumableHashAlgorithm.ComputeHashFrom(System.Byte[],System.Byte[],System.Int32,System.Int32)
  commentId: M:Bodu.Security.Cryptography.IResumableHashAlgorithm.ComputeHashFrom(System.Byte[],System.Byte[],System.Int32,System.Int32)
  id: ComputeHashFrom(System.Byte[],System.Byte[],System.Int32,System.Int32)
  parent: Bodu.Security.Cryptography.IResumableHashAlgorithm
  langs:
  - csharp
  - vb
  name: ComputeHashFrom(byte[], byte[], int, int)
  nameWithType: IResumableHashAlgorithm.ComputeHashFrom(byte[], byte[], int, int)
  fullName: Bodu.Security.Cryptography.IResumableHashAlgorithm.ComputeHashFrom(byte[], byte[], int, int)
  type: Method
  source:
    remote:
      path: Bodu.Security.Cryptography/src/Security.Cryptography/IResumableHashAlgorithm.cs
      branch: master
      repo: https://github.com/bslater/Bodu.git
    id: ComputeHashFrom
    path: ../Bodu.Security.Cryptography/src/Security.Cryptography/IResumableHashAlgorithm.cs
    startLine: 72
  assemblies:
  - Bodu.Security.Cryptography
  namespace: Bodu.Security.Cryptography
  summary: >-
    Resumes a hash computation from a previously finalized hash value and processes a specified range of new data, returning the new

    finalized hash result as a byte array.
  example: []
  syntax:
    content: byte[] ComputeHashFrom(byte[] previousHash, byte[] newData, int offset, int length)
    parameters:
    - id: previousHash
      type: System.Byte[]
      description: The previously finalized hash value to resume from.
    - id: newData
      type: System.Byte[]
      description: The buffer containing additional input data.
    - id: offset
      type: System.Int32
      description: The zero-based offset into <code class="paramref">newData</code> at which to begin reading data.
    - id: length
      type: System.Int32
      description: The number of bytes to read from <code class="paramref">newData</code>.
    return:
      type: System.Byte[]
      description: A byte array containing the new finalized hash result.
    content.vb: Function ComputeHashFrom(previousHash As Byte(), newData As Byte(), offset As Integer, length As Integer) As Byte()
  overload: Bodu.Security.Cryptography.IResumableHashAlgorithm.ComputeHashFrom*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      Thrown if the <code class="paramref">previousHash</code> length does not match <xref href="System.Security.Cryptography.HashAlgorithm.HashSize" data-throw-if-not-resolved="false"></xref>, or if the offset and

      length exceed the bounds of <code class="paramref">newData</code>.
  nameWithType.vb: IResumableHashAlgorithm.ComputeHashFrom(Byte(), Byte(), Integer, Integer)
  fullName.vb: Bodu.Security.Cryptography.IResumableHashAlgorithm.ComputeHashFrom(Byte(), Byte(), Integer, Integer)
  name.vb: ComputeHashFrom(Byte(), Byte(), Integer, Integer)
references:
- uid: Bodu.Security.Cryptography
  commentId: N:Bodu.Security.Cryptography
  href: Bodu.html
  name: Bodu.Security.Cryptography
  nameWithType: Bodu.Security.Cryptography
  fullName: Bodu.Security.Cryptography
  spec.csharp:
  - uid: Bodu
    name: Bodu
    href: Bodu.html
  - name: .
  - uid: Bodu.Security
    name: Security
    href: Bodu.Security.html
  - name: .
  - uid: Bodu.Security.Cryptography
    name: Cryptography
    href: Bodu.Security.Cryptography.html
  spec.vb:
  - uid: Bodu
    name: Bodu
    href: Bodu.html
  - name: .
  - uid: Bodu.Security
    name: Security
    href: Bodu.Security.html
  - name: .
  - uid: Bodu.Security.Cryptography
    name: Cryptography
    href: Bodu.Security.Cryptography.html
- uid: Bodu.Security.Cryptography.IResumableHashAlgorithm.Bodu.Extensions.NumericExtensions.GetBytes``1(System.Boolean)
  commentId: M:Bodu.Extensions.NumericExtensions.GetBytes``1(``0,System.Boolean)
  parent: Bodu.Extensions.NumericExtensions
  definition: Bodu.Extensions.NumericExtensions.GetBytes``1(``0,System.Boolean)
  href: Bodu.Extensions.NumericExtensions.html#Bodu_Extensions_NumericExtensions_GetBytes__1___0_System_Boolean_
  name: GetBytes<IResumableHashAlgorithm>(IResumableHashAlgorithm, bool)
  nameWithType: NumericExtensions.GetBytes<IResumableHashAlgorithm>(IResumableHashAlgorithm, bool)
  fullName: Bodu.Extensions.NumericExtensions.GetBytes<Bodu.Security.Cryptography.IResumableHashAlgorithm>(Bodu.Security.Cryptography.IResumableHashAlgorithm, bool)
  nameWithType.vb: NumericExtensions.GetBytes(Of IResumableHashAlgorithm)(IResumableHashAlgorithm, Boolean)
  fullName.vb: Bodu.Extensions.NumericExtensions.GetBytes(Of Bodu.Security.Cryptography.IResumableHashAlgorithm)(Bodu.Security.Cryptography.IResumableHashAlgorithm, Boolean)
  name.vb: GetBytes(Of IResumableHashAlgorithm)(IResumableHashAlgorithm, Boolean)
  spec.csharp:
  - uid: Bodu.Extensions.NumericExtensions.GetBytes``1(Bodu.Security.Cryptography.IResumableHashAlgorithm,System.Boolean)
    name: GetBytes
    href: Bodu.Extensions.NumericExtensions.html#Bodu_Extensions_NumericExtensions_GetBytes__1___0_System_Boolean_
  - name: <
  - uid: Bodu.Security.Cryptography.IResumableHashAlgorithm
    name: IResumableHashAlgorithm
    href: Bodu.Security.Cryptography.IResumableHashAlgorithm.html
  - name: '>'
  - name: (
  - uid: Bodu.Security.Cryptography.IResumableHashAlgorithm
    name: IResumableHashAlgorithm
    href: Bodu.Security.Cryptography.IResumableHashAlgorithm.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Bodu.Extensions.NumericExtensions.GetBytes``1(Bodu.Security.Cryptography.IResumableHashAlgorithm,System.Boolean)
    name: GetBytes
    href: Bodu.Extensions.NumericExtensions.html#Bodu_Extensions_NumericExtensions_GetBytes__1___0_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - uid: Bodu.Security.Cryptography.IResumableHashAlgorithm
    name: IResumableHashAlgorithm
    href: Bodu.Security.Cryptography.IResumableHashAlgorithm.html
  - name: )
  - name: (
  - uid: Bodu.Security.Cryptography.IResumableHashAlgorithm
    name: IResumableHashAlgorithm
    href: Bodu.Security.Cryptography.IResumableHashAlgorithm.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Bodu.Extensions.NumericExtensions.GetBytes``1(``0,System.Boolean)
  commentId: M:Bodu.Extensions.NumericExtensions.GetBytes``1(``0,System.Boolean)
  isExternal: true
  href: Bodu.Extensions.NumericExtensions.html#Bodu_Extensions_NumericExtensions_GetBytes__1___0_System_Boolean_
  name: GetBytes<T>(T, bool)
  nameWithType: NumericExtensions.GetBytes<T>(T, bool)
  fullName: Bodu.Extensions.NumericExtensions.GetBytes<T>(T, bool)
  nameWithType.vb: NumericExtensions.GetBytes(Of T)(T, Boolean)
  fullName.vb: Bodu.Extensions.NumericExtensions.GetBytes(Of T)(T, Boolean)
  name.vb: GetBytes(Of T)(T, Boolean)
  spec.csharp:
  - uid: Bodu.Extensions.NumericExtensions.GetBytes``1(``0,System.Boolean)
    name: GetBytes
    href: Bodu.Extensions.NumericExtensions.html#Bodu_Extensions_NumericExtensions_GetBytes__1___0_System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Bodu.Extensions.NumericExtensions.GetBytes``1(``0,System.Boolean)
    name: GetBytes
    href: Bodu.Extensions.NumericExtensions.html#Bodu_Extensions_NumericExtensions_GetBytes__1___0_System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Bodu.Extensions.NumericExtensions
  commentId: T:Bodu.Extensions.NumericExtensions
  parent: Bodu.Extensions
  href: Bodu.Extensions.NumericExtensions.html
  name: NumericExtensions
  nameWithType: NumericExtensions
  fullName: Bodu.Extensions.NumericExtensions
- uid: Bodu.Extensions
  commentId: N:Bodu.Extensions
  href: Bodu.html
  name: Bodu.Extensions
  nameWithType: Bodu.Extensions
  fullName: Bodu.Extensions
  spec.csharp:
  - uid: Bodu
    name: Bodu
    href: Bodu.html
  - name: .
  - uid: Bodu.Extensions
    name: Extensions
    href: Bodu.Extensions.html
  spec.vb:
  - uid: Bodu
    name: Bodu
    href: Bodu.html
  - name: .
  - uid: Bodu.Extensions
    name: Extensions
    href: Bodu.Extensions.html
- uid: System.Security.Cryptography.HashAlgorithm.HashSize
  commentId: P:System.Security.Cryptography.HashAlgorithm.HashSize
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.security.cryptography.hashalgorithm.hashsize
  name: HashSize
  nameWithType: HashAlgorithm.HashSize
  fullName: System.Security.Cryptography.HashAlgorithm.HashSize
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: Bodu.Security.Cryptography.IResumableHashAlgorithm.TryComputeHashFrom*
  commentId: Overload:Bodu.Security.Cryptography.IResumableHashAlgorithm.TryComputeHashFrom
  href: Bodu.Security.Cryptography.IResumableHashAlgorithm.html#Bodu_Security_Cryptography_IResumableHashAlgorithm_TryComputeHashFrom_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__System_Span_System_Byte__System_Int32__
  name: TryComputeHashFrom
  nameWithType: IResumableHashAlgorithm.TryComputeHashFrom
  fullName: Bodu.Security.Cryptography.IResumableHashAlgorithm.TryComputeHashFrom
- uid: System.ReadOnlySpan{System.Byte}
  commentId: T:System.ReadOnlySpan{System.Byte}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<byte>
  nameWithType: ReadOnlySpan<byte>
  fullName: System.ReadOnlySpan<byte>
  nameWithType.vb: ReadOnlySpan(Of Byte)
  fullName.vb: System.ReadOnlySpan(Of Byte)
  name.vb: ReadOnlySpan(Of Byte)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.Span{System.Byte}
  commentId: T:System.Span{System.Byte}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<byte>
  nameWithType: Span<byte>
  fullName: System.Span<byte>
  nameWithType.vb: Span(Of Byte)
  fullName.vb: System.Span(Of Byte)
  name.vb: Span(Of Byte)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Security.Cryptography.HashAlgorithm
  commentId: T:System.Security.Cryptography.HashAlgorithm
  parent: System.Security.Cryptography
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.security.cryptography.hashalgorithm
  name: HashAlgorithm
  nameWithType: HashAlgorithm
  fullName: System.Security.Cryptography.HashAlgorithm
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Span`1
  commentId: T:System.Span`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<T>
  nameWithType: Span<T>
  fullName: System.Span<T>
  nameWithType.vb: Span(Of T)
  fullName.vb: System.Span(Of T)
  name.vb: Span(Of T)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Security.Cryptography
  commentId: N:System.Security.Cryptography
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Security.Cryptography
  nameWithType: System.Security.Cryptography
  fullName: System.Security.Cryptography
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Security
    name: Security
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security
  - name: .
  - uid: System.Security.Cryptography
    name: Cryptography
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security.cryptography
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Security
    name: Security
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security
  - name: .
  - uid: System.Security.Cryptography
    name: Cryptography
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security.cryptography
- uid: Bodu.Security.Cryptography.IResumableHashAlgorithm.ComputeHashFrom*
  commentId: Overload:Bodu.Security.Cryptography.IResumableHashAlgorithm.ComputeHashFrom
  href: Bodu.Security.Cryptography.IResumableHashAlgorithm.html#Bodu_Security_Cryptography_IResumableHashAlgorithm_ComputeHashFrom_System_ReadOnlySpan_System_Byte__System_ReadOnlySpan_System_Byte__
  name: ComputeHashFrom
  nameWithType: IResumableHashAlgorithm.ComputeHashFrom
  fullName: Bodu.Security.Cryptography.IResumableHashAlgorithm.ComputeHashFrom
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
